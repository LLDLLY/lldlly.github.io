<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>husky + lint-staged + commitlint</title>
      <link href="/2022/09/27/lint-commitlint/"/>
      <url>/2022/09/27/lint-commitlint/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此前该部分内容记录在 <a href="/2022/01/17/create-react-app2/#%E4%B8%83-husky-lint-staged">create-react-app配置记录</a>，随着husky6+后的更新，配置有很大的改变，特此新开一篇文章记录配置方法。</p><p>文档直通车： </p><ul><li><a href="https://github.com/typicode/husky">husky</a></li><li><a href="https://github.com/okonet/lint-staged">lint-staged</a></li><li><a href="https://github.com/conventional-changelog/commitlint">commitlint</a></li><li><a href="https://github.com/eslint/eslint">eslint</a></li><li><a href="https://github.com/prettier/prettier">prettier</a></li></ul><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install husky lint-staged @commitlint/cli prettier -D</span><br></pre></td></tr></table></figure><h2 id="配置husky"><a href="#配置husky" class="headerlink" title="配置husky"></a>配置husky</h2><ol><li>给 <code>package.json</code> 增加 <code>prepare</code>命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm set-script prepare &quot;husky install&quot; </span><br><span class="line">npm run prepare</span><br></pre></td></tr></table></figure><p>运行完会在<code>package.json</code>中:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">+   <span class="attr">&quot;prepare&quot;</span><span class="punctuation">:</span> <span class="string">&quot;husky install&quot;</span><span class="punctuation">,</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加 pre-commit hook</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm <span class="built_in">test</span> 预提交 需要执行的命令，所以后面配置过程中此处还会被修改</span></span><br><span class="line">npx husky add .husky/pre-commit &quot;npm test&quot; </span><br><span class="line">git add .husky/pre-commit</span><br></pre></td></tr></table></figure><p>以上命令运行完项目根目录下会生成一个<code>.husky</code>文件夹，并生成一个<code>pre-commit</code>文件，里面内容如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env sh</span></span><br><span class="line">. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</span><br><span class="line"></span><br><span class="line">npm test</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置lint-staged"><a href="#配置lint-staged" class="headerlink" title="配置lint-staged"></a>配置lint-staged</h2><p>让<code>lint-staged</code>帮助去做eslint和prettier；</p><p>在<code>.husky</code>文件夹下新建<code>.lintstagedrc.js</code>文件，这个文件地址可以随意放置，也可以放在根目录下，内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="string">&quot;*.&#123;vue,js,jsx,ts,tsx&#125;&quot;</span>: [<span class="string">&quot;eslint --fix&quot;</span>, <span class="string">&quot;prettier --write&quot;</span>],</span><br><span class="line">  <span class="string">&quot;*.&#123;scss,less,html,md&#125;&quot;</span>: [<span class="string">&quot;prettier --write&quot;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>package.json</code>中增加命令</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;lint:lint-staged&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lint-staged --config ./.husky/.lintstagedrc.js&quot;</span></span><br></pre></td></tr></table></figure><p>去<code>.husky/pre-commit</code>中将之前生成的<code>npm test</code> 命令修改成<code>npm run lint:lint-staged</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env sh</span></span><br><span class="line">. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</span><br><span class="line"></span><br><span class="line">npm run lint:lint-staged</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置commitlint"><a href="#配置commitlint" class="headerlink" title="配置commitlint"></a>配置commitlint</h2><p> 项目根目录下新增<code>.commitlintrc.js</code>:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">parserPreset</span>: &#123;</span><br><span class="line">    <span class="attr">parserOpts</span>: &#123;</span><br><span class="line">      <span class="attr">headerPattern</span>: <span class="regexp">/^(\w*)(?:\((.*)\))?:\s(.*)$/</span>,</span><br><span class="line">      <span class="attr">headerCorrespondence</span>: [<span class="string">&quot;type&quot;</span>, <span class="string">&quot;scope&quot;</span>, <span class="string">&quot;subject&quot;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type-empty&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;never&quot;</span>],</span><br><span class="line">    <span class="string">&quot;type-case&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;always&quot;</span>, <span class="string">&quot;lower-case&quot;</span>],</span><br><span class="line">    <span class="string">&quot;subject-empty&quot;</span>: [<span class="number">2</span>, <span class="string">&quot;never&quot;</span>],</span><br><span class="line">    <span class="string">&quot;type-enum&quot;</span>: [</span><br><span class="line">      <span class="number">2</span>,</span><br><span class="line">      <span class="string">&quot;always&quot;</span>,</span><br><span class="line">      [</span><br><span class="line">        <span class="string">&quot;feat&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fix&quot;</span>,</span><br><span class="line">        <span class="string">&quot;docs&quot;</span>,</span><br><span class="line">        <span class="string">&quot;style&quot;</span>,</span><br><span class="line">        <span class="string">&quot;refactor&quot;</span>,</span><br><span class="line">        <span class="string">&quot;test&quot;</span>,</span><br><span class="line">        <span class="string">&quot;chore&quot;</span>,</span><br><span class="line">        <span class="string">&quot;release&quot;</span>,</span><br><span class="line">        <span class="string">&quot;revert&quot;</span>,</span><br><span class="line">      ],</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加 commit-msg hook:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx husky add .husky/commit-msg  &quot;npx --no -- commitlint --edit $&#123;1&#125;&quot;</span><br></pre></td></tr></table></figure><p>命令执行之后<code>.husky</code> 文件夹下会生成一个叫<code>commit-msg</code>的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env sh</span></span><br><span class="line">. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</span><br><span class="line"></span><br><span class="line">npx --no -- commitlint --edit </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置完毕"><a href="#配置完毕" class="headerlink" title="配置完毕"></a>配置完毕</h2><p>配置成功，git提交控制台会显示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">xxxxx % git commit -m &quot;feat: commit test&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vue-project@0.0.0 lint:lint-staged</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">lint-staged --config ./.husky/.lintstagedrc.js</span></span><br><span class="line"></span><br><span class="line">✔ Preparing lint-staged...</span><br><span class="line">✔ Running tasks for staged files...</span><br><span class="line">✔ Applying modifications from tasks...</span><br><span class="line">✔ Cleaning up temporary files...</span><br><span class="line">[pc/vue3.2 460775a] feat: commit test</span><br><span class="line"> 1 file changed, 1 deletion(-)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> husky </tag>
            
            <tag> lint-staged </tag>
            
            <tag> commitlint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echart 记录</title>
      <link href="/2022/08/19/echart/"/>
      <url>/2022/08/19/echart/</url>
      
        <content type="html"><![CDATA[<blockquote><p>浅浅做个记录</p></blockquote><h2 id="一-环形图-自定义文字"><a href="#一-环形图-自定义文字" class="headerlink" title="一. 环形图 + 自定义文字"></a>一. 环形图 + 自定义文字</h2><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/echart/circle.pic.jpg" alt="环形图加自定义文字"><br>其中包含的配置点：</p><blockquote><ol><li>自定义文字 <code>graphic</code>；</li><li>图例文字超过6个省略；</li><li>色彩配置；</li><li>饼图 =&gt; 环形；</li><li>不要饼图的指引线和文字；</li><li>色块直接的白色间隔；</li><li>title放到圆环中间；</li></ol></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> option = &#123;</span><br><span class="line">        <span class="attr">title</span>: &#123;</span><br><span class="line">          <span class="attr">text</span>: <span class="string">&#x27;&#123;b|总人数&#125;&#x27;</span>,</span><br><span class="line">          <span class="attr">subtext</span>: <span class="string">&#x27;&#123;a|2,200&#125;&#x27;</span>,</span><br><span class="line">          <span class="comment">// 数据</span></span><br><span class="line">          <span class="attr">subtextStyle</span>: &#123;</span><br><span class="line">            <span class="attr">rich</span>: &#123;</span><br><span class="line">              <span class="attr">a</span>: &#123;</span><br><span class="line">                <span class="attr">fontSize</span>: <span class="string">&#x27;32&#x27;</span>,</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#202122&#x27;</span>,</span><br><span class="line">                <span class="attr">fontFamily</span>: <span class="string">&#x27;DIN Alternate-Bold, DIN Alternate&#x27;</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// 总人数</span></span><br><span class="line">          <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">rich</span>: &#123;</span><br><span class="line">              <span class="attr">b</span>: &#123;</span><br><span class="line">                <span class="attr">fontSize</span>: <span class="string">&#x27;14&#x27;</span>,</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#202122&#x27;</span>,</span><br><span class="line">                <span class="attr">fontFamily</span>: <span class="string">&#x27;PingFang SC-Regular, PingFang SC&#x27;</span>,</span><br><span class="line">                <span class="attr">padding</span>: [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>],</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">left</span>: <span class="string">&#x27;24%&#x27;</span>,</span><br><span class="line">          <span class="attr">top</span>: <span class="string">&#x27;38%&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">color</span>: [</span><br><span class="line">          <span class="string">&#x27;#5365FF&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;#21D17A&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;#24D7E1&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;#456297&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;#FED94C&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;#FC6A4A&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// hover 的交互</span></span><br><span class="line">        <span class="attr">tooltip</span>: &#123;</span><br><span class="line">          <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span>,</span><br><span class="line">          <span class="attr">formatter</span>: <span class="string">&#x27;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 图例</span></span><br><span class="line">        <span class="attr">legend</span>: &#123;</span><br><span class="line">          <span class="attr">orient</span>: <span class="string">&#x27;vertical&#x27;</span>,</span><br><span class="line">          <span class="attr">right</span>: <span class="number">110</span>,</span><br><span class="line">          <span class="attr">top</span>: <span class="number">45</span>,</span><br><span class="line">          <span class="attr">itemGap</span>: <span class="number">14</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&#x27;circle&#x27;</span>, <span class="comment">// 圆形</span></span><br><span class="line">          <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">12</span>,</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#202122&#x27;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// 超过六个字省略</span></span><br><span class="line">          <span class="attr">formatter</span>: <span class="keyword">function</span> (<span class="params">name</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> name.<span class="property">length</span> &gt; <span class="number">6</span> ? name.<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">6</span>) + <span class="string">&#x27;...&#x27;</span> : name;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">data</span>: [</span><br><span class="line">            <span class="string">&#x27;微信公众号&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;线下门店&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;线下渠道&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;超过6字省略超过6字省略&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;外部联系人&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;其他来源&#x27;</span>,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">series</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;客户来源排名&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">            <span class="attr">radius</span>: [<span class="string">&#x27;60%&#x27;</span>, <span class="string">&#x27;90%&#x27;</span>],</span><br><span class="line">            <span class="attr">center</span>: [<span class="string">&#x27;50%&#x27;</span>, <span class="string">&#x27;50%&#x27;</span>],</span><br><span class="line">            <span class="attr">right</span>: <span class="string">&#x27;40%&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [</span><br><span class="line">              &#123; <span class="attr">value</span>: <span class="number">534</span>, <span class="attr">name</span>: <span class="string">&#x27;微信公众号&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">value</span>: <span class="number">434</span>, <span class="attr">name</span>: <span class="string">&#x27;线下门店&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">value</span>: <span class="number">325</span>, <span class="attr">name</span>: <span class="string">&#x27;线下渠道&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">value</span>: <span class="number">257</span>, <span class="attr">name</span>: <span class="string">&#x27;超过6字省略超过6字省略&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">value</span>: <span class="number">145</span>, <span class="attr">name</span>: <span class="string">&#x27;外部联系人&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">value</span>: <span class="number">191</span>, <span class="attr">name</span>: <span class="string">&#x27;其他来源&#x27;</span> &#125;,</span><br><span class="line">            ],</span><br><span class="line">            <span class="comment">//  间隔</span></span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">              <span class="attr">borderRadius</span>: <span class="number">10</span>,</span><br><span class="line">              <span class="attr">borderColor</span>: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">              <span class="attr">borderWidth</span>: <span class="number">2</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 不要那根线和文字</span></span><br><span class="line">            <span class="attr">label</span>: &#123;</span><br><span class="line">              <span class="attr">normal</span>: &#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">labelLine</span>: &#123;</span><br><span class="line">              <span class="attr">normal</span>: &#123;</span><br><span class="line">                <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// 自定义文字</span></span><br><span class="line">        <span class="attr">graphic</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">            <span class="attr">z</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="attr">right</span>: <span class="number">195</span>,</span><br><span class="line">            <span class="attr">top</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="attr">style</span>: &#123;</span><br><span class="line">              <span class="attr">fill</span>: <span class="string">&#x27;#808388&#x27;</span>,</span><br><span class="line">              <span class="attr">text</span>: [<span class="string">&#x27;来源&#x27;</span>],</span><br><span class="line">              <span class="attr">font</span>: <span class="string">&#x27;12px PingFang SC-Regular, PingFang SC&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">            <span class="attr">z</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="attr">right</span>: <span class="number">40</span>,</span><br><span class="line">            <span class="attr">top</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="attr">style</span>: &#123;</span><br><span class="line">              <span class="attr">fill</span>: <span class="string">&#x27;#808388&#x27;</span>,</span><br><span class="line">              <span class="attr">text</span>: [<span class="string">&#x27;人数&#x27;</span>],</span><br><span class="line">              <span class="attr">font</span>: <span class="string">&#x27;12px PingFang SC-Regular, PingFang SC&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">            <span class="attr">z</span>: <span class="number">100</span>,</span><br><span class="line">            <span class="attr">right</span>: <span class="number">30</span>,</span><br><span class="line">            <span class="attr">top</span>: <span class="number">51</span>,</span><br><span class="line">            <span class="attr">style</span>: &#123;</span><br><span class="line">              <span class="attr">fill</span>: <span class="string">&#x27;#202122&#x27;</span>,</span><br><span class="line">              <span class="attr">text</span>: [<span class="number">534</span>, <span class="number">434</span>, <span class="number">325</span>, <span class="number">257</span>, <span class="number">145</span>, <span class="string">&#x27;9,809&#x27;</span>].<span class="title function_">join</span>(<span class="string">&#x27;\n\n&#x27;</span>),</span><br><span class="line">              <span class="attr">font</span>: <span class="string">&#x27;14px DIN Alternate-Bold, DIN Alternate&#x27;</span>,</span><br><span class="line">              <span class="attr">lineWidth</span>: <span class="number">100</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="二-柱状图"><a href="#二-柱状图" class="headerlink" title="二. 柱状图"></a>二. 柱状图</h2><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/echart/pie.pic.jpg" alt="柱状图"></p><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">dataset</span>: &#123;</span><br><span class="line">          <span class="attr">source</span>: [</span><br><span class="line">             [<span class="number">5</span>, <span class="string">&#x27;邀请入群&#x27;</span>],</span><br><span class="line">             [<span class="number">146</span>, <span class="string">&#x27;短链入群&#x27;</span>],</span><br><span class="line">             [<span class="number">232</span>, <span class="string">&#x27;扫码入群&#x27;</span>],</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">xAxis</span>: &#123;</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;amount&#x27;</span>, <span class="comment">// 用于设置y轴的那一条线</span></span><br><span class="line">          <span class="attr">axisLine</span>: &#123;</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">false</span>, <span class="comment">//这里的show用于设置是否显示x轴那一条线 默认为true</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// 不显示x轴的刻度</span></span><br><span class="line">          <span class="attr">axisTick</span>: &#123;</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">// 文字</span></span><br><span class="line">          <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#808388&#x27;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">splitLine</span>: &#123;</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">true</span>, <span class="comment">//让网格显示</span></span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">              <span class="comment">//网格样式</span></span><br><span class="line">              <span class="attr">color</span>: [<span class="string">&#x27;#DCDFE6&#x27;</span>], <span class="comment">//网格的颜色</span></span><br><span class="line">              <span class="attr">width</span>: <span class="number">1</span>, <span class="comment">//网格的宽度</span></span><br><span class="line">              <span class="attr">type</span>: <span class="string">&#x27;solid&#x27;</span>, <span class="comment">//网格是实实线，可以修改成虚线以及其他的类型</span></span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">yAxis</span>: &#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">          <span class="attr">interval</span>: <span class="number">15</span>, <span class="comment">// 值之间的间隔</span></span><br><span class="line">          <span class="attr">axisTick</span>: &#123;</span><br><span class="line">            <span class="comment">// 刻度对齐 中间</span></span><br><span class="line">            <span class="attr">alignWithLabel</span>: <span class="literal">true</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">true</span>, <span class="comment">//这里的show用于设置是否显示y轴下的字体 默认为true</span></span><br><span class="line">            <span class="attr">textStyle</span>: &#123;</span><br><span class="line">              <span class="comment">//textStyle里面写y轴下的字体的样式</span></span><br><span class="line">              <span class="attr">color</span>: <span class="string">&#x27;#202122;&#x27;</span>,</span><br><span class="line">              <span class="attr">fontSize</span>: <span class="number">12</span>,</span><br><span class="line">              <span class="attr">fontFamily</span>: <span class="string">&#x27;PingFang SC-Regular, PingFang SC&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="comment">//用于设置y轴的那一条线</span></span><br><span class="line">          <span class="attr">axisLine</span>: &#123;</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">true</span>, <span class="comment">//这里的show用于设置是否显示y轴那一条线 默认为true</span></span><br><span class="line">            <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">              <span class="comment">//lineStyle里面写y轴那一条线的样式</span></span><br><span class="line">              <span class="attr">color</span>: <span class="string">&#x27;#DCDFE6&#x27;</span>,</span><br><span class="line">              <span class="attr">width</span>: <span class="number">1</span>, <span class="comment">//轴线的粗细 我写的是2 最小为0，值为0的时候线隐藏</span></span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">grid</span>: &#123;</span><br><span class="line">          <span class="attr">show</span>: <span class="literal">false</span>,</span><br><span class="line">          <span class="attr">top</span>: <span class="number">15</span>, <span class="comment">// 一下数值可为百分比也可为具体像素值</span></span><br><span class="line">          <span class="attr">right</span>: <span class="number">15</span>,</span><br><span class="line">          <span class="attr">bottom</span>: <span class="number">20</span>,</span><br><span class="line">          <span class="attr">left</span>: <span class="number">57</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">series</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">barWidth</span>: <span class="number">10</span>, <span class="comment">//柱图宽度</span></span><br><span class="line">            <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">              <span class="attr">normal</span>: &#123;</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&#x27;#5365FF&#x27;</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">encode</span>: &#123;</span><br><span class="line">              <span class="comment">// Map the &quot;amount&quot; column to X axis.</span></span><br><span class="line">              <span class="attr">x</span>: <span class="string">&#x27;amount&#x27;</span>,</span><br><span class="line">              <span class="comment">// Map the &quot;product&quot; column to Y axis</span></span><br><span class="line">              <span class="attr">y</span>: <span class="string">&#x27;product&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="三-这个是css画的"><a href="#三-这个是css画的" class="headerlink" title="三. 这个是css画的"></a>三. 这个是css画的</h2><h3 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h3><p><img src="/images/echart/circle.jpg" alt="圆"></p><blockquote><p>border上的小圆点会跟着border边缘运动</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;circle-wrap flex items-center justify-center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;circle flex items-center justify-center flex-col&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>客户总数<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;number&quot;</span>&gt;</span>23,523<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.circle-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">172px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">172px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f0f5ff</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d4dafc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#5964fb</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">44px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">7px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: move <span class="number">4s</span> cubic-bezier(<span class="number">0.36</span>, <span class="number">0</span>, <span class="number">0.64</span>, <span class="number">1</span>) -<span class="number">2s</span> infinite alternate,</span><br><span class="line">      move1Y <span class="number">4s</span> cubic-bezier(<span class="number">0.36</span>, <span class="number">0</span>, <span class="number">0.64</span>, <span class="number">1</span>) <span class="number">0s</span> infinite alternate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 定义动画 */</span></span><br><span class="line">    <span class="keyword">@keyframes</span> move &#123;</span><br><span class="line">      <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">left</span>: -<span class="number">2px</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">170px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@keyframes</span> move1Y &#123;</span><br><span class="line">      <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">top</span>: -<span class="number">2px</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">170px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.circle</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">128px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">128px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#5964fb</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.title</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">      <span class="attribute">font-family</span>: PingFang SC-Regular, PingFang SC;</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.number</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">      <span class="attribute">font-family</span>: DIN Alternate-Bold, DIN Alternate;</span><br><span class="line">      <span class="attribute">font-weight</span>: bold;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> echart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> echart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装Jdk</title>
      <link href="/2022/08/08/linux-jdk/"/>
      <url>/2022/08/08/linux-jdk/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">Java Archive Downloads - Java SE 8</a></p><blockquote><p>JDK下载需要注册账号，感谢无名大神提供账号：<br>账户：<a href="mailto:&#51;&#48;&#50;&#x38;&#48;&#54;&#x34;&#51;&#x30;&#x38;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#51;&#48;&#50;&#x38;&#48;&#54;&#x34;&#51;&#x30;&#x38;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a><br>密码：OraclePassword123! </p></blockquote><ol><li>找到  Linux x64（找自己服务器匹配的包） 的 <code>tar.gz</code>的压缩包下载；</li><li>下载好了上传到服务器；</li><li>解压 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf jdk-8u202-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>编辑 <code>profile</code> 文件，添加环境变量</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure><p> 添加如下</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/roots/file/JDK/jdk1.8.0_202</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib:$CLASSPATH</span><br><span class="line">export JAVA_PATH=$&#123;JAVA_HOME&#125;/bin:$&#123;JRE_HOME&#125;/bin</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin/$JAVA_HOME:$PATH</span><br></pre></td></tr></table></figure><p> 刷新环境变量</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>查看是否成功</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打印如下 就成功了</span></span><br><span class="line">java version &quot;1.8.0_202&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_202-b08)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li>查看环境变量中正在使用的java文件所在路径 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">which java</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">/root/jdk1.8.0_202/bin/java</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 常用命令记录</title>
      <link href="/2022/08/03/linux/"/>
      <url>/2022/08/03/linux/</url>
      
        <content type="html"><![CDATA[<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><h3 id="tar"><a href="#tar" class="headerlink" title=".tar"></a>.tar</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解包：tar xvf FileName.tar</span><br><span class="line"></span><br><span class="line">打包：tar cvf FileName.tar DirName</span><br></pre></td></tr></table></figure><h3 id="tar-xz"><a href="#tar-xz" class="headerlink" title=".tar.xz"></a>.tar.xz</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解包：tar xvf FileName.tar.xz</span><br><span class="line"></span><br><span class="line">打包：tar cvf FileName.tar.xz DirName</span><br></pre></td></tr></table></figure><h3 id="tar-gz-和-tgz"><a href="#tar-gz-和-tgz" class="headerlink" title=".tar.gz 和 .tgz"></a>.tar.gz 和 .tgz</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解压：tar zxvf FileName.tar.gz</span><br><span class="line"></span><br><span class="line">压缩：tar zcvf FileName.tar.gz DirName</span><br></pre></td></tr></table></figure><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unzip xxx.zip</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压到</span></span><br><span class="line">unzip xxx.zip -d [当前目录下新的文件夹名称]</span><br></pre></td></tr></table></figure><h2 id="修改名字"><a href="#修改名字" class="headerlink" title="修改名字"></a>修改名字</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 <span class="built_in">test</span> 改为 demo</span></span><br><span class="line">mv test demo </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="软连"><a href="#软连" class="headerlink" title="软连"></a>软连</h2><h3 id="建立"><a href="#建立" class="headerlink" title="建立"></a>建立</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /root/node-server/node-v16.16.0/bin/node /usr/local/bin/node</span><br><span class="line">ln -s /root/node-server/node-v16.16.0/bin/npm /usr/local/bin/npm</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/local/bin/node</span><br><span class="line">rm -rf /usr/local/bin/npm</span><br></pre></td></tr></table></figure><h2 id="查端口"><a href="#查端口" class="headerlink" title="查端口"></a>查端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有端口情况</span></span><br><span class="line">netstat -anp</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查指定端口</span></span><br><span class="line">netstat -tnlp | grep :9999</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="pm2"><a href="#pm2" class="headerlink" title="pm2"></a>pm2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pm2 ls</span><br><span class="line">pm2 restart [id|name|..]</span><br><span class="line"></span><br><span class="line">pm2 -h # 更多命令自己查 help</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查找软件的安装目录"><a href="#查找软件的安装目录" class="headerlink" title="查找软件的安装目录"></a>查找软件的安装目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查nginx 的目录在哪里</span></span><br><span class="line">whereis nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lerna</title>
      <link href="/2022/07/13/lerna/"/>
      <url>/2022/07/13/lerna/</url>
      
        <content type="html"><![CDATA[<h2 id="相关地址记录"><a href="#相关地址记录" class="headerlink" title="相关地址记录"></a>相关地址记录</h2><p><a href="https://github.com/lerna/lerna">github</a><br><a href="https://lerna.js.org/">官网</a><br><a href="https://www.lernajs.cn/">中文官网</a><br><a href="https://www.jianshu.com/p/e18d1bfad05a">文章1</a><br><a href="https://www.jianshu.com/p/8b7e6025354b">文章2</a></p>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github Token</title>
      <link href="/2022/07/11/gitToken/"/>
      <url>/2022/07/11/gitToken/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>好久没在github上提交代码，提交代码报错:</p><blockquote><p>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.<br>remote: Please see <a href="https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/">https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/</a> for more information.<br>fatal: Authentication failed for ‘<a href="https://github.com/LLDLLY/lldlly.github.io.git/&#39;">https://github.com/LLDLLY/lldlly.github.io.git/&#39;</a></p></blockquote><p>好吧，来搞一个token吧</p><h3 id="申请token"><a href="#申请token" class="headerlink" title="申请token"></a>申请token</h3><p><code>右上角头像点击</code> =&gt; <code>Setting</code> =&gt; <code>Developer setting</code> =&gt; <code>Personal access tokens</code> =&gt;<code>Generate new token</code></p><p>申请好了之后，复制</p><h3 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://&lt;your_token&gt;@github.com/&lt;USERNAME&gt;/&lt;REPO&gt;.git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProComponents + antd Form组件记录</title>
      <link href="/2022/07/08/procomponents/"/>
      <url>/2022/07/08/procomponents/</url>
      
        <content type="html"><![CDATA[<h2 id="忙到忘记记笔记😅"><a href="#忙到忘记记笔记😅" class="headerlink" title="忙到忘记记笔记😅"></a>忙到忘记记笔记😅</h2><blockquote><p>单纯的记一下笔记</p></blockquote><h2 id="Modal-支持提交内部form表单"><a href="#Modal-支持提交内部form表单" class="headerlink" title="Modal 支持提交内部form表单"></a>Modal 支持提交内部form表单</h2><p><code>index.tsx</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useRef, useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span>, <span class="title class_">Modal</span>, <span class="title class_">ModalProps</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span></span><br><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">DraggableData</span>, <span class="title class_">DraggableEvent</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-draggable&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Draggable</span> <span class="keyword">from</span> <span class="string">&#x27;react-draggable&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Title</span> <span class="keyword">from</span> <span class="string">&#x27;./title&#x27;</span></span><br><span class="line"></span><br><span class="line">interface <span class="title class_">IFooterProps</span> &#123;</span><br><span class="line">  readOnly?: boolean</span><br><span class="line">  customFooter?: boolean</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * modal 封装</span></span><br><span class="line"><span class="comment"> * 1. 支持拖动</span></span><br><span class="line"><span class="comment"> * 2. 支持放大到全屏</span></span><br><span class="line"><span class="comment"> * 4. modal确定按钮 提交form表单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ModalComps</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">ModalProps</span> &amp; <span class="title class_">IFooterProps</span>&gt; = <span class="title class_">React</span>.<span class="title function_">memo</span>((props): <span class="title class_">React</span>.<span class="property">ReactElement</span> =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [form, setForm] = <span class="title function_">useState</span>(<span class="literal">null</span>) <span class="comment">// 子级的form</span></span><br><span class="line">  <span class="keyword">const</span> [disabled, setDisabled] = <span class="title function_">useState</span>(<span class="literal">false</span>) <span class="comment">// 是否开始拖拽</span></span><br><span class="line">  <span class="keyword">const</span> [full, setFull] = <span class="title function_">useState</span>(<span class="literal">false</span>) <span class="comment">//  是否是全屏</span></span><br><span class="line">  <span class="keyword">const</span> [bounds, setBounds] = <span class="title function_">useState</span>(&#123; <span class="attr">left</span>: <span class="number">0</span>, <span class="attr">top</span>: <span class="number">0</span>, <span class="attr">bottom</span>: <span class="number">0</span>, <span class="attr">right</span>: <span class="number">0</span> &#125;)</span><br><span class="line">  <span class="keyword">const</span> draggleRef = useRef&lt;<span class="title class_">HTMLDivElement</span>&gt;(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 弹窗关闭的时候，full 重置</span></span><br><span class="line">    <span class="keyword">if</span> (props?.<span class="property">visible</span> === <span class="literal">false</span>) <span class="title function_">setFull</span>(<span class="literal">false</span>)</span><br><span class="line">  &#125;, [props.<span class="property">visible</span>])</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 给子组件注入事件 onModalForm</span></span><br><span class="line">  <span class="comment">// 子组件通过onModalForm将form传给modal, modal接管form表单</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">childrenRender</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> prop = &#123;</span><br><span class="line">      <span class="attr">onModalForm</span>: getChildrenForm,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">React</span>.<span class="property">Children</span>.<span class="title function_">map</span>(props?.<span class="property">children</span>, <span class="function">(<span class="params">child: any</span>) =&gt;</span> <span class="title class_">React</span>.<span class="title function_">cloneElement</span>(child, prop))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取到子组件form 实例</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getChildrenForm</span> = (<span class="params">form: any</span>) =&gt; <span class="title function_">setForm</span>(form)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// modal点击提交的时候 将子form的数据传给 modal 的确认事件</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSubmit</span> = (<span class="params">e: React.MouseEvent&lt;HTMLElement&gt;</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (form) &#123;</span><br><span class="line">      <span class="comment">// @ts-ignore</span></span><br><span class="line">      form</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        ?.<span class="title function_">validateFields</span>()</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">values: IObjectProps</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> values</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 校验不通过，不触发 modal 确认事件</span></span><br><span class="line">          <span class="keyword">if</span> (res === <span class="literal">false</span>) <span class="keyword">return</span></span><br><span class="line">          props?.<span class="property">onOk</span>?.(res || <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    props?.<span class="property">onOk</span>?.(e)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 拖动位置处理</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onStart</span> = (<span class="params">_event: DraggableEvent, uiData: DraggableData</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; clientWidth, clientHeight &#125; = <span class="variable language_">window</span>.<span class="property">document</span>.<span class="property">documentElement</span></span><br><span class="line">    <span class="keyword">const</span> targetRect = draggleRef.<span class="property">current</span>?.<span class="title function_">getBoundingClientRect</span>()</span><br><span class="line">    <span class="keyword">if</span> (!targetRect) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">setBounds</span>(&#123;</span><br><span class="line">      <span class="attr">left</span>: -targetRect.<span class="property">left</span> + uiData.<span class="property">x</span>,</span><br><span class="line">      <span class="attr">right</span>: clientWidth - (targetRect.<span class="property">right</span> - uiData.<span class="property">x</span>),</span><br><span class="line">      <span class="attr">top</span>: -targetRect.<span class="property">top</span> + uiData.<span class="property">y</span>,</span><br><span class="line">      <span class="attr">bottom</span>: clientHeight - (targetRect.<span class="property">bottom</span> - uiData.<span class="property">y</span>),</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// modal 可拖动处理</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">modalRender</span> = (<span class="params">modal: React.ReactNode</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// modal 全局弹窗 时不允许拖动</span></span><br><span class="line">    <span class="keyword">if</span> (full) <span class="keyword">return</span> modal</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Draggable</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">disabled</span>=<span class="string">&#123;disabled&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">bounds</span>=<span class="string">&#123;bounds&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onStart</span>=<span class="string">&#123;(event,</span> <span class="attr">uiData</span>) =&gt;</span> onStart(event, uiData)&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&#123;draggleRef&#125;</span>&gt;</span>&#123;modal&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Draggable</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Modal</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">width</span>=<span class="string">&#123;900&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &#123;<span class="attr">...props</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">title</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &lt;<span class="attr">Title</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">title</span>=<span class="string">&#123;props.title&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">disabled</span>=<span class="string">&#123;disabled&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">setDisabled</span>=<span class="string">&#123;setDisabled&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">full</span>=<span class="string">&#123;full&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">setFull</span>=<span class="string">&#123;setFull&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">      className=&#123;`msh-modal $&#123;full ? &#x27;full&#x27; : &#x27;&#x27;&#125;`&#125;</span></span><br><span class="line"><span class="language-xml">      centered=&#123;!full&#125;</span></span><br><span class="line"><span class="language-xml">      modalRender=&#123;modalRender&#125;</span></span><br><span class="line"><span class="language-xml">      footer=&#123;[</span></span><br><span class="line"><span class="language-xml">        props.readOnly ? (</span></span><br><span class="line"><span class="language-xml">          props.customFooter ? (</span></span><br><span class="line"><span class="language-xml">            props.footer</span></span><br><span class="line"><span class="language-xml">          ) : (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">key</span>=<span class="string">&quot;cancel&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;props.onCancel&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              关闭</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          )</span></span><br><span class="line"><span class="language-xml">        ) : (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">key</span>=<span class="string">&quot;btn&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">key</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onSubmit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              确认</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">key</span>=<span class="string">&quot;back&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;props.onCancel&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              取消</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        ),</span></span><br><span class="line"><span class="language-xml">      ]&#125;</span></span><br><span class="line"><span class="language-xml">      getContainer=&#123;&#x27;#root&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      &#123;childrenRender()&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Modal</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ModalComps</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>title.tsx</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&#x27;@/assets/svg&#x27;</span></span><br><span class="line"></span><br><span class="line">interface <span class="title class_">ITitleProps</span> &#123;</span><br><span class="line">  title?: string | unknown</span><br><span class="line">  <span class="attr">disabled</span>: boolean <span class="comment">// 是否可以拖动</span></span><br><span class="line">  <span class="attr">full</span>: boolean <span class="comment">// 全屏状态</span></span><br><span class="line">  <span class="attr">setFull</span>: <span class="function">(<span class="params">data: boolean</span>) =&gt;</span> any</span><br><span class="line">  <span class="attr">setDisabled</span>: <span class="function">(<span class="params">data: boolean</span>) =&gt;</span> any <span class="comment">// 设置是否允许拖动</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装modal title</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Title</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">ITitleProps</span>&gt; = <span class="function">(<span class="params">&#123; title, disabled, full, setFull, setDisabled &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleSetFull</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setFull</span>(!full)</span><br><span class="line">    <span class="comment">// 全屏状态关闭拖动</span></span><br><span class="line">    <span class="title function_">setDisabled</span>(<span class="literal">true</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&quot;msh-modal-header-title flex flex-jsc-between flex-align-center&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width:</span> &#x27;<span class="attr">100</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">cursor:</span> <span class="attr">full</span> ? &#x27;<span class="attr">unset</span>&#x27; <span class="attr">:</span> &#x27;<span class="attr">move</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onMouseOver</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">        if (disabled) &#123;</span></span><br><span class="line"><span class="language-xml">          setDisabled(false)</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      onMouseOut=&#123;() =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">        setDisabled(true)</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      onFocus=&#123;() =&gt; &#123;&#125;&#125;</span></span><br><span class="line"><span class="language-xml">      onBlur=&#123;() =&gt; &#123;&#125;&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      &#123;title || &#x27;这是title&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;/* 全屏处理 icon */&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;!full &amp;&amp; <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">name</span>=<span class="string">&quot;full&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleSetFull&#125;</span> <span class="attr">className</span>=<span class="string">&quot;cursor-pointer&quot;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;full &amp;&amp; <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">name</span>=<span class="string">&quot;full2&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleSetFull&#125;</span> <span class="attr">className</span>=<span class="string">&quot;cursor-pointer&quot;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">React</span>.<span class="title function_">memo</span>(<span class="title class_">Title</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="富文本-支持antd-form表单"><a href="#富文本-支持antd-form表单" class="headerlink" title="富文本 支持antd form表单"></a>富文本 支持antd form表单</h2><p>使用的富文本编辑器 <a href="https://www.wangeditor.com/">wangEditor</a></p><ul><li>使用示例</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// antd form item</span></span><br><span class="line"> &lt;<span class="title class_">Form</span>.<span class="property">Item</span></span><br><span class="line">    name=<span class="string">&quot;test&quot;</span></span><br><span class="line">    label=<span class="string">&quot;中文简介&quot;</span></span><br><span class="line">    labelCol=&#123;&#123; <span class="attr">span</span>: <span class="number">4</span> &#125;&#125;</span><br><span class="line">    wrapperCol=&#123;&#123; <span class="attr">span</span>: <span class="number">20</span> &#125;&#125;</span><br><span class="line">    initialValue=&#123;&#125;</span><br><span class="line">    rules=&#123;[&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">max</span>: <span class="number">65535</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入xxxx&#x27;</span> &#125;]&#125;</span><br><span class="line">  &gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">MyEditor</span> /&gt;</span></span></span><br><span class="line">  &lt;/<span class="title class_">Form</span>.<span class="property">Item</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>组件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Editor</span>, <span class="title class_">Toolbar</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@wangeditor/editor-for-react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">IDomEditor</span>, <span class="title class_">IEditorConfig</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@wangeditor/editor&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@wangeditor/editor/dist/css/style.css&#x27;</span> <span class="comment">// 引入 css</span></span><br><span class="line"></span><br><span class="line">type valueType = string | <span class="literal">null</span> | <span class="literal">undefined</span></span><br><span class="line">interface <span class="title class_">IEditorProps</span> &#123;</span><br><span class="line">  value?: valueType</span><br><span class="line">  onChange?: <span class="function">(<span class="params">value: valueType</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可以配合 form 的editor 组件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">props</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MyEditor</span>:<span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IEditorProps</span>&gt; = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [editor, setEditor] = useState&lt;<span class="title class_">IDomEditor</span> | <span class="literal">null</span>&gt;(<span class="literal">null</span>) <span class="comment">// 存储 editor 实例</span></span><br><span class="line">  <span class="keyword">const</span> [html, setHtml] = <span class="title function_">useState</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">// 编辑器内容</span></span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    props.<span class="property">value</span> &amp;&amp; <span class="title function_">setHtml</span>(props.<span class="property">value</span>)</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">editorConfig</span>: <span class="title class_">Partial</span>&lt;<span class="title class_">IEditorConfig</span>&gt; = &#123;</span><br><span class="line">    <span class="attr">placeholder</span>: <span class="string">&#x27;请输入内容...&#x27;</span>,</span><br><span class="line">    <span class="attr">autoFocus</span>: <span class="literal">false</span>, <span class="comment">// 不自动聚焦</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 及时销毁 editor ，重要！</span></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (editor == <span class="literal">null</span>) <span class="keyword">return</span></span><br><span class="line">      editor.<span class="title function_">destroy</span>()</span><br><span class="line">      <span class="title function_">setEditor</span>(<span class="literal">null</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [editor])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">contentChangeHandle</span> = (<span class="params">editor: any</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> node = editor.<span class="title function_">getHtml</span>()</span><br><span class="line">    <span class="title function_">setHtml</span>(editor.<span class="title function_">getHtml</span>())</span><br><span class="line">    <span class="comment">// 内容为空时 gethtml得到的内容为 &#x27;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#x27;</span></span><br><span class="line">    props?.<span class="property">onChange</span>?.(node === <span class="string">&#x27;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#x27;</span> ? <span class="string">&#x27;&#x27;</span> : node)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;editor-wrap&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Toolbar</span> <span class="attr">editor</span>=<span class="string">&#123;editor&#125;</span> <span class="attr">mode</span>=<span class="string">&quot;default&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">borderBottom:</span> &#x27;<span class="attr">1px</span> <span class="attr">solid</span> #<span class="attr">d9d9d9</span>&#x27; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Editor</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">defaultConfig</span>=<span class="string">&#123;editorConfig&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;html&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onCreated</span>=<span class="string">&#123;setEditor&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;contentChangeHandle&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">mode</span>=<span class="string">&quot;default&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">height:</span> &#x27;<span class="attr">240px</span>&#x27;, <span class="attr">overflowY:</span> &#x27;<span class="attr">hidden</span>&#x27; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MyEditor</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Protable-自定义-input模糊搜索"><a href="#Protable-自定义-input模糊搜索" class="headerlink" title="Protable 自定义 input模糊搜索"></a>Protable 自定义 input模糊搜索</h2><ul><li>使用示例<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. searchInput 单独使用</span></span><br><span class="line">   &lt;<span class="title class_">Form</span>.<span class="property">Item</span></span><br><span class="line">      name=<span class="string">&quot;employeeId&quot;</span></span><br><span class="line">      label=<span class="string">&quot;会员号&quot;</span></span><br><span class="line">      rules=&#123;[&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入会员号&#x27;</span> &#125;]&#125;</span><br><span class="line">    &gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">SearchInput</span> <span class="attr">onSearch</span>=<span class="string">&#123;handleSearchEmployeeId&#125;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入会员号&quot;</span>  <span class="attr">onChange</span>=<span class="string">&#123;value</span> =&gt;</span> handleEmployeeIdChange(value, form)&#125;  /&gt;</span></span><br><span class="line">    &lt;/<span class="title class_">Form</span>.<span class="property">Item</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 配合Procomponent ProTable 使用</span></span><br><span class="line"> <span class="keyword">const</span> <span class="attr">columns</span>: <span class="title class_">ProColumns</span> = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;序号&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">      <span class="attr">valueType</span>: <span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">48</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;会员号&#x27;</span>,</span><br><span class="line">      <span class="attr">dataIndex</span>: <span class="string">&#x27;employeeId&#x27;</span>,</span><br><span class="line">      <span class="attr">ellipsis</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">copyable</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">150</span>,</span><br><span class="line">      <span class="attr">renderFormItem</span>: <span class="title class_">EmployeeSearch</span>, <span class="comment">// 见下面 EmployeeSearch</span></span><br><span class="line">      <span class="attr">formItemProps</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;此项为必填项&#x27;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;，</span><br><span class="line"> ]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ul><li>searchInput</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Select</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Option</span> &#125; = <span class="title class_">Select</span></span><br><span class="line"></span><br><span class="line">interface <span class="title class_">ISearchInputProps</span> &#123;</span><br><span class="line">  value?: string</span><br><span class="line">  onChange?: <span class="function">(<span class="params">value: string</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  placeholder?: string</span><br><span class="line">  style?: <span class="title class_">React</span>.<span class="property">CSSProperties</span></span><br><span class="line">  <span class="attr">onSearch</span>: <span class="function">(<span class="params">value: string, setData: any</span>) =&gt;</span> <span class="keyword">void</span> <span class="comment">// 用户输入，触发请求</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 支持输入+搜索的 select</span></span><br><span class="line"><span class="comment"> * 可配合form使用</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">props</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SearchInput</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">ISearchInputProps</span>&gt; =  <span class="function"><span class="params">props</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [data, setData] = useState&lt;any[]&gt;([])</span><br><span class="line">  <span class="keyword">const</span> [value, setValue] = useState&lt;string&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (props?.<span class="property">value</span> &amp;&amp; <span class="keyword">typeof</span> props.<span class="property">value</span> === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">      <span class="title function_">setData</span>(props?.<span class="property">value</span> || [])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleSearch</span> = (<span class="params">newValue: string</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(newValue)&#123;</span><br><span class="line">      <span class="title function_">setValue</span>(newValue)</span><br><span class="line">      props?.<span class="title function_">onSearch</span>(newValue, setData)</span><br><span class="line">      <span class="comment">// @ts-ignore</span></span><br><span class="line">      props?.<span class="title function_">onChange</span>(newValue?.<span class="title function_">trim</span>())</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">   <span class="title function_">setData</span>([])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleChange</span> = (<span class="params">newValue: string</span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setValue</span>(newValue)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 值回传给父级</span></span><br><span class="line">    <span class="comment">// @ts-ignore</span></span><br><span class="line">    props?.<span class="title function_">onChange</span>(newValue?.<span class="title function_">trim</span>())</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleClear</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="title function_">setData</span>([])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> options =</span><br><span class="line">     <span class="keyword">typeof</span> data === <span class="string">&#x27;object&#x27;</span> &amp;&amp; data?.<span class="title function_">map</span>(<span class="function"><span class="params">d</span> =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Option</span> <span class="attr">key</span>=<span class="string">&#123;d.value&#125;</span>&gt;</span>&#123;d.text&#125;<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">allowClear</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">showSearch</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">value</span>=<span class="string">&#123;value&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">showArrow</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">style</span>=<span class="string">&#123;props.style&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">filterOption</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onChange</span>=<span class="string">&#123;handleChange&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onSearch</span>=<span class="string">&#123;handleSearch&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onClear</span>=<span class="string">&#123;handleClear&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">notFoundContent</span>=<span class="string">&#123;null&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">defaultActiveFirstOption</span>=<span class="string">&#123;false&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">placeholder</span>=<span class="string">&#123;props.placeholder&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;options&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">React</span>.<span class="title function_">memo</span>(<span class="title class_">SearchInput</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>employeeSearch</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">SearchInput</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/components/searchInput&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; handleSearchEmployeeId &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/index&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义会员号选项 select</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EnployeeSearch</span> = (<span class="params"></span></span><br><span class="line"><span class="params">  _: any,</span></span><br><span class="line"><span class="params">  &#123; type, defaultRender, formItemProps, fieldProps, ...rest &#125;: any,</span></span><br><span class="line"><span class="params">  form: any</span></span><br><span class="line"><span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">&#x27;form&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> status = form.<span class="title function_">getFieldValue</span>(<span class="string">&#x27;state&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (status !== <span class="string">&#x27;open&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="comment">// value 和 onchange 会通过 form 自动注入。</span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">SearchInput</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#123;<span class="attr">...formItemProps</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#123;<span class="attr">...fieldProps</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onSearch</span>=<span class="string">&#123;handleSearchEmployeeId&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;请输入会员号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width:</span> &#x27;<span class="attr">100</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">defaultRender</span>(_)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EnployeeSearch</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// handleSearchEmployeeId</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局 employeeId 模糊查询函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> handleSearchEmployeeId = <span class="title function_">debounce</span>(</span><br><span class="line">  <span class="function">(<span class="params">value: string, callback: (data: &#123; value: string; text: string &#125;[]) =&gt; <span class="keyword">void</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">getEmployeeIdListApi</span>(&#123; <span class="attr">employeeId</span>: value &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res?.<span class="property">success</span> !== <span class="string">&#x27;t&#x27;</span>) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">      <span class="title function_">callback</span>(</span><br><span class="line">        res.<span class="property">result</span>?.<span class="title function_">map</span>(<span class="function">(<span class="params">item: string</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> &#123; <span class="attr">value</span>: item, <span class="attr">text</span>: item &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      )</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="number">300</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Upload</span>, <span class="title class_">Modal</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PlusOutlined</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/icons&#x27;</span></span><br><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">RcFile</span>, <span class="title class_">UploadFile</span>, <span class="title class_">UploadProps</span>, <span class="title class_">ShowUploadListInterface</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd/es/upload/interface&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.module.scss&#x27;</span></span><br><span class="line"></span><br><span class="line">type <span class="title class_">ValueType</span> = <span class="title class_">UploadFile</span>[] | <span class="literal">null</span> | <span class="literal">undefined</span></span><br><span class="line"></span><br><span class="line">interface <span class="title class_">IUploadProps</span> &#123;</span><br><span class="line">  <span class="attr">api</span>: <span class="function">(<span class="params">data: any</span>) =&gt;</span> <span class="title class_">Promise</span>&lt;any&gt;</span><br><span class="line">  value?: <span class="title class_">ValueType</span></span><br><span class="line">  onChange?: <span class="function">(<span class="params">value: ValueType</span>) =&gt;</span> <span class="keyword">void</span></span><br><span class="line">  preview?: boolean <span class="comment">// 是否支持预览</span></span><br><span class="line">  length?: number <span class="comment">// 当上传照片数到达限制后，上传按钮消失。</span></span><br><span class="line">  maxCount?: number <span class="comment">// 通过 maxCount 限制上传数量。当为 1 时，始终用最新上传的代替当前。</span></span><br><span class="line">  multiple?: boolean <span class="comment">// 是否支持多选</span></span><br><span class="line">  data?: <span class="title class_">Record</span>&lt;string, any&gt; <span class="comment">// 上传所需额外参数或返回上传额外参数的方法</span></span><br><span class="line">  beforeUpload?: <span class="title class_">UploadProps</span>[<span class="string">&#x27;beforeUpload&#x27;</span>]</span><br><span class="line">  showUploadList?: <span class="title class_">ShowUploadListInterface</span> <span class="comment">// 控制图片hover时，各种icon的显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getBase64 = (<span class="attr">file</span>: <span class="title class_">RcFile</span>): <span class="title class_">Promise</span>&lt;string&gt; =&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>()</span><br><span class="line">    reader.<span class="title function_">readAsDataURL</span>(file)</span><br><span class="line">    reader.<span class="property">onload</span> = <span class="function">() =&gt;</span> <span class="title function_">resolve</span>(reader.<span class="property">result</span> <span class="keyword">as</span> string)</span><br><span class="line">    reader.<span class="property">onerror</span> = <span class="function"><span class="params">error</span> =&gt;</span> <span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传图片组件，可以配合form表单使用</span></span><br><span class="line"><span class="comment"> * 注： 目前仅支持单张上传，多张上传接口和前端目前都不支持</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UploadComp</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IUploadProps</span>&gt; = <span class="function"><span class="params">props</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [previewVisible, setPreviewVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [previewImage, setPreviewImage] = <span class="title function_">useState</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> [previewTitle, setPreviewTitle] = <span class="title function_">useState</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> [fileList, setFileList] = useState&lt;<span class="title class_">UploadFile</span>[]&gt;([])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!props.<span class="property">value</span> || !props.<span class="property">value</span>[<span class="number">0</span>]?.<span class="property">url</span>) <span class="keyword">return</span></span><br><span class="line">    <span class="comment">// 1. 接受 form的默认值</span></span><br><span class="line">    <span class="title function_">setFileList</span>(props.<span class="property">value</span>)</span><br><span class="line">  &#125;, [props.<span class="property">value</span>])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">handleChange</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onChange&#x27;</span>] = <span class="function">(<span class="params">&#123; fileList: newFileList &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setFileList</span>(newFileList)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 预览</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handlePreview</span> = <span class="keyword">async</span> (<span class="params">file: UploadFile</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (!file.<span class="property">url</span> &amp;&amp; !file.<span class="property">preview</span>) &#123;</span><br><span class="line">      file.<span class="property">preview</span> = <span class="keyword">await</span> <span class="title function_">getBase64</span>(file.<span class="property">originFileObj</span> <span class="keyword">as</span> <span class="title class_">RcFile</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setPreviewImage</span>(file.<span class="property">url</span> || (file.<span class="property">preview</span> <span class="keyword">as</span> string))</span><br><span class="line">    <span class="title function_">setPreviewVisible</span>(<span class="literal">true</span>)</span><br><span class="line">    <span class="title function_">setPreviewTitle</span>(file.<span class="property">name</span> || file.<span class="property">url</span>!.<span class="title function_">substring</span>(file.<span class="property">url</span>!.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleCancel</span> = (<span class="params"></span>) =&gt; <span class="title function_">setPreviewVisible</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 上传之前处理，return false 不走upload组件上传</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">handleBeforeUpload</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;beforeUpload&#x27;</span>] = <span class="function">(<span class="params">file: RcFile, fileList: RcFile[]</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> formdata = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">    formdata.<span class="title function_">append</span>(<span class="string">&#x27;files&#x27;</span>, file)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将需要多传的参数 注入formdata</span></span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">data</span> &amp;&amp; <span class="title class_">Object</span>.<span class="title function_">keys</span>(props.<span class="property">data</span>).<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> props.<span class="property">data</span>) &#123;</span><br><span class="line">        formdata.<span class="title function_">append</span>(key, props.<span class="property">data</span>[key])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图片上传 需求不需要图片压缩 未做压缩处理</span></span><br><span class="line">    props.<span class="title function_">api</span>(formdata).<span class="title function_">then</span>(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">success</span> === <span class="string">&#x27;t&#x27;</span> &amp;&amp; res.<span class="property">result</span>) &#123;</span><br><span class="line">        <span class="comment">// 2.数据返回给上级form</span></span><br><span class="line">        props?.<span class="property">onChange</span> &amp;&amp; props?.<span class="title function_">onChange</span>(res.<span class="property">result</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">handleRemove</span>: <span class="title class_">UploadProps</span>[<span class="string">&#x27;onRemove&#x27;</span>] = (param): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">    props?.<span class="property">onChange</span> &amp;&amp; props?.<span class="title function_">onChange</span>([])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Upload</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">listType</span>=<span class="string">&quot;picture-card&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">multiple</span>=<span class="string">&#123;props?.multiple&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">maxCount</span>=<span class="string">&#123;props.maxCount&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">fileList</span>=<span class="string">&#123;fileList&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onPreview</span>=<span class="string">&#123;handlePreview&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onChange</span>=<span class="string">&#123;handleChange&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onRemove</span>=<span class="string">&#123;handleRemove&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">beforeUpload</span>=<span class="string">&#123;handleBeforeUpload&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">showUploadList</span>=<span class="string">&#123;&#123;</span> <span class="attr">showPreviewIcon:</span> <span class="attr">props.preview</span>, <span class="attr">...props.showUploadList</span> &#125;&#125; </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;fileList.length &lt; (props?.length || 20) &amp;&amp; <span class="tag">&lt;<span class="name">PlusOutlined</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Upload</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;/* 图片预览 */&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;props.preview ? (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Modal</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">visible</span>=<span class="string">&#123;previewVisible&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">title</span>=<span class="string">&#123;previewTitle&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">footer</span>=<span class="string">&#123;null&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onCancel</span>=<span class="string">&#123;handleCancel&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">destroyOnClose</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">&quot;example&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &#x27;<span class="attr">100</span>%&#x27; &#125;&#125; <span class="attr">src</span>=<span class="string">&#123;previewImage&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Modal</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      ) : (</span></span><br><span class="line"><span class="language-xml">        &#x27;&#x27;</span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">UploadComp</span>.<span class="property">defaultProps</span> = &#123;</span><br><span class="line">  <span class="attr">multiple</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">length</span>: <span class="number">10</span>, <span class="comment">// 默认图片列表可以展示图片的数量，当上传照片数到达限制后，上传按钮消失。</span></span><br><span class="line">  <span class="attr">maxCount</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">preview</span>: <span class="literal">true</span>, <span class="comment">// 默认支持预览</span></span><br><span class="line">  <span class="attr">showUploadList</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">UploadComp</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
          <category> antd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> antd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>恢复本站正常运行</title>
      <link href="/2022/06/04/live2dApi/"/>
      <url>/2022/06/04/live2dApi/</url>
      
        <content type="html"><![CDATA[<h2 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h2><p>相关政策等一系列原因，原本的 <code>cdn.jsdelivr.net</code>免费cdn不能访问，导致本站崩掉。为了恢复本站的正常运行，做了以下恢复措施。</p><h2 id="替换-npm-CDN"><a href="#替换-npm-CDN" class="headerlink" title="替换 npm CDN"></a>替换 npm CDN</h2><p><a href="https://www.unpkg.com/">unpkg.com</a></p><ul><li>npm cdn<br><code>cdn.jsdelivr.net/npm</code> =&gt; <code>unpkg.com</code></li><li>github cdn<br><code>cdn.jsdelivr.net/gh</code> =&gt; <code>本地加载</code></li></ul><h2 id="自己部署live2d-api-php"><a href="#自己部署live2d-api-php" class="headerlink" title="自己部署live2d_api(php)"></a>自己部署live2d_api(php)</h2><p>看板娘的api网址也不能访问，查到<code>live2d_api</code>支持自己部署，果断部署到自己服务器上。</p><ol><li><p>安装php<br><a href="https://blog.csdn.net/weixin_41752294/article/details/90181805">参考资料</a></p></li><li><p>配置 <code>nginx</code> 访问服务<br>php默认端口9000，由于我改为了4001，nginx配置中配置为4001端口<br><code>/usr/local/php/etc php-fpm.conf</code> 中listen字段更改默认端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       4000;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    # 允许跨域</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Origin&#x27;  &#x27;*&#x27;;</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Credentials&#x27;   &#x27;true&#x27;;</span><br><span class="line">    add_header &#x27;Access-Control-Allow-Methods&#x27;  &#x27;GET, POST, OPTIONS&#x27;;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   www;</span><br><span class="line">        index index.php index.html index.htm; # 1. 加上 index.php</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 2. 增加如下配置</span><br><span class="line">    location ~ .php$ &#123;</span><br><span class="line">       root   www;</span><br><span class="line">       fastcgi_pass   127.0.0.1:4001;</span><br><span class="line">       fastcgi_index index.php;</span><br><span class="line">       fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">       include        fastcgi_params;</span><br><span class="line">       fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>https问题，需要申请域名、https证书… 额，就先这样吧~</p></li></ol><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>本来打算借此机会用一用docker，但是服务器上nginx已经安装过了，live2d_api也很简单不涉及到数据库相关的东西，最后还是决定简单的安装一下php，改一下nginx配置完事。<br><a href="https://docs.docker.com/engine/reference/commandline/ps/">docker官网</a><br><a href="https://blog.csdn.net/weixin_40357154/article/details/123398978">docker安装</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Dart学习笔记（二）</title>
      <link href="/2022/04/13/dart2/"/>
      <url>/2022/04/13/dart2/</url>
      
        <content type="html"><![CDATA[<h2 id="Map-字典"><a href="#Map-字典" class="headerlink" title="Map 字典"></a>Map 字典</h2><p><a href="https://api.flutter-io.cn/flutter/dart-core/Map-class.html">官网文档</a></p><h3 id="常⽤属性："><a href="#常⽤属性：" class="headerlink" title="常⽤属性："></a>常⽤属性：</h3><ul><li><code>keys</code> 获取所有的key值</li><li><code>values</code> 获取所有的value值</li><li><code>isEmpty</code> 是否为空</li><li><code>isNotEmpty</code> 是否不为空</li></ul><h3 id="常⽤⽅法"><a href="#常⽤⽅法" class="headerlink" title="常⽤⽅法:"></a>常⽤⽅法:</h3><ul><li><code>remove(key)</code> 删除指定key的数据</li><li><code>addAll(&#123;...&#125;)</code> 合并映射 给映射内增加属性</li><li><code>containsValue</code> 查看映射内的值 返回true/false</li><li><code>forEach</code> </li><li><code>map</code></li><li><code>where</code></li><li><code>any</code></li><li><code>every</code></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 声明</span></span><br><span class="line"><span class="keyword">var</span> myMap = &#123;&#125;;</span><br><span class="line"><span class="built_in">Map</span> map = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> map1 = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">Map</span> map2 = &#123;</span><br><span class="line">  <span class="string">&#x27;test&#x27;</span>:<span class="string">&#x27;test&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(map2[<span class="string">&#x27;test&#x27;</span>]); <span class="comment">// test</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Map</span> testMap = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(testMap.keys); <span class="comment">// (a, b, c)</span></span><br><span class="line"><span class="built_in">print</span>(testMap.values); <span class="comment">// (1, 2, 3)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(testMap.isEmpty); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">print</span>(testMap.isNotEmpty); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// remove</span></span><br><span class="line">testMap.remove(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="built_in">print</span>(testMap); <span class="comment">// &#123;b: 2, c: 3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// addAll</span></span><br><span class="line">testMap.addAll(&#123;<span class="string">&#x27;d&#x27;</span>:<span class="number">4</span>&#125;);</span><br><span class="line"><span class="built_in">print</span>(testMap); <span class="comment">// &#123;b: 2, c: 3, d: 4&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach</span></span><br><span class="line"><span class="keyword">final</span> planetsByMass = &lt;<span class="built_in">num</span>, <span class="built_in">String</span>&gt;&#123;</span><br><span class="line">  <span class="number">0.81</span>: <span class="string">&#x27;Venus&#x27;</span>,</span><br><span class="line">  <span class="number">1</span>: <span class="string">&#x27;Earth&#x27;</span>,</span><br><span class="line">  <span class="number">0.11</span>: <span class="string">&#x27;Mars&#x27;</span>,</span><br><span class="line">  <span class="number">17.15</span>: <span class="string">&#x27;Neptune&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">planetsByMass.forEach((key, value) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;<span class="subst">$key</span>: <span class="subst">$value</span>&#x27;</span>);</span><br><span class="line">  <span class="comment">// 0.81: Venus</span></span><br><span class="line">  <span class="comment">// 1: Earth</span></span><br><span class="line">  <span class="comment">// 0.11: Mars</span></span><br><span class="line">  <span class="comment">// 17.15: Neptune</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> planetsByMass = &lt;<span class="built_in">num</span>, <span class="built_in">String</span>&gt;&#123;</span><br><span class="line">  <span class="number">0.81</span>: <span class="string">&#x27;Venus&#x27;</span>,</span><br><span class="line">  <span class="number">1</span>: <span class="string">&#x27;Earth&#x27;</span>,</span><br><span class="line">  <span class="number">0.11</span>: <span class="string">&#x27;Mars&#x27;</span>,</span><br><span class="line">  <span class="number">17.15</span>: <span class="string">&#x27;Neptune&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach</span></span><br><span class="line">planetsByMass.forEach((key, value) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;<span class="subst">$key</span>: <span class="subst">$value</span>&#x27;</span>);</span><br><span class="line">  <span class="comment">// 0.81: Venus</span></span><br><span class="line">  <span class="comment">// 1: Earth</span></span><br><span class="line">  <span class="comment">// 0.11: Mars</span></span><br><span class="line">  <span class="comment">// 17.15: Neptune</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// map return新的Map </span></span><br><span class="line"><span class="comment">// 入参函数，函数return 数据类型需要为 MapEntry</span></span><br><span class="line"><span class="built_in">print</span>(planetsByMass.map(((key, value) =&gt; MapEntry(</span><br><span class="line">    key, value)))); <span class="comment">// &#123;0.81: Venus, 1: Earth, 0.11: Mars, 17.15: Neptune&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(planetsByMass.map(((key, value) =&gt; MapEntry(</span><br><span class="line">    key + <span class="number">1</span>, value)))); <span class="comment">//&#123;1.81: Venus, 2: Earth, 1.11: Mars, 18.15: Neptune&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p><a href="https://api.flutter-io.cn/flutter/dart-core/Set-class.html">官网文档</a><br>常用来数组去重</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Set</span>();</span><br><span class="line"></span><br><span class="line"> arr.add(<span class="string">&#x27;test1&#x27;</span>);</span><br><span class="line"> arr.add(<span class="string">&#x27;test1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">print</span>(arr.toList()); <span class="comment">// [test1]</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> arr1 = [<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>, <span class="string">&#x27;test1&#x27;</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>();</span><br><span class="line"> s.addAll(arr1);</span><br><span class="line"> <span class="built_in">print</span>(s.toList()); <span class="comment">// [&#x27;test&#x27;, &#x27;test1&#x27;, &#x27;test2&#x27;]</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> halogens = &#123;</span><br><span class="line">   <span class="string">&#x27;fluorine&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;chlorine&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;bromine&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;iodine&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;astatine&#x27;</span></span><br><span class="line"> &#125;; <span class="comment">// 定义一个集合</span></span><br><span class="line"> <span class="keyword">var</span> elements = &lt;<span class="built_in">String</span>&gt;&#123;&#125;;</span><br><span class="line"> elements.add(<span class="string">&#x27;fluorine&#x27;</span>); <span class="comment">// 给第二个数字添加一个值</span></span><br><span class="line"> <span class="built_in">print</span>(elements); <span class="comment">// &#123;fluorine&#125;</span></span><br><span class="line"> elements.addAll(halogens); <span class="comment">// 再和第一个数组中的值添加进来</span></span><br><span class="line"> <span class="built_in">print</span>(elements); <span class="comment">// &#123;fluorine, chlorine, bromine, iodine, astatine&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><p>箭头函数（和JS不⼀样,dart的箭头函数只能写⼀“⾏”）严谨的说法 1个表达式</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fruits = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;lemon&#x27;</span>, <span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>];</span><br><span class="line">fruits.where((name) =&gt; name.contains(<span class="string">&#x27;banana&#x27;</span>)).forEach(<span class="built_in">print</span>); <span class="comment">// banana</span></span><br></pre></td></tr></table></figure><h2 id="方法入参"><a href="#方法入参" class="headerlink" title="方法入参"></a>方法入参</h2><ul><li>参数 <code>func(name)</code></li><li>强制类型 <code>func(String name)</code></li><li>默认值 <code>func(String name=&#39;name&#39;)</code></li><li>可选参数 <code>func(name,[age,gender])</code></li><li>命名参数 <code>func(name,&#123;age,gender&#125;)</code></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dart 可以使用 [] 标记可选的位置参数，并将它放置在参数列表的最后。</span></span><br><span class="line"><span class="comment">// device 作为可选参数，可以不传入</span></span><br><span class="line"><span class="built_in">String</span> say(<span class="built_in">String</span> from, <span class="built_in">String</span> msg, [<span class="built_in">String</span> device = <span class="string">&#x27;&#x27;</span>]) &#123;</span><br><span class="line">  <span class="keyword">if</span> (device.isNotEmpty) <span class="keyword">return</span> <span class="string">&#x27;<span class="subst">$from</span> says <span class="subst">$msg</span> --- from <span class="subst">$device</span>&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;<span class="subst">$from</span> says <span class="subst">$msg</span>&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">print</span>(say(<span class="string">&#x27;Jim&#x27;</span>, <span class="string">&#x27;Hi&#x27;</span>)); <span class="comment">// Jim says Hi </span></span><br><span class="line"> <span class="built_in">print</span>(say(<span class="string">&#x27;Jim&#x27;</span>, <span class="string">&#x27;Hi&#x27;</span>, <span class="string">&#x27;iPhone&#x27;</span>)); <span class="comment">// Jim says Hi  --- from iPhone</span></span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> say(<span class="built_in">String</span> from, <span class="built_in">String</span> msg, &#123;<span class="built_in">String</span> software = <span class="string">&#x27;&#x27;</span>, <span class="built_in">String</span> device = <span class="string">&#x27;&#x27;</span>&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;<span class="subst">$from</span> says <span class="subst">$msg</span> --- from <span class="subst">$device</span> <span class="subst">$software</span>&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(say(<span class="string">&#x27;Jim&#x27;</span>, <span class="string">&#x27;Hi&#x27;</span>, device: <span class="string">&#x27;iPhone&#x27;</span>, software: <span class="string">&#x27;QQ&#x27;</span>)); <span class="comment">// Jim says Hi  --- from iPhone QQ</span></span><br><span class="line"><span class="built_in">print</span>(say(<span class="string">&#x27;Jim&#x27;</span>, <span class="string">&#x27;Hi&#x27;</span>, software: <span class="string">&#x27;Wechat&#x27;</span>)); <span class="comment">// Jim says Hi  --- from  Wechat</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="async，await，Future"><a href="#async，await，Future" class="headerlink" title="async，await，Future"></a>async，await，Future</h2><p>多看看官网！ <a href="https://dart.cn/codelabs/async-await#what-is-a-future">官网传送门</a></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> foo() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;foo E&#x27;</span>);</span><br><span class="line">  <span class="built_in">String</span> value = <span class="keyword">await</span> bar();</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;foo X <span class="subst">$value</span>&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span> bar() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;bar E&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;main E&#x27;</span>);</span><br><span class="line">  foo();</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;main X&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印顺序</span></span><br><span class="line"><span class="comment">// main E</span></span><br><span class="line"><span class="comment">// foo E</span></span><br><span class="line"><span class="comment">// bar E</span></span><br><span class="line"><span class="comment">// main X</span></span><br><span class="line"><span class="comment">// foo X hello</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">foo() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;foo E&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> Future(bar).then((value) =&gt; <span class="built_in">print</span>(<span class="string">&#x27;foo X <span class="subst">$value</span>&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;bar E&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;main E&#x27;</span>);</span><br><span class="line">  foo();</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;main X&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main E</span></span><br><span class="line"><span class="comment">// foo E</span></span><br><span class="line"><span class="comment">// main X</span></span><br><span class="line"><span class="comment">// bar E</span></span><br><span class="line"><span class="comment">// foo X hello</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dart的代码执行顺序和js的evenloop是类似的；</p><p>以下代码的执行顺序：</p><ol><li>控制台打印<code>start</code>;</li><li>执行countSeconds()方法，countSeconds中是Future.delayed，放入异步任务中；</li><li>执行printOrderMessage(), 控制台打印：<code>Awaiting user order...</code>;</li><li>执行fetchUserOrder(), fetchUserOrder中是Future.delayed, 放入异步任务中；</li><li>这个时候先执行countSeconds中的异步任务，控制台依次打印<code>1 2 3 4</code>；</li><li>再执行fetchUserOrder中的异步任务，得到order，控制台打印<code>Your order is: Large Latte</code>;</li><li>控制台打印<code>end</code>;</li></ol><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在官网例子的基础上 增加了 start end 的打印</span></span><br><span class="line">Future&lt;<span class="keyword">void</span>&gt; printOrderMessage() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Awaiting user order...&#x27;</span>); </span><br><span class="line">  <span class="keyword">var</span> order = <span class="keyword">await</span> fetchUserOrder();</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Your order is: <span class="subst">$order</span>&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">String</span>&gt; fetchUserOrder() &#123;</span><br><span class="line">  <span class="comment">// Imagine that this function is more complex and slow.</span></span><br><span class="line">  <span class="keyword">return</span> Future.delayed(<span class="keyword">const</span> <span class="built_in">Duration</span>(seconds: <span class="number">4</span>), () =&gt; <span class="string">&#x27;Large Latte&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;start&#x27;</span>);</span><br><span class="line">  countSeconds(<span class="number">4</span>);</span><br><span class="line">  <span class="keyword">await</span> printOrderMessage();</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;end&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// You can ignore this function - it&#x27;s here to visualize delay time in this example.</span></span><br><span class="line"><span class="keyword">void</span> countSeconds(<span class="built_in">int</span> s) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= s; i++) &#123;</span><br><span class="line">    Future.delayed(<span class="built_in">Duration</span>(seconds: i), () =&gt; <span class="built_in">print</span>(i));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印结果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">start</span><br><span class="line">Awaiting user order...</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">Your order is: Large Latte</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>以上的例子再稍稍做一下改动：将16行<code>printOrderMessage</code> 前面的await去掉，再来看看代码的打印顺序。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Future&lt;<span class="keyword">void</span>&gt; printOrderMessage() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Awaiting user order...&#x27;</span>); </span><br><span class="line">  <span class="keyword">var</span> order = <span class="keyword">await</span> fetchUserOrder();</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Your order is: <span class="subst">$order</span>&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">String</span>&gt; fetchUserOrder() &#123;</span><br><span class="line">  <span class="comment">// Imagine that this function is more complex and slow.</span></span><br><span class="line">  <span class="keyword">return</span> Future.delayed(<span class="keyword">const</span> <span class="built_in">Duration</span>(seconds: <span class="number">4</span>), () =&gt; <span class="string">&#x27;Large Latte&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;start&#x27;</span>);</span><br><span class="line">  countSeconds(<span class="number">4</span>);</span><br><span class="line">  <span class="comment">// 去掉 await</span></span><br><span class="line">  printOrderMessage();</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;end&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// You can ignore this function - it&#x27;s here to visualize delay time in this example.</span></span><br><span class="line"><span class="keyword">void</span> countSeconds(<span class="built_in">int</span> s) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= s; i++) &#123;</span><br><span class="line">    Future.delayed(<span class="built_in">Duration</span>(seconds: i), () =&gt; <span class="built_in">print</span>(i));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印顺序:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">start</span><br><span class="line">Awaiting user order...</span><br><span class="line">end</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">Your order is: Large Latte</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Getter-和-Setter"><a href="#Getter-和-Setter" class="headerlink" title="Getter 和 Setter"></a>Getter 和 Setter</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> </span>&#123;</span><br><span class="line">  <span class="built_in">num</span> left, top, width, height;</span><br><span class="line"></span><br><span class="line">  Rectangle (<span class="keyword">this</span>.left, <span class="keyword">this</span>.top, <span class="keyword">this</span>.width, <span class="keyword">this</span>.height);</span><br><span class="line">  <span class="comment">// 定义两个计算属性：right 和 bottom。</span></span><br><span class="line">  <span class="built_in">num</span> <span class="keyword">get</span> right =&gt; left + width;</span><br><span class="line">  <span class="keyword">set</span> right (<span class="built_in">num</span> value) =&gt; left = value - width;</span><br><span class="line">  <span class="built_in">num</span> <span class="keyword">get</span> bottom =&gt; top + height;</span><br><span class="line">  <span class="keyword">set</span> bottom (<span class="built_in">num</span> value) =&gt; top = value - height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main () &#123;</span><br><span class="line">  <span class="keyword">var</span> rect = Rectangle (<span class="number">3</span>, <span class="number">4</span>, <span class="number">20</span>, <span class="number">15</span>);</span><br><span class="line">  <span class="comment">// 断言 debug模式下 值false控制台会报错</span></span><br><span class="line">  <span class="keyword">assert</span>(rect.left == <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">  rect.right = <span class="number">12</span>; <span class="comment">// set</span></span><br><span class="line">  <span class="keyword">assert</span>(rect.left == <span class="number">-8</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回一个函数，返回的函数参数与 addBy 相加。</span></span><br><span class="line"><span class="built_in">Function</span> makeAdder(<span class="built_in">num</span> addBy) &#123;</span><br><span class="line">  <span class="keyword">return</span> (<span class="built_in">num</span> i) =&gt; addBy + i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="comment">// 创建一个加 2 的函数</span></span><br><span class="line">  <span class="keyword">var</span> add2 = makeAdder(<span class="number">2</span>);</span><br><span class="line">  <span class="comment">// 创建一个加 4 的函数</span></span><br><span class="line">  <span class="keyword">var</span> add4 = makeAdder(<span class="number">4</span>);</span><br><span class="line">  <span class="comment">// 验证是否是同一个对象</span></span><br><span class="line">  <span class="keyword">assert</span>(add2(<span class="number">3</span>) == <span class="number">5</span>);</span><br><span class="line">  <span class="keyword">assert</span>(add4(<span class="number">3</span>) == <span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="class-类"><a href="#class-类" class="headerlink" title="class 类"></a>class 类</h2><p> Dart 是一种基于类和 mixin 继承机制的面向对象的语言。每个对象都是一个类的实例，所有的类均继承自 Object。基于 Mixin 继承 意味着每个类都只有一个超类，一个类中的代码可以在其他多个继承类中重复使用。Dart 中的构造函数分为默认构造函数和命名构造函数。</p><h3 id="默认构造函数"><a href="#默认构造函数" class="headerlink" title="默认构造函数"></a>默认构造函数</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认构造函数</span></span><br><span class="line"><span class="comment">// 如果没有声明构造函数，Dart 会提供一个默认的构造函数。默认会调用父类的无参构造函数。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  Person()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;this is person&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Student 未声明构造函数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123; &#125; </span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="comment">// new 关键字可以省略</span></span><br><span class="line">  <span class="keyword">var</span> stu = <span class="keyword">new</span> Student(); <span class="comment">// this is person</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="命名构造函数"><a href="#命名构造函数" class="headerlink" title="命名构造函数"></a>命名构造函数</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> firstName;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> lastName;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> name;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 声明构造函数 并 属性赋值</span></span><br><span class="line"> <span class="comment">// Dart 提供了在构造函数体执行前初始化实例变量的功能，各参数的初始化用逗号分隔。使用初始化列表可以很方便的设置 final 字段。</span></span><br><span class="line">  Student(<span class="keyword">this</span>.firstName,<span class="keyword">this</span>.lastName)</span><br><span class="line">    : name = firstName + lastName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="keyword">var</span> stu = <span class="keyword">new</span> Student(<span class="string">&#x27;Halon&#x27;</span>,<span class="string">&#x27;Jim&#x27;</span>);</span><br><span class="line">  <span class="built_in">print</span>(stu.name); <span class="comment">// HalonJim</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="扩展类-继承"><a href="#扩展类-继承" class="headerlink" title="扩展类 继承"></a>扩展类 继承</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="comment">// 父类定义了 dowWork 方法</span></span><br><span class="line">  <span class="keyword">void</span> doWork()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;person work&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这是子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="comment">// 使用 @override 重写父类方法</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> doWork()&#123;</span><br><span class="line">    <span class="comment">// 可以调用父类，并增加子类想添加的方法</span></span><br><span class="line">    <span class="keyword">super</span>.doWork();</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;student study&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">var</span> student =  Student();</span><br><span class="line">  student.doWork();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// person work</span></span><br><span class="line"><span class="comment">// student study</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 创建抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> name;</span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> weapon;</span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> run;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用 implements 继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fighter</span> <span class="keyword">implements</span> <span class="title">Vehicle</span> </span>&#123;</span><br><span class="line"> <span class="comment">// 修饰符 @override 会告诉分析器你当前是在复写某个成员方法，如果该复写不成功，分析器就会报错</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> name =&gt; <span class="string">&#x27;fighter&#x27;</span>;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> weapon =&gt; <span class="string">&#x27;missile&#x27;</span>;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> run =&gt; <span class="string">&#x27;fly&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> toString() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;<span class="subst">$name</span> can <span class="subst">$run</span>,use <span class="subst">$weapon</span> as weapon.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用 implements 继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tank</span> <span class="keyword">implements</span> <span class="title">Vehicle</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> name =&gt; <span class="string">&#x27;tank&#x27;</span>;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> weapon =&gt; <span class="string">&#x27;cannon&#x27;</span>;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> <span class="keyword">get</span> run =&gt; <span class="string">&#x27;run&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> toString() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;<span class="subst">$name</span> can <span class="subst">$run</span>,use <span class="subst">$weapon</span> as weapon.&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建工厂类，来返回相应的类型</span></span><br><span class="line">Vehicle vehicleFactory(<span class="built_in">String</span> type) &#123;</span><br><span class="line">  <span class="keyword">if</span> (type == <span class="string">&#x27;fighter&#x27;</span>) <span class="keyword">return</span> Fighter();</span><br><span class="line">  <span class="keyword">if</span> (type == <span class="string">&#x27;tank&#x27;</span>) <span class="keyword">return</span> Tank();</span><br><span class="line">  <span class="keyword">throw</span> <span class="string">&#x27;can not create <span class="subst">$type</span>.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">final</span> fighter = vehicleFactory(<span class="string">&#x27;fighter&#x27;</span>);</span><br><span class="line">  <span class="keyword">final</span> tank = vehicleFactory(<span class="string">&#x27;tank&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(fighter);</span><br><span class="line">  <span class="built_in">print</span>(tank);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Mixin"><a href="#Mixin" class="headerlink" title="Mixin"></a>Mixin</h2><p> Mixin 可以为类添加额外的功能，而且使用 Mixin 与其他类之间也不存在层级和继承关系。使用 Mixin 也很简单，通过 with 后面跟一个或多个混入的名称就可以了。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// abstract 定义抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Mammal</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Bird</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Fish</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">mixin</span> Walker &#123;</span><br><span class="line">  <span class="keyword">void</span> walk() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I&#x27;m walking&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">mixin</span> Swimmer &#123;</span><br><span class="line">  <span class="keyword">void</span> swim() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I&#x27;m swimming&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">mixin</span> Flyer &#123;</span><br><span class="line">  <span class="keyword">void</span> Fly() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I&#x27;m swimming&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 海豚是哺乳动物 可以游泳</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dolphin</span> <span class="keyword">extends</span> <span class="title">Mammal</span> <span class="title">with</span> <span class="title">Swimmer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 蝙蝠是哺乳动物 可以走和飞</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bat</span> <span class="keyword">extends</span> <span class="title">Mammal</span> <span class="title">with</span> <span class="title">Walker</span>, <span class="title">Flyer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 猫是哺乳动物 可以走</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Mammal</span> <span class="title">with</span> <span class="title">Walker</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鸽子是鸟 可以走和飞</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dove</span> <span class="keyword">extends</span> <span class="title">Bird</span> <span class="title">with</span> <span class="title">Walker</span>, <span class="title">Flyer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鸭子是禽类 可以走 游泳和飞</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Duck</span> <span class="keyword">extends</span> <span class="title">Bird</span> <span class="title">with</span> <span class="title">Walker</span>, <span class="title">Swimmer</span>, <span class="title">Flyer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 飞鱼是鱼类 可以游泳和飞</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlyingFish</span> <span class="keyword">extends</span> <span class="title">Fish</span> <span class="title">with</span> <span class="title">Swimmer</span>, <span class="title">Flyer</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) &#123;</span><br><span class="line">  Cat cat = Cat();</span><br><span class="line">  Duck duck = Duck();</span><br><span class="line"></span><br><span class="line">  cat.walk();</span><br><span class="line">  duck.swim();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Dart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>patch-package</title>
      <link href="/2022/04/12/patch-package/"/>
      <url>/2022/04/12/patch-package/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://www.npmjs.com/package/patch-package">传送门</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">npm</span></span><br><span class="line">npm i patch-package  --save-dev</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yarn</span></span><br><span class="line">yarn add patch-package postinstall-postinstall  --dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改package-json"><a href="#修改package-json" class="headerlink" title="修改package.json"></a>修改package.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;postinstall&quot;</span><span class="punctuation">:</span> <span class="string">&quot;patch-package&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这样在下载依赖的时候<code>patch-package</code>会自动为依赖包打上补丁。</p><h2 id="创建补丁"><a href="#创建补丁" class="headerlink" title="创建补丁"></a>创建补丁</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npx patch-package package-name   <span class="comment"># 使用npm [package-name]</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yarn patch-package package-name  <span class="comment"># 使用yarn</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行后通常会在项目根目录下的<code>patches</code>目录中创建一个名为<code>package-name+version.patch</code>的文件。将该patch文件提交至版本控制中，即可在之后应用该补丁了。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>补丁跟依赖包的版本是强关联的，在进行依赖包升级的时候需要注意。如果升级后的版本已经解决了相关问题，补丁就可以删掉了；否则需要为新版本的依赖包重新打补丁。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dart学习笔记（一）</title>
      <link href="/2022/04/06/dart1/"/>
      <url>/2022/04/06/dart1/</url>
      
        <content type="html"><![CDATA[<h2 id="Dart-介绍"><a href="#Dart-介绍" class="headerlink" title="Dart 介绍"></a>Dart 介绍</h2><p><a href="https://api.dart.dev/stable/2.16.2/index.html">官网</a><br>Dart 是由谷歌开发的计算机编程语言。被用于 Web、服务器、移动应用和物联网等领域的开发。它使用宽松开源许可证（BSD 证书）。Dart 被设计为面向对象的、类定义的、单继承的语言。它的语法有点类似 C 语言，并且可以转译为 JavaScript，支持混入（mixins）、接口（interfaces）、抽象类（abstract classes）、具体化泛型（reified generics）、可选类型（optional typing）与 sound type system。</p><h2 id="Dart数据类型"><a href="#Dart数据类型" class="headerlink" title="Dart数据类型"></a>Dart数据类型</h2><ul><li>数值 Number int double</li><li>字符串 String</li><li>布尔值 bool</li><li>数组 List</li><li>字典 Map</li><li>Set  Set 是一个元素唯一且无序的集合</li><li>Runes</li><li>Symbol</li><li>Null</li></ul><p>Dart 支持类型推断，所以大多数情况下，并不需要显式的指定类型。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">&quot;this is a name&quot;</span>; <span class="comment">// 字符串</span></span><br><span class="line">  <span class="keyword">var</span> year = <span class="number">2020</span>; <span class="comment">// 整型</span></span><br><span class="line">  <span class="keyword">var</span> money = <span class="number">15.32</span>; <span class="comment">// 浮点型</span></span><br><span class="line">  <span class="keyword">var</span> fruits = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;lemon&#x27;</span>, <span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]; <span class="comment">// 数组</span></span><br><span class="line">  <span class="keyword">var</span> student = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&quot;Jim&quot;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">12</span>&#125;; <span class="comment">// 对象</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Object 是所有 Dart 对象的基类型，所以任何值都可以赋值给 Object。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">&quot;this is a name&quot;</span>; <span class="comment">// 字符串</span></span><br><span class="line">  <span class="keyword">var</span> year = <span class="number">2020</span>; <span class="comment">// 整型</span></span><br><span class="line">  <span class="built_in">Object</span> obj;</span><br><span class="line">  <span class="comment">// 以下代码都可以正常运行</span></span><br><span class="line">  obj = name;</span><br><span class="line">  <span class="built_in">print</span>(obj);</span><br><span class="line"></span><br><span class="line">  obj = year;</span><br><span class="line">  <span class="built_in">print</span>(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.数值</span></span><br><span class="line"> <span class="built_in">int</span> intvalue = <span class="number">0</span>;</span><br><span class="line"> <span class="built_in">double</span> <span class="built_in">num</span> = <span class="number">1.2222</span>; <span class="comment">// 浮点数</span></span><br></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.字符串</span></span><br><span class="line"><span class="built_in">String</span> str1 = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="built_in">String</span> str2 = <span class="string">&#x27;dart!&#x27;</span>;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;<span class="subst">$str1</span> <span class="subst">$str2</span>&quot;</span>); <span class="comment">// hello dart!  字符串拼接</span></span><br><span class="line"><span class="comment">// &#x27;&#x27;&#x27; 3个引号（单引号、多引号）可以用来写多行字符串</span></span><br><span class="line"><span class="built_in">String</span> str3 = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            第一行</span></span><br><span class="line"><span class="string">            第二行</span></span><br><span class="line"><span class="string">            第三行</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span>;</span><br><span class="line"><span class="built_in">print</span>(str3);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> booll = <span class="keyword">true</span>;</span><br><span class="line"><span class="built_in">bool</span> bool2 = <span class="keyword">false</span>;</span><br><span class="line"><span class="built_in">print</span>(booll); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> list1 = [];</span><br><span class="line"><span class="keyword">var</span> list2 = [];</span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list3 = [<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;arr&#x27;</span>]; <span class="comment">// 指定类型list</span></span><br></pre></td></tr></table></figure><h4 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list = [<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;arr&#x27;</span>]; <span class="comment">// 指定类型list</span></span><br><span class="line"><span class="built_in">print</span>(list[<span class="number">0</span>]); <span class="comment">// test</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> listTake = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// take</span></span><br><span class="line"><span class="built_in">print</span>(listTake.take(<span class="number">2</span>)); <span class="comment">// (1,2) 从0开始取count个元素，并返回结果</span></span><br><span class="line"><span class="comment">// takeWhile</span></span><br><span class="line"><span class="built_in">print</span>(listTake.takeWhile((value) =&gt; value &lt; <span class="number">5</span>)); <span class="comment">// (1, 2, 3, 4) 返回listTake</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// retainWhere</span></span><br><span class="line">listTake.retainWhere((element) =&gt; element&gt;<span class="number">2</span>); <span class="comment">// 改变原数组</span></span><br><span class="line"><span class="built_in">print</span>(listTake); <span class="comment">// [3, 4, 5]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list = [<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;arr&#x27;</span>]; <span class="comment">// 指定类型list</span></span><br><span class="line"><span class="built_in">print</span>(list.length); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> list = [];</span><br><span class="line"><span class="comment">// add</span></span><br><span class="line">list.add(<span class="number">1</span>); <span class="comment">// 添加单个</span></span><br><span class="line"><span class="comment">// addAll</span></span><br><span class="line">list.addAll([<span class="number">2</span>, <span class="number">3</span>]); <span class="comment">// 可以做数组合并</span></span><br></pre></td></tr></table></figure><h4 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> list = [];</span><br><span class="line"><span class="comment">// insert</span></span><br><span class="line">list.insert(<span class="number">0</span>, <span class="number">12</span>); <span class="comment">// 入参 index,value</span></span><br><span class="line"><span class="built_in">print</span>(list); <span class="comment">// [12]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// insertAll</span></span><br><span class="line">list.insertAll(<span class="number">0</span>, [<span class="number">10</span>, <span class="number">11</span>]);</span><br><span class="line"><span class="built_in">print</span>(list); <span class="comment">// [10, 11, 12]</span></span><br></pre></td></tr></table></figure><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// setAll</span></span><br><span class="line"><span class="built_in">List</span> list = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line">list.setAll(<span class="number">1</span>, [<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;set1&#x27;</span>]); <span class="comment">// 从index开始逐个替换</span></span><br><span class="line"><span class="built_in">print</span>(list); <span class="comment">// [0, set, set1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fillRange</span></span><br><span class="line"><span class="built_in">List</span> listFill = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">listFill.fillRange(<span class="number">1</span>, <span class="number">3</span>, <span class="number">66</span>); <span class="comment">// fillRange(start,end,value) 从start-end每个元素⽤value替换</span></span><br><span class="line"><span class="built_in">print</span>(listFill); <span class="comment">// [1, 66, 66, 4, 5]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> listRemove = &lt;<span class="built_in">int</span>&gt;[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// remove</span></span><br><span class="line">listRemove.remove(<span class="number">0</span>); <span class="comment">// 入参值 删除第一个相同的值</span></span><br><span class="line"><span class="built_in">print</span>(listRemove); <span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 0]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// removeAt</span></span><br><span class="line">listRemove.removeAt(<span class="number">0</span>); <span class="comment">// 入参index</span></span><br><span class="line"><span class="built_in">print</span>(listRemove); <span class="comment">// [2, 3, 4, 5, 6, 7, 8, 0]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// removeLast</span></span><br><span class="line">listRemove.removeLast(); <span class="comment">// 删除数组最后一位</span></span><br><span class="line"><span class="built_in">print</span>(listRemove); <span class="comment">// [2, 3, 4, 5, 6, 7, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// removeRange</span></span><br><span class="line">listRemove.removeRange(<span class="number">1</span>, <span class="number">3</span>); <span class="comment">// 删除指定范围的值，包含start,不包含end</span></span><br><span class="line"><span class="built_in">print</span>(listRemove); <span class="comment">// [2, 5, 6, 7, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// removeWhere</span></span><br><span class="line">listRemove.removeWhere((e) =&gt; e == <span class="number">8</span>); <span class="comment">// 删除满足条件的值 删除8</span></span><br><span class="line"><span class="built_in">print</span>(listRemove); <span class="comment">// [2, 5, 6, 7]</span></span><br><span class="line">listRemove.removeWhere((e) =&gt; e &gt; <span class="number">4</span>); <span class="comment">// 删除满足条件的值 删除大于4的值</span></span><br><span class="line"><span class="built_in">print</span>(listRemove); <span class="comment">// [2]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> listIndex = &lt;<span class="built_in">int</span>&gt;[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>];</span><br><span class="line"><span class="built_in">print</span>(listIndex.indexOf(<span class="number">1</span>)); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">print</span>(listIndex.lastIndexOf(<span class="number">0</span>)); <span class="comment">// 3 从后往前找，返回第一个满足条件的额值</span></span><br></pre></td></tr></table></figure><h4 id="翻转"><a href="#翻转" class="headerlink" title="翻转"></a>翻转</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> listReversed = &lt;<span class="built_in">String</span>&gt;[<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;arr&#x27;</span>];</span><br><span class="line"><span class="built_in">print</span>(listReversed.reversed); <span class="comment">// (arr, str, test) </span></span><br><span class="line"><span class="built_in">print</span>(listReversed.reversed.toList()); <span class="comment">// [arr, str, test] 返回新list</span></span><br></pre></td></tr></table></figure><h4 id="首尾值"><a href="#首尾值" class="headerlink" title="首尾值"></a>首尾值</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> list = &lt;<span class="built_in">String</span>&gt;[<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;arr&#x27;</span>];</span><br><span class="line"><span class="built_in">print</span>(list.first); <span class="comment">// test  </span></span><br><span class="line"><span class="built_in">print</span>(list.last); <span class="comment">// arr</span></span><br></pre></td></tr></table></figure><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; lists = [<span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;str1&#x27;</span>, <span class="string">&#x27;str2&#x27;</span>];</span><br><span class="line"><span class="comment">// map</span></span><br><span class="line"><span class="built_in">print</span>(lists.map((e) =&gt; e)); <span class="comment">// (str, str1, str2)</span></span><br><span class="line"><span class="built_in">print</span>(lists.map((e) =&gt; e == <span class="string">&#x27;str&#x27;</span>)); <span class="comment">// (true, false, false)</span></span><br><span class="line"><span class="built_in">print</span>(lists.map((e) =&gt; e).toList()); <span class="comment">// [str, str1, str2]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testList = &lt;<span class="built_in">int</span>&gt;[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="comment">// forEach</span></span><br><span class="line">testList.forEach(<span class="built_in">print</span>); <span class="comment">// 依次打印值</span></span><br><span class="line"><span class="comment">// firstWhere</span></span><br><span class="line"><span class="built_in">print</span>(testList.firstWhere((e) =&gt; e &gt; <span class="number">3</span>)); <span class="comment">// 4 返回第一个满足条件的值</span></span><br><span class="line"><span class="comment">// lastWhere</span></span><br><span class="line"><span class="built_in">print</span>(testList.lastWhere((e) =&gt; e&lt;<span class="number">6</span> )); <span class="comment">// 5 重后往前找，返回第一个满足条件的值</span></span><br></pre></td></tr></table></figure><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> listSort = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">0</span>];</span><br><span class="line">listSort.sort();</span><br><span class="line"><span class="built_in">print</span>(listSort); <span class="comment">// [0, 1, 2, 4, 6]</span></span><br></pre></td></tr></table></figure><h4 id="乱序"><a href="#乱序" class="headerlink" title="乱序"></a>乱序</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> listShuffle = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="comment">// shuffle 随机打乱数组</span></span><br><span class="line">listShuffle.shuffle();</span><br><span class="line"><span class="built_in">print</span>(listShuffle); <span class="comment">// [2, 0, 3, 1] 随机</span></span><br></pre></td></tr></table></figure><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> testList = &lt;<span class="built_in">int</span>&gt;[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="comment">// contains 是否包含</span></span><br><span class="line"><span class="built_in">print</span>(testList.contains(<span class="number">0</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">print</span>(testList.contains(<span class="number">1</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">print</span>(testList.contains(<span class="number">6</span>)); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回满足条件的值 返回值格式Iterable </span></span><br><span class="line"><span class="built_in">print</span>(testList.where((element) =&gt; element &gt; <span class="number">3</span>)); <span class="comment">// (4, 5)</span></span><br><span class="line"><span class="comment">// any 是否存在满足条件的值</span></span><br><span class="line"><span class="built_in">print</span>(testList.any((element) =&gt; element &gt; <span class="number">3</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">print</span>(testList.any((element) =&gt; element &gt; <span class="number">6</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="comment">// every 是否所以值都满足条件</span></span><br><span class="line"><span class="built_in">print</span>(testList.every((element) =&gt; element &gt; <span class="number">3</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">print</span>(testList.every((element) =&gt; element &lt; <span class="number">6</span>)); <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Dart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微前端项目总结</title>
      <link href="/2022/01/18/qiankun/"/>
      <url>/2022/01/18/qiankun/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>又来记笔记了…</p><p>qiankun 官网地址：<a href="https://qiankun.umijs.org/zh/guide">https://qiankun.umijs.org/zh/guide</a></p><h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><p>大部分问题，官网上都是有解决方案，乾坤常用问题解决方案地址： <a href="https://qiankun.umijs.org/zh/faq">https://qiankun.umijs.org/zh/faq</a></p><p>主要记录一下部署的时候遇到的问题；</p><ol><li>主应用和子应用部署在不同服务器的情况，需要主应用配置代理，或者子应用的 ningx 配置设置一下 add_header，前端访问地址和api请求都需要设置一下</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">localhost /&#123;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">    add_header Access-Control-Allow-Origin &#x27;https://XXXXXX&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Credentials 网站访问地址不需要，api请求需要</span></span><br><span class="line">add_header Access-Control-Allow-Credentials &#x27;true&#x27;;    </span><br><span class="line">add_header Access-Control-Allow-Methods &#x27;GET, POST, OPTIONS&#x27;;</span><br><span class="line">add_header Access-Control-Allow-Headers &#x27;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&#x27;;</span><br><span class="line"></span><br><span class="line">if ($request_method = &#x27;OPTIONS&#x27;) &#123;</span><br><span class="line">return 204;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>线上环境在子应用页面刷新浏览器之后，页面空白无法加载子应用，且回退到主应用也无法加载主应用页面；</li></ol><p>这个问题当时花了挺长时间的，本地开发环境并不存在这个问题，随便刷新都是可以的，线上子应用刷新就直接白屏，项目文件报404错误，查了很多资料提供的解决方案都是让nginx代理，并没有什么用。最后查出来问题是子应用在打包的时候一定要配置 <code>publicPath</code>，不配置的情况子应用单独部署和访问虽然都是没有问题的，也就是因为单独部署和访问都没问题就导致排查问题的时候一直没往这块想！坑死~</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然刚开始的时候举步维艰、遇到了很多问题，但是项目做完之后回来总结却发现，其实并不难，真的就还挺简单的。</p>]]></content>
      
      
      <categories>
          
          <category> 微前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>create-react-app配置记录</title>
      <link href="/2022/01/17/create-react-app2/"/>
      <url>/2022/01/17/create-react-app2/</url>
      
        <content type="html"><![CDATA[<h2 id="09-15补充"><a href="#09-15补充" class="headerlink" title="09-15补充"></a>09-15补充</h2><h3 id="PC-config-overrides-js-配置"><a href="#PC-config-overrides-js-配置" class="headerlink" title="PC config-overrides.js 配置"></a>PC config-overrides.js 配置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="comment">// node_modules/react-scripts/config/webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  override,</span><br><span class="line">  addDecoratorsLegacy,</span><br><span class="line">  addWebpackAlias,</span><br><span class="line">  addPostcssPlugins,</span><br><span class="line">  addWebpackPlugin,</span><br><span class="line">  addWebpackModuleRule,</span><br><span class="line">  adjustStyleLoaders,</span><br><span class="line">  setWebpackStats,</span><br><span class="line">  babelExclude,</span><br><span class="line">  setWebpackOptimizationSplitChunks</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;customize-cra&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BundleAnalyzerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;webpack-bundle-analyzer&#x27;</span>).<span class="property">BundleAnalyzerPlugin</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ProgressBarWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;progress-bar-webpack-plugin&#x27;</span>)</span><br><span class="line"><span class="comment">// const SpeedMeasureWebpackPlugin = require(&#x27;speed-measure-webpack-plugin&#x27;) // 显示打包速度</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ENV&#x27;</span>, process.<span class="property">env</span>.<span class="property">NODE_ENV</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;.&#x27;</span>, dir)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">override</span>(</span><br><span class="line">  <span class="comment">// 装饰器</span></span><br><span class="line">  <span class="title function_">addDecoratorsLegacy</span>(),</span><br><span class="line">  <span class="comment">// Alias</span></span><br><span class="line">  <span class="title function_">addWebpackAlias</span>(&#123;</span><br><span class="line">    <span class="string">&#x27;@&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@comps&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/pages/components&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@style&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/style&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@images&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/images&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@pages&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/pages&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@type&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/@types&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@api&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/utils/http&#x27;</span>),</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="comment">// 控制台只输出报错  https://www.shouce.ren/api/view/a/13366</span></span><br><span class="line">  <span class="title function_">setWebpackStats</span>(<span class="string">&#x27;errors-only&#x27;</span>),</span><br><span class="line">  <span class="comment">// postcss</span></span><br><span class="line">  <span class="title function_">addPostcssPlugins</span>([</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;postcss-autoreset&#x27;</span>)(&#123;</span><br><span class="line">      <span class="comment">// 重置浏览器默认样式</span></span><br><span class="line">      <span class="attr">reset</span>: &#123;</span><br><span class="line">        <span class="attr">margin</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="number">0</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">  ]),</span><br><span class="line">  <span class="comment">// 排除</span></span><br><span class="line">  <span class="title function_">babelExclude</span>(<span class="string">&#x27;/node_modules/&#x27;</span>),</span><br><span class="line">  <span class="comment">// analyzer</span></span><br><span class="line">  process.<span class="property">env</span>.<span class="property">REACT_APP_REPORT</span> == <span class="string">&#x27;true&#x27;</span> ? <span class="title function_">addWebpackPlugin</span>(<span class="keyword">new</span> <span class="title class_">BundleAnalyzerPlugin</span>()) : <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="comment">// 给打包加 进度条  webpackbar &amp; progress-bar-webpack-plugin</span></span><br><span class="line">  <span class="title function_">addWebpackPlugin</span>(<span class="keyword">new</span> <span class="title class_">ProgressBarWebpackPlugin</span>()),</span><br><span class="line">  <span class="title function_">setWebpackOptimizationSplitChunks</span>(&#123;</span><br><span class="line">    <span class="attr">maxInitialRequests</span>: <span class="number">20</span>,<span class="comment">// 最大初始请求数量</span></span><br><span class="line">    <span class="attr">minSize</span>: <span class="number">50</span> * <span class="number">1024</span>, <span class="comment">// 抽离体积大于50kb的chunk</span></span><br><span class="line">    <span class="attr">minChunks</span>: <span class="number">2</span>,  <span class="comment">// 抽离被多个入口引用次数大于等于2的chunk</span></span><br><span class="line">    <span class="comment">// 缓存组</span></span><br><span class="line">    <span class="attr">cacheGroups</span>: &#123;</span><br><span class="line">      <span class="attr">antDesign</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;chunk-antDesign&#x27;</span>,</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]_?@ant-design(.*)/</span>,</span><br><span class="line">        <span class="attr">priority</span>: <span class="number">10</span>, <span class="comment">// 缓存组打包的先后优先级，数值大的优先</span></span><br><span class="line">        <span class="attr">enforce</span>: <span class="literal">true</span>, <span class="comment">//告诉 webpack 忽略 splitChunks.minSize, splitChunks.minChunks, splitChunks.maxAsyncRequests and splitChunks.maxInitialRequests，始终为此缓存组创建 chunk。</span></span><br><span class="line">        <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span>, <span class="comment">// 如果当前的 chunk 已被从 split 出来，那么将会直接复用这个 chunk 而不是重新创建一个</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">wangEditor</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;chunk-wangEditor&#x27;</span>,</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]_?@wangeditor(.*)/</span>,</span><br><span class="line">        <span class="attr">priority</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">enforce</span>: <span class="literal">true</span>, <span class="comment">// 始终为此缓存组创建 chunk。</span></span><br><span class="line">        <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span>, <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">antv</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;chunk-antv&#x27;</span>,</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]_?@antv(.*)/</span>,</span><br><span class="line">        <span class="attr">priority</span>: <span class="number">7</span>,</span><br><span class="line">        <span class="attr">minSize</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">enforce</span>: <span class="literal">true</span>, <span class="comment">// 始终为此缓存组创建 chunk。</span></span><br><span class="line">        <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span>, <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">nodesAsync</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;chunk-nodesAsync&#x27;</span>,</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]/</span>,</span><br><span class="line">        <span class="comment">// 一个模块可以属于多个缓存组。优化将优先考虑具有更高 priority（优先级）的缓存组。</span></span><br><span class="line">        <span class="comment">// 默认组的优先级为负，以允许自定义组获得更高的优先级（自定义组的默认值为 0）。</span></span><br><span class="line">        <span class="attr">priority</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">minChunks</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="comment">// chunks 代码块类型 必须三选一： “initial”（初始化） | “all”(默认就是 all) | “async”（动态加载）默认</span></span><br><span class="line">        <span class="attr">chunks</span>: <span class="string">&#x27;async&#x27;</span>, <span class="comment">// 仅打包异步引用的依赖</span></span><br><span class="line">        <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span>, <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">nodesInitial</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;chunk-nodesInitial&#x27;</span>,</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;static/js/[name].[contenthash:8].chunk.js&#x27;</span>, <span class="comment">// sy chunks 为 initial时，需要设置filename，否则无法启动</span></span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]/</span>,</span><br><span class="line">        <span class="attr">priority</span>: <span class="number">1</span>, <span class="comment">// 优先级</span></span><br><span class="line">        <span class="attr">minChunks</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">chunks</span>: <span class="string">&#x27;initial&#x27;</span>,</span><br><span class="line">        <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span>, <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="title function_">adjustStyleLoaders</span>(<span class="function"><span class="params">rule</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (rule.<span class="property">test</span>.<span class="title function_">toString</span>().<span class="title function_">includes</span>(<span class="string">&#x27;scss&#x27;</span>)) &#123;</span><br><span class="line">      rule.<span class="property">use</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;sass-resources-loader&#x27;</span>),</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="attr">resources</span>: [<span class="title function_">resolve</span>(<span class="string">&#x27;./src/assets/styles/theme/_theme.scss&#x27;</span>)],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="title function_">addWebpackModuleRule</span>(&#123;</span><br><span class="line">    <span class="attr">test</span>: <span class="regexp">/\.svg$/</span>,</span><br><span class="line">    <span class="attr">exclude</span>: [<span class="regexp">/node_modules/</span>],</span><br><span class="line">    <span class="attr">use</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;svg-sprite-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;&#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;svgo-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;&#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;)</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="react-scripts包webpack配置源码修改记录"><a href="#react-scripts包webpack配置源码修改记录" class="headerlink" title="react-scripts包webpack配置源码修改记录"></a>react-scripts包webpack配置源码修改记录</h3><blockquote><p>修改点 通过 <code>// sy</code> 查找</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @remove-on-eject-begin</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2015-present, Facebook, Inc.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This source code is licensed under the MIT license found in the</span></span><br><span class="line"><span class="comment"> * LICENSE file in the root directory of this source tree.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @remove-on-eject-end</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> resolve = <span class="built_in">require</span>(<span class="string">&#x27;resolve&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CaseSensitivePathsPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;case-sensitive-paths-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">InlineChunkHtmlPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/InlineChunkHtmlPlugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">TerserPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;terser-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;mini-css-extract-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;css-minimizer-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">WebpackManifestPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;webpack-manifest-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">InterpolateHtmlPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/InterpolateHtmlPlugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">WorkboxWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;workbox-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ModuleScopePlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/ModuleScopePlugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> getCSSModuleLocalIdent = <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/getCSSModuleLocalIdent&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ESLintPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;eslint-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> paths = <span class="built_in">require</span>(<span class="string">&#x27;./paths&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> modules = <span class="built_in">require</span>(<span class="string">&#x27;./modules&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> getClientEnvironment = <span class="built_in">require</span>(<span class="string">&#x27;./env&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ModuleNotFoundPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/ModuleNotFoundPlugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ForkTsCheckerWebpackPlugin</span> =</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">TSC_COMPILE_ON_ERROR</span> === <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    ? <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/ForkTsCheckerWarningWebpackPlugin&#x27;</span>)</span><br><span class="line">    : <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/ForkTsCheckerWebpackPlugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ReactRefreshWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;@pmmmwh/react-refresh-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="comment">// @remove-on-eject-begin</span></span><br><span class="line"><span class="keyword">const</span> getCacheIdentifier = <span class="built_in">require</span>(<span class="string">&#x27;react-dev-utils/getCacheIdentifier&#x27;</span>);</span><br><span class="line"><span class="comment">// @remove-on-eject-end</span></span><br><span class="line"><span class="keyword">const</span> createEnvironmentHash = <span class="built_in">require</span>(<span class="string">&#x27;./webpack/persistentCache/createEnvironmentHash&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Source maps are resource heavy and can cause out of memory issue for large source files.</span></span><br><span class="line"><span class="keyword">const</span> shouldUseSourceMap = process.<span class="property">env</span>.<span class="property">GENERATE_SOURCEMAP</span> !== <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> reactRefreshRuntimeEntry = <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;react-refresh/runtime&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> reactRefreshWebpackPluginRuntimeEntry = <span class="built_in">require</span>.<span class="title function_">resolve</span>(</span><br><span class="line">  <span class="string">&#x27;@pmmmwh/react-refresh-webpack-plugin&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> babelRuntimeEntry = <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;babel-preset-react-app&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> babelRuntimeEntryHelpers = <span class="built_in">require</span>.<span class="title function_">resolve</span>(</span><br><span class="line">  <span class="string">&#x27;@babel/runtime/helpers/esm/assertThisInitialized&#x27;</span>,</span><br><span class="line">  &#123; <span class="attr">paths</span>: [babelRuntimeEntry] &#125;</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> babelRuntimeRegenerator = <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;@babel/runtime/regenerator&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">paths</span>: [babelRuntimeEntry],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Some apps do not need the benefits of saving a web request, so not inlining the chunk</span></span><br><span class="line"><span class="comment">// makes for a smoother build process.</span></span><br><span class="line"><span class="keyword">const</span> shouldInlineRuntimeChunk = process.<span class="property">env</span>.<span class="property">INLINE_RUNTIME_CHUNK</span> !== <span class="string">&#x27;false&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> emitErrorsAsWarnings = process.<span class="property">env</span>.<span class="property">ESLINT_NO_DEV_ERRORS</span> === <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> disableESLintPlugin = process.<span class="property">env</span>.<span class="property">DISABLE_ESLINT_PLUGIN</span> === <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> imageInlineSizeLimit = <span class="built_in">parseInt</span>(</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">IMAGE_INLINE_SIZE_LIMIT</span> || <span class="string">&#x27;10000&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check if TypeScript is setup</span></span><br><span class="line"><span class="keyword">const</span> useTypeScript = fs.<span class="title function_">existsSync</span>(paths.<span class="property">appTsConfig</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check if Tailwind config exists</span></span><br><span class="line"><span class="keyword">const</span> useTailwind = fs.<span class="title function_">existsSync</span>(</span><br><span class="line">  path.<span class="title function_">join</span>(paths.<span class="property">appPath</span>, <span class="string">&#x27;tailwind.config.js&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get the path to the uncompiled service worker (if it exists).</span></span><br><span class="line"><span class="keyword">const</span> swSrc = paths.<span class="property">swSrc</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// style files regexes</span></span><br><span class="line"><span class="keyword">const</span> cssRegex = <span class="regexp">/\.css$/</span>;</span><br><span class="line"><span class="keyword">const</span> cssModuleRegex = <span class="regexp">/\.module\.css$/</span>;</span><br><span class="line"><span class="keyword">const</span> sassRegex = <span class="regexp">/\.(scss|sass)$/</span>;</span><br><span class="line"><span class="keyword">const</span> sassModuleRegex = <span class="regexp">/\.module\.(scss|sass)$/</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hasJsxRuntime = (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">DISABLE_NEW_JSX_TRANSFORM</span> === <span class="string">&#x27;true&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;react/jsx-runtime&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// sy nodejs核心模块，直接使用</span></span><br><span class="line"><span class="keyword">const</span> os = <span class="built_in">require</span>(<span class="string">&quot;os&quot;</span>);</span><br><span class="line"><span class="comment">// cpu核数</span></span><br><span class="line"><span class="keyword">const</span> threads = os.<span class="title function_">cpus</span>().<span class="property">length</span> - <span class="number">2</span> ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// This is the production and development configuration.</span></span><br><span class="line"><span class="comment">// It is focused on developer experience, fast rebuilds, and a minimal bundle.</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">webpackEnv</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> isEnvDevelopment = webpackEnv === <span class="string">&#x27;development&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> isEnvProduction = webpackEnv === <span class="string">&#x27;production&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Variable used for enabling profiling in Production</span></span><br><span class="line">  <span class="comment">// passed into alias object. Uses a flag if passed into the build command</span></span><br><span class="line">  <span class="keyword">const</span> isEnvProductionProfile =</span><br><span class="line">    isEnvProduction &amp;&amp; process.<span class="property">argv</span>.<span class="title function_">includes</span>(<span class="string">&#x27;--profile&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// We will provide `paths.publicUrlOrPath` to our app</span></span><br><span class="line">  <span class="comment">// as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.</span></span><br><span class="line">  <span class="comment">// Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.</span></span><br><span class="line">  <span class="comment">// Get environment variables to inject into our app.</span></span><br><span class="line">  <span class="keyword">const</span> env = <span class="title function_">getClientEnvironment</span>(paths.<span class="property">publicUrlOrPath</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> shouldUseReactRefresh = env.<span class="property">raw</span>.<span class="property">FAST_REFRESH</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// common function to get style loaders</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getStyleLoaders</span> = (<span class="params">cssOptions, preProcessor</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// sy 生产环境css提取 通过文件加载， 开发环境通过 style标签 注入css,以支持热加载</span></span><br><span class="line">    <span class="keyword">const</span> loaders = [</span><br><span class="line">      isEnvDevelopment &amp;&amp; <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;style-loader&#x27;</span>),</span><br><span class="line">      isEnvProduction &amp;&amp; &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">        <span class="comment">// css is located in `static/css`, use &#x27;../../&#x27; to locate index.html folder</span></span><br><span class="line">        <span class="comment">// in production `paths.publicUrlOrPath` can be a relative path</span></span><br><span class="line">        <span class="attr">options</span>: paths.<span class="property">publicUrlOrPath</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">          ? &#123; <span class="attr">publicPath</span>: <span class="string">&#x27;../../&#x27;</span> &#125;</span><br><span class="line">          : &#123;&#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;css-loader&#x27;</span>),</span><br><span class="line">        <span class="attr">options</span>: cssOptions,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Options for PostCSS as we reference these options twice</span></span><br><span class="line">        <span class="comment">// Adds vendor prefixing based on your specified browser support in</span></span><br><span class="line">        <span class="comment">// package.json</span></span><br><span class="line">        <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;postcss-loader&#x27;</span>),</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="attr">postcssOptions</span>: &#123;</span><br><span class="line">            <span class="comment">// Necessary for external CSS imports to work</span></span><br><span class="line">            <span class="comment">// https://github.com/facebook/create-react-app/issues/2677</span></span><br><span class="line">            <span class="attr">ident</span>: <span class="string">&#x27;postcss&#x27;</span>,</span><br><span class="line">            <span class="attr">config</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">plugins</span>: !useTailwind</span><br><span class="line">              ? [</span><br><span class="line">                  <span class="string">&#x27;postcss-flexbugs-fixes&#x27;</span>,</span><br><span class="line">                  [</span><br><span class="line">                    <span class="string">&#x27;postcss-preset-env&#x27;</span>,</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">autoprefixer</span>: &#123;</span><br><span class="line">                        <span class="attr">flexbox</span>: <span class="string">&#x27;no-2009&#x27;</span>,</span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">stage</span>: <span class="number">3</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                  ],</span><br><span class="line">                  <span class="comment">// Adds PostCSS Normalize as the reset css with default options,</span></span><br><span class="line">                  <span class="comment">// so that it honors browserslist config in package.json</span></span><br><span class="line">                  <span class="comment">// which in turn let&#x27;s users customize the target behavior as per their needs.</span></span><br><span class="line">                  <span class="string">&#x27;postcss-normalize&#x27;</span>,</span><br><span class="line">                ]</span><br><span class="line">              : [</span><br><span class="line">                  <span class="string">&#x27;tailwindcss&#x27;</span>,</span><br><span class="line">                  <span class="string">&#x27;postcss-flexbugs-fixes&#x27;</span>,</span><br><span class="line">                  [</span><br><span class="line">                    <span class="string">&#x27;postcss-preset-env&#x27;</span>,</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">autoprefixer</span>: &#123;</span><br><span class="line">                        <span class="attr">flexbox</span>: <span class="string">&#x27;no-2009&#x27;</span>,</span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">stage</span>: <span class="number">3</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                  ],</span><br><span class="line">                ],</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">sourceMap</span>: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line">    <span class="keyword">if</span> (preProcessor) &#123;</span><br><span class="line">      loaders.<span class="title function_">push</span>(</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;resolve-url-loader&#x27;</span>),</span><br><span class="line">          <span class="attr">options</span>: &#123;</span><br><span class="line">            <span class="attr">sourceMap</span>: isEnvProduction ? shouldUseSourceMap : isEnvDevelopment,</span><br><span class="line">            <span class="attr">root</span>: paths.<span class="property">appSrc</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(preProcessor),</span><br><span class="line">          <span class="attr">options</span>: &#123;</span><br><span class="line">            <span class="attr">sourceMap</span>: <span class="literal">true</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> loaders;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">target</span>: [<span class="string">&#x27;browserslist&#x27;</span>],</span><br><span class="line">    <span class="comment">// Webpack noise constrained to errors and warnings</span></span><br><span class="line">    <span class="attr">stats</span>: <span class="string">&#x27;errors-warnings&#x27;</span>,</span><br><span class="line">    <span class="attr">mode</span>: isEnvProduction ? <span class="string">&#x27;production&#x27;</span> : isEnvDevelopment &amp;&amp; <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    <span class="comment">// Stop compilation early in production</span></span><br><span class="line">    <span class="attr">bail</span>: isEnvProduction,</span><br><span class="line">    <span class="attr">devtool</span>: isEnvProduction</span><br><span class="line">      ? shouldUseSourceMap</span><br><span class="line">        ? <span class="string">&#x27;source-map&#x27;</span></span><br><span class="line">        : <span class="literal">false</span></span><br><span class="line">      : isEnvDevelopment &amp;&amp; <span class="string">&#x27;cheap-module-source-map&#x27;</span>,</span><br><span class="line">    <span class="comment">// These are the &quot;entry points&quot; to our application.</span></span><br><span class="line">    <span class="comment">// This means they will be the &quot;root&quot; imports that are included in JS bundle.</span></span><br><span class="line">    <span class="attr">entry</span>: paths.<span class="property">appIndexJs</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">      <span class="comment">// The build folder.</span></span><br><span class="line">      <span class="attr">path</span>: paths.<span class="property">appBuild</span>,</span><br><span class="line">      <span class="comment">// Add /* filename */ comments to generated require()s in the output.</span></span><br><span class="line">      <span class="attr">pathinfo</span>: isEnvDevelopment,</span><br><span class="line">      <span class="comment">// There will be one main bundle, and one file per asynchronous chunk.</span></span><br><span class="line">      <span class="comment">// In development, it does not produce real files.</span></span><br><span class="line">      <span class="attr">filename</span>: isEnvProduction</span><br><span class="line">        ? <span class="string">&#x27;static/js/[name].[contenthash:8].js&#x27;</span></span><br><span class="line">        : isEnvDevelopment &amp;&amp; <span class="string">&#x27;static/js/bundle.js&#x27;</span>,</span><br><span class="line">      <span class="comment">// There are also additional JS chunk files if you use code splitting.</span></span><br><span class="line">      <span class="attr">chunkFilename</span>: isEnvProduction</span><br><span class="line">        ? <span class="string">&#x27;static/js/[name].[contenthash:8].chunk.js&#x27;</span></span><br><span class="line">        : isEnvDevelopment &amp;&amp; <span class="string">&#x27;static/js/[name].chunk.js&#x27;</span>,</span><br><span class="line">      <span class="attr">assetModuleFilename</span>: <span class="string">&#x27;static/media/[name].[hash][ext]&#x27;</span>,</span><br><span class="line">      <span class="comment">// webpack uses `publicPath` to determine where the app is being served from.</span></span><br><span class="line">      <span class="comment">// It requires a trailing slash, or the file assets will get an incorrect path.</span></span><br><span class="line">      <span class="comment">// We inferred the &quot;public path&quot; (such as / or /my-project) from homepage.</span></span><br><span class="line">      <span class="attr">publicPath</span>: paths.<span class="property">publicUrlOrPath</span>,</span><br><span class="line">      <span class="comment">// Point sourcemap entries to original disk location (format as URL on Windows)</span></span><br><span class="line">      <span class="attr">devtoolModuleFilenameTemplate</span>: isEnvProduction</span><br><span class="line">        ? <span class="function"><span class="params">info</span> =&gt;</span></span><br><span class="line">            path</span><br><span class="line">              .<span class="title function_">relative</span>(paths.<span class="property">appSrc</span>, info.<span class="property">absoluteResourcePath</span>)</span><br><span class="line">              .<span class="title function_">replace</span>(<span class="regexp">/\\/g</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        : isEnvDevelopment &amp;&amp;</span><br><span class="line">          (<span class="function"><span class="params">info</span> =&gt;</span> path.<span class="title function_">resolve</span>(info.<span class="property">absoluteResourcePath</span>).<span class="title function_">replace</span>(<span class="regexp">/\\/g</span>, <span class="string">&#x27;/&#x27;</span>)),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">cache</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;filesystem&#x27;</span>,</span><br><span class="line">      <span class="attr">version</span>: <span class="title function_">createEnvironmentHash</span>(env.<span class="property">raw</span>),</span><br><span class="line">      <span class="attr">cacheDirectory</span>: paths.<span class="property">appWebpackCache</span>,</span><br><span class="line">      <span class="attr">store</span>: <span class="string">&#x27;pack&#x27;</span>,</span><br><span class="line">      <span class="attr">buildDependencies</span>: &#123;</span><br><span class="line">        <span class="attr">defaultWebpack</span>: [<span class="string">&#x27;webpack/lib/&#x27;</span>],</span><br><span class="line">        <span class="attr">config</span>: [__filename],</span><br><span class="line">        <span class="attr">tsconfig</span>: [paths.<span class="property">appTsConfig</span>, paths.<span class="property">appJsConfig</span>].<span class="title function_">filter</span>(<span class="function"><span class="params">f</span> =&gt;</span></span><br><span class="line">          fs.<span class="title function_">existsSync</span>(f)</span><br><span class="line">        ),</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// sy webpack基础 log信息</span></span><br><span class="line">    <span class="attr">infrastructureLogging</span>: &#123;</span><br><span class="line">      <span class="attr">level</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">optimization</span>: &#123;</span><br><span class="line">      <span class="comment">// sy named对调试更友好的可读的 id。deterministic: 被哈希转化成的小位数值模块名。</span></span><br><span class="line">      <span class="comment">// moduleIds: isEnvProduction ? &#x27;deterministic&#x27;: &#x27;named&#x27;,</span></span><br><span class="line">      <span class="comment">// usedExports: true, // 标记不被使用的函数, 用于 webpack5 的 tree sharking</span></span><br><span class="line">      <span class="comment">// runtimeChunk: true, // 运行时代码创建一个额外的 chunk，减少 entry chunk 体积，提高性能</span></span><br><span class="line">      <span class="attr">minimize</span>: isEnvProduction,</span><br><span class="line">      <span class="attr">minimizer</span>: [</span><br><span class="line">        <span class="comment">// This is only used in production mode</span></span><br><span class="line">        <span class="comment">// sy https://webpack.docschina.org/plugins/terser-webpack-plugin</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">TerserPlugin</span>(&#123;</span><br><span class="line">          <span class="comment">// parallel: true, // sy 默认true  使用多进程并发运行以提高构建速度。 并发运行的默认数量： os.cpus().length - 1 。</span></span><br><span class="line">          <span class="comment">// sy terserOptions 配置 https://github.com/terser/terser#minify-options</span></span><br><span class="line">          <span class="attr">terserOptions</span>: &#123;</span><br><span class="line">            <span class="attr">parse</span>: &#123;</span><br><span class="line">              <span class="comment">// We want terser to parse ecma 8 code. However, we don&#x27;t want it</span></span><br><span class="line">              <span class="comment">// to apply any minification steps that turns valid ecma 5 code</span></span><br><span class="line">              <span class="comment">// into invalid ecma 5 code. This is why the &#x27;compress&#x27; and &#x27;output&#x27;</span></span><br><span class="line">              <span class="comment">// sections only apply transformations that are ecma 5 safe</span></span><br><span class="line">              <span class="comment">// https://github.com/facebook/create-react-app/pull/4234</span></span><br><span class="line">              <span class="attr">ecma</span>: <span class="number">8</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">compress</span>: &#123;</span><br><span class="line">              <span class="attr">ecma</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="attr">warnings</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="comment">// Disabled because of an issue with Uglify breaking seemingly valid code:</span></span><br><span class="line">              <span class="comment">// https://github.com/facebook/create-react-app/issues/2376</span></span><br><span class="line">              <span class="comment">// Pending further investigation:</span></span><br><span class="line">              <span class="comment">// https://github.com/mishoo/UglifyJS2/issues/2011</span></span><br><span class="line">              <span class="attr">comparisons</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="comment">// Disabled because of an issue with Terser breaking valid code:</span></span><br><span class="line">              <span class="comment">// https://github.com/facebook/create-react-app/issues/5250</span></span><br><span class="line">              <span class="comment">// Pending further investigation:</span></span><br><span class="line">              <span class="comment">// https://github.com/terser-js/terser/issues/120</span></span><br><span class="line">              <span class="attr">inline</span>: <span class="number">2</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">mangle</span>: &#123;</span><br><span class="line">              <span class="attr">safari10</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Added for profiling in devtools</span></span><br><span class="line">            <span class="attr">keep_classnames</span>: isEnvProductionProfile,</span><br><span class="line">            <span class="attr">keep_fnames</span>: isEnvProductionProfile,</span><br><span class="line">            <span class="attr">output</span>: &#123;</span><br><span class="line">              <span class="attr">ecma</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="attr">comments</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="comment">// Turned on because emoji and regex is not minified properly using default</span></span><br><span class="line">              <span class="comment">// https://github.com/facebook/create-react-app/issues/2488</span></span><br><span class="line">              <span class="attr">ascii_only</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="comment">// This is only used in production mode</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>(),</span><br><span class="line">      ],</span><br><span class="line">       <span class="comment">// sy 代码切割</span></span><br><span class="line">       <span class="attr">splitChunks</span>: &#123;</span><br><span class="line">        <span class="attr">maxInitialRequests</span>: <span class="number">20</span>,<span class="comment">// 最大初始请求数量</span></span><br><span class="line">        <span class="attr">minSize</span>: <span class="number">50</span> * <span class="number">1024</span>, <span class="comment">// 抽离体积大于50kb的chunk</span></span><br><span class="line">        <span class="attr">minChunks</span>: <span class="number">2</span>, <span class="comment">// 抽离被多个入口引用次数大于等于2的chunk</span></span><br><span class="line">        <span class="attr">cacheGroups</span>: &#123;</span><br><span class="line">          <span class="attr">antDesign</span>: &#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&quot;chunk-antDesign&quot;</span>,</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]_?@ant-design(.*)/</span>,</span><br><span class="line">            <span class="attr">priority</span>: <span class="number">30</span>, <span class="comment">// 缓存组打包的先后优先级，数值大的优先</span></span><br><span class="line">            <span class="attr">enforce</span>: <span class="literal">true</span>, <span class="comment">//告诉 webpack 忽略 splitChunks.minSize, splitChunks.minChunks, splitChunks.maxAsyncRequests and splitChunks.maxInitialRequests，始终为此缓存组创建 chunk。</span></span><br><span class="line">            <span class="attr">reuseExistingChunk</span>:<span class="literal">true</span> <span class="comment">// 如果当前的 chunk 已被从 split 出来，那么将会直接复用这个 chunk 而不是重新创建一个</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">wangEditor</span>:&#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&quot;chunk-wangEditor&quot;</span>,</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]_?@wangeditor(.*)/</span>,</span><br><span class="line">            <span class="attr">priority</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="attr">enforce</span>: <span class="literal">true</span>, <span class="comment">// 始终为此缓存组创建 chunk。</span></span><br><span class="line">            <span class="attr">reuseExistingChunk</span>:<span class="literal">true</span> <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">antv</span>:&#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&quot;chunk-antv&quot;</span>,</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]_?@antv(.*)/</span>,</span><br><span class="line">            <span class="attr">priority</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">minSize</span>:<span class="number">0</span>,</span><br><span class="line">            <span class="attr">enforce</span>: <span class="literal">true</span>, <span class="comment">// 始终为此缓存组创建 chunk。</span></span><br><span class="line">            <span class="attr">reuseExistingChunk</span>:<span class="literal">true</span> <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">nodesAsync</span>: &#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&quot;chunk-nodesAsync&quot;</span>,</span><br><span class="line">            <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]/</span>,</span><br><span class="line">            <span class="comment">// 一个模块可以属于多个缓存组。优化将优先考虑具有更高 priority（优先级）的缓存组。</span></span><br><span class="line">            <span class="comment">// 默认组的优先级为负，以允许自定义组获得更高的优先级（自定义组的默认值为 0）。</span></span><br><span class="line">            <span class="attr">priority</span>: <span class="number">8</span>,</span><br><span class="line">            <span class="attr">minChunks</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="comment">// chunks 代码块类型 必须三选一： “initial”（初始化） | “all”(默认就是 all) | “async”（动态加载）默认</span></span><br><span class="line">            <span class="attr">chunks</span>: <span class="string">&quot;async&quot;</span>,<span class="comment">// 仅打包异步引用的依赖</span></span><br><span class="line">            <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span> <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">        &#125;,</span><br><span class="line">          <span class="attr">nodesInitial</span>: &#123;</span><br><span class="line">              <span class="attr">name</span>:<span class="string">&quot;chunk-nodesInitial&quot;</span>,</span><br><span class="line">              <span class="attr">filename</span>: <span class="string">&#x27;static/js/[name].[contenthash:8].chunk.js&#x27;</span>, <span class="comment">// sy chunks 为 initial时，需要设置filename，否则无法启动</span></span><br><span class="line">              <span class="attr">test</span>: <span class="regexp">/[\/]node_modules[\/]/</span>,</span><br><span class="line">              <span class="attr">priority</span>: <span class="number">1</span>, <span class="comment">// 优先级</span></span><br><span class="line">              <span class="attr">minChunks</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="attr">chunks</span>: <span class="string">&quot;initial&quot;</span>,</span><br><span class="line">              <span class="attr">reuseExistingChunk</span>:<span class="literal">true</span> <span class="comment">// 重复使用已经存在的块</span></span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">      <span class="comment">// This allows you to set a fallback for where webpack should look for modules.</span></span><br><span class="line">      <span class="comment">// We placed these paths second because we want `node_modules` to &quot;win&quot;</span></span><br><span class="line">      <span class="comment">// if there are any conflicts. This matches Node resolution mechanism.</span></span><br><span class="line">      <span class="comment">// https://github.com/facebook/create-react-app/issues/253</span></span><br><span class="line">      <span class="attr">modules</span>: [<span class="string">&#x27;node_modules&#x27;</span>, paths.<span class="property">appNodeModules</span>].<span class="title function_">concat</span>(</span><br><span class="line">        modules.<span class="property">additionalModulePaths</span> || []</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// These are the reasonable defaults supported by the Node ecosystem.</span></span><br><span class="line">      <span class="comment">// We also include JSX as a common component filename extension to support</span></span><br><span class="line">      <span class="comment">// some tools, although we do not recommend using it, see:</span></span><br><span class="line">      <span class="comment">// https://github.com/facebook/create-react-app/issues/290</span></span><br><span class="line">      <span class="comment">// `web` extension prefixes have been added for better support</span></span><br><span class="line">      <span class="comment">// for React Native Web.</span></span><br><span class="line">      <span class="attr">extensions</span>: paths.<span class="property">moduleFileExtensions</span></span><br><span class="line">        .<span class="title function_">map</span>(<span class="function"><span class="params">ext</span> =&gt;</span> <span class="string">`.<span class="subst">$&#123;ext&#125;</span>`</span>)</span><br><span class="line">        .<span class="title function_">filter</span>(<span class="function"><span class="params">ext</span> =&gt;</span> useTypeScript || !ext.<span class="title function_">includes</span>(<span class="string">&#x27;ts&#x27;</span>)),</span><br><span class="line">      <span class="attr">alias</span>: &#123;</span><br><span class="line">        <span class="comment">// Support React Native Web</span></span><br><span class="line">        <span class="comment">// https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/</span></span><br><span class="line">        <span class="string">&#x27;react-native&#x27;</span>: <span class="string">&#x27;react-native-web&#x27;</span>,</span><br><span class="line">        <span class="comment">// Allows for better profiling with ReactDevTools</span></span><br><span class="line">        ...(isEnvProductionProfile &amp;&amp; &#123;</span><br><span class="line">          <span class="string">&#x27;react-dom$&#x27;</span>: <span class="string">&#x27;react-dom/profiling&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;scheduler/tracing&#x27;</span>: <span class="string">&#x27;scheduler/tracing-profiling&#x27;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">        ...(modules.<span class="property">webpackAliases</span> || &#123;&#125;),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="comment">// Prevents users from importing files from outside of src/ (or node_modules/).</span></span><br><span class="line">        <span class="comment">// This often causes confusion because we only process files within src/ with babel.</span></span><br><span class="line">        <span class="comment">// To fix this, we prevent you from importing files out of src/ -- if you&#x27;d like to,</span></span><br><span class="line">        <span class="comment">// please link the files into your node_modules/ and let module-resolution kick in.</span></span><br><span class="line">        <span class="comment">// Make sure your source files are compiled, as they will not be processed in any way.</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ModuleScopePlugin</span>(paths.<span class="property">appSrc</span>, [</span><br><span class="line">          paths.<span class="property">appPackageJson</span>,</span><br><span class="line">          reactRefreshRuntimeEntry,</span><br><span class="line">          reactRefreshWebpackPluginRuntimeEntry,</span><br><span class="line">          babelRuntimeEntry,</span><br><span class="line">          babelRuntimeEntryHelpers,</span><br><span class="line">          babelRuntimeRegenerator,</span><br><span class="line">        ]),</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">      <span class="attr">strictExportPresence</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">rules</span>: [</span><br><span class="line">        <span class="comment">// Handle node_modules packages that contain sourcemaps</span></span><br><span class="line">        shouldUseSourceMap &amp;&amp; &#123;</span><br><span class="line">          <span class="attr">enforce</span>: <span class="string">&#x27;pre&#x27;</span>,</span><br><span class="line">          <span class="attr">exclude</span>: <span class="regexp">/@babel(?:\/|\\&#123;1,2&#125;)runtime/</span>,</span><br><span class="line">          <span class="attr">test</span>: <span class="regexp">/\.(js|mjs|jsx|ts|tsx|css)$/</span>,</span><br><span class="line">          <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;source-map-loader&#x27;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">// &quot;oneOf&quot; will traverse all following loaders until one will</span></span><br><span class="line">          <span class="comment">// match the requirements. When no loader matches it will fall</span></span><br><span class="line">          <span class="comment">// back to the &quot;file&quot; loader at the end of the loader list.</span></span><br><span class="line">          <span class="attr">oneOf</span>: [</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> Merge this config once `image/avif` is in the mime-db</span></span><br><span class="line">            <span class="comment">// https://github.com/jshttp/mime-db</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: [<span class="regexp">/\.avif$/</span>],</span><br><span class="line">              <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">              <span class="attr">mimetype</span>: <span class="string">&#x27;image/avif&#x27;</span>,</span><br><span class="line">              <span class="attr">parser</span>: &#123;</span><br><span class="line">                <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">                  <span class="attr">maxSize</span>: imageInlineSizeLimit,</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// &quot;url&quot; loader works like &quot;file&quot; loader except that it embeds assets</span></span><br><span class="line">            <span class="comment">// smaller than specified limit in bytes as data URLs to avoid requests.</span></span><br><span class="line">            <span class="comment">// A missing `test` is equivalent to a match.</span></span><br><span class="line">            <span class="comment">// sy 处理图片</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: [<span class="regexp">/\.bmp$/</span>, <span class="regexp">/\.gif$/</span>, <span class="regexp">/\.jpe?g$/</span>, <span class="regexp">/\.png$/</span>],</span><br><span class="line">              <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">              <span class="attr">parser</span>: &#123;</span><br><span class="line">                <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">                  <span class="attr">maxSize</span>: imageInlineSizeLimit,</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: <span class="regexp">/\.svg$/</span>,</span><br><span class="line">              <span class="attr">use</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;@svgr/webpack&#x27;</span>),</span><br><span class="line">                  <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">prettier</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">svgo</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">svgoConfig</span>: &#123;</span><br><span class="line">                      <span class="attr">plugins</span>: [&#123; <span class="attr">removeViewBox</span>: <span class="literal">false</span> &#125;],</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">titleProp</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">ref</span>: <span class="literal">true</span>,</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;file-loader&#x27;</span>),</span><br><span class="line">                  <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;static/media/[name].[hash].[ext]&#x27;</span>,</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">              ],</span><br><span class="line">              <span class="attr">issuer</span>: &#123;</span><br><span class="line">                <span class="attr">and</span>: [<span class="regexp">/\.(ts|tsx|js|jsx|md|mdx)$/</span>],</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Process application JS with Babel.</span></span><br><span class="line">            <span class="comment">// The preset includes JSX, Flow, TypeScript, and some ESnext features.</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: <span class="regexp">/\.(js|mjs|jsx|ts|tsx)$/</span>,</span><br><span class="line">              <span class="attr">include</span>: paths.<span class="property">appSrc</span>,</span><br><span class="line">                  <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;babel-loader&#x27;</span>),</span><br><span class="line">                  <span class="attr">options</span>: &#123;</span><br><span class="line">                    <span class="attr">customize</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(</span><br><span class="line">                      <span class="string">&#x27;babel-preset-react-app/webpack-overrides&#x27;</span></span><br><span class="line">                    ),</span><br><span class="line">                    <span class="attr">presets</span>: [</span><br><span class="line">                      [</span><br><span class="line">                        <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;babel-preset-react-app&#x27;</span>),</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">runtime</span>: hasJsxRuntime ? <span class="string">&#x27;automatic&#x27;</span> : <span class="string">&#x27;classic&#x27;</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                      ],</span><br><span class="line">                    ],</span><br><span class="line">                    <span class="comment">// @remove-on-eject-begin</span></span><br><span class="line">                    <span class="attr">babelrc</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="attr">configFile</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="comment">// Make sure we have a unique cache identifier, erring on the</span></span><br><span class="line">                    <span class="comment">// side of caution.</span></span><br><span class="line">                    <span class="comment">// We remove this when the user ejects because the default</span></span><br><span class="line">                    <span class="comment">// is sane and uses Babel options. Instead of options, we use</span></span><br><span class="line">                    <span class="comment">// the react-scripts and babel-preset-react-app versions.</span></span><br><span class="line">                    <span class="attr">cacheIdentifier</span>: <span class="title function_">getCacheIdentifier</span>(</span><br><span class="line">                      isEnvProduction</span><br><span class="line">                        ? <span class="string">&#x27;production&#x27;</span></span><br><span class="line">                        : isEnvDevelopment &amp;&amp; <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">                      [</span><br><span class="line">                        <span class="string">&#x27;babel-plugin-named-asset-import&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;babel-preset-react-app&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;react-dev-utils&#x27;</span>,</span><br><span class="line">                        <span class="string">&#x27;react-scripts&#x27;</span>,</span><br><span class="line">                      ]</span><br><span class="line">                    ),</span><br><span class="line">                    <span class="comment">// @remove-on-eject-end</span></span><br><span class="line">                    <span class="attr">plugins</span>: [</span><br><span class="line">                      isEnvDevelopment &amp;&amp;</span><br><span class="line">                        shouldUseReactRefresh &amp;&amp;</span><br><span class="line">                        <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;react-refresh/babel&#x27;</span>),</span><br><span class="line">                    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>),</span><br><span class="line">                    <span class="comment">// This is a feature of `babel-loader` for webpack (not Babel itself).</span></span><br><span class="line">                    <span class="comment">// It enables caching results in ./node_modules/.cache/babel-loader/</span></span><br><span class="line">                    <span class="comment">// directory for faster rebuilds.</span></span><br><span class="line">                    <span class="attr">cacheDirectory</span>: <span class="literal">true</span>, <span class="comment">// sy 开启babel编译缓存, 加快编译速度</span></span><br><span class="line">                    <span class="comment">// See #6846 for context on why cacheCompression is disabled</span></span><br><span class="line">                    <span class="attr">cacheCompression</span>: <span class="literal">false</span>, <span class="comment">// 缓存文件不要压缩</span></span><br><span class="line">                    <span class="attr">compact</span>: isEnvProduction,</span><br><span class="line">                  &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Process any JS outside of the app with Babel.</span></span><br><span class="line">            <span class="comment">// Unlike the application JS, we only compile the standard ES features.</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: <span class="regexp">/\.(js|mjs)$/</span>,</span><br><span class="line">              <span class="attr">exclude</span>: <span class="regexp">/@babel(?:\/|\\&#123;1,2&#125;)runtime/</span>,</span><br><span class="line">              <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;babel-loader&#x27;</span>),</span><br><span class="line">              <span class="attr">options</span>: &#123;</span><br><span class="line">                <span class="attr">babelrc</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">configFile</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">compact</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">presets</span>: [</span><br><span class="line">                  [</span><br><span class="line">                    <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;babel-preset-react-app/dependencies&#x27;</span>),</span><br><span class="line">                    &#123; <span class="attr">helpers</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">                  ],</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">cacheDirectory</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="comment">// See #6846 for context on why cacheCompression is disabled</span></span><br><span class="line">                <span class="attr">cacheCompression</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="comment">// @remove-on-eject-begin</span></span><br><span class="line">                <span class="attr">cacheIdentifier</span>: <span class="title function_">getCacheIdentifier</span>(</span><br><span class="line">                  isEnvProduction</span><br><span class="line">                    ? <span class="string">&#x27;production&#x27;</span></span><br><span class="line">                    : isEnvDevelopment &amp;&amp; <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">                  [</span><br><span class="line">                    <span class="string">&#x27;babel-plugin-named-asset-import&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;babel-preset-react-app&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;react-dev-utils&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;react-scripts&#x27;</span>,</span><br><span class="line">                  ]</span><br><span class="line">                ),</span><br><span class="line">                <span class="comment">// @remove-on-eject-end</span></span><br><span class="line">                <span class="comment">// Babel sourcemaps are needed for debugging into node_modules</span></span><br><span class="line">                <span class="comment">// code.  Without the options below, debuggers like VSCode</span></span><br><span class="line">                <span class="comment">// show incorrect code and set breakpoints on the wrong lines.</span></span><br><span class="line">                <span class="attr">sourceMaps</span>: shouldUseSourceMap,</span><br><span class="line">                <span class="attr">inputSourceMap</span>: shouldUseSourceMap,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// &quot;postcss&quot; loader applies autoprefixer to our CSS.</span></span><br><span class="line">            <span class="comment">// &quot;css&quot; loader resolves paths in CSS and adds assets as dependencies.</span></span><br><span class="line">            <span class="comment">// &quot;style&quot; loader turns CSS into JS modules that inject &lt;style&gt; tags.</span></span><br><span class="line">            <span class="comment">// In production, we use MiniCSSExtractPlugin to extract that CSS</span></span><br><span class="line">            <span class="comment">// to a file, but in development &quot;style&quot; loader enables hot editing</span></span><br><span class="line">            <span class="comment">// of CSS.</span></span><br><span class="line">            <span class="comment">// By default we support CSS Modules with the extension .module.css</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: cssRegex,</span><br><span class="line">              <span class="attr">exclude</span>: cssModuleRegex,</span><br><span class="line">              <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(&#123;</span><br><span class="line">                <span class="attr">importLoaders</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">sourceMap</span>: isEnvProduction</span><br><span class="line">                  ? shouldUseSourceMap</span><br><span class="line">                  : isEnvDevelopment,</span><br><span class="line">                <span class="attr">modules</span>: &#123;</span><br><span class="line">                  <span class="attr">mode</span>: <span class="string">&#x27;icss&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;),</span><br><span class="line">              <span class="comment">// Don&#x27;t consider CSS imports dead code even if the</span></span><br><span class="line">              <span class="comment">// containing package claims to have no side effects.</span></span><br><span class="line">              <span class="comment">// Remove this when webpack adds a warning or an error for this.</span></span><br><span class="line">              <span class="comment">// See https://github.com/webpack/webpack/issues/6571</span></span><br><span class="line">              <span class="attr">sideEffects</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Adds support for CSS Modules (https://github.com/css-modules/css-modules)</span></span><br><span class="line">            <span class="comment">// using the extension .module.css</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: cssModuleRegex,</span><br><span class="line">              <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(&#123;</span><br><span class="line">                <span class="attr">importLoaders</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">sourceMap</span>: isEnvProduction</span><br><span class="line">                  ? shouldUseSourceMap</span><br><span class="line">                  : isEnvDevelopment,</span><br><span class="line">                <span class="attr">modules</span>: &#123;</span><br><span class="line">                  <span class="attr">mode</span>: <span class="string">&#x27;local&#x27;</span>,</span><br><span class="line">                  <span class="attr">getLocalIdent</span>: getCSSModuleLocalIdent,</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Opt-in support for SASS (using .scss or .sass extensions).</span></span><br><span class="line">            <span class="comment">// By default we support SASS Modules with the</span></span><br><span class="line">            <span class="comment">// extensions .module.scss or .module.sass</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: sassRegex,</span><br><span class="line">              <span class="attr">exclude</span>: sassModuleRegex,</span><br><span class="line">              <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">importLoaders</span>: <span class="number">3</span>,</span><br><span class="line">                  <span class="attr">sourceMap</span>: isEnvProduction</span><br><span class="line">                    ? shouldUseSourceMap</span><br><span class="line">                    : isEnvDevelopment,</span><br><span class="line">                  <span class="attr">modules</span>: &#123;</span><br><span class="line">                    <span class="attr">mode</span>: <span class="string">&#x27;icss&#x27;</span>,</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&#x27;sass-loader&#x27;</span></span><br><span class="line">              ),</span><br><span class="line">              <span class="comment">// Don&#x27;t consider CSS imports dead code even if the</span></span><br><span class="line">              <span class="comment">// containing package claims to have no side effects.</span></span><br><span class="line">              <span class="comment">// Remove this when webpack adds a warning or an error for this.</span></span><br><span class="line">              <span class="comment">// See https://github.com/webpack/webpack/issues/6571</span></span><br><span class="line">              <span class="attr">sideEffects</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// Adds support for CSS Modules, but using SASS</span></span><br><span class="line">            <span class="comment">// using the extension .module.scss or .module.sass</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">test</span>: sassModuleRegex,</span><br><span class="line">              <span class="attr">use</span>: <span class="title function_">getStyleLoaders</span>(</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">importLoaders</span>: <span class="number">3</span>,</span><br><span class="line">                  <span class="attr">sourceMap</span>: isEnvProduction</span><br><span class="line">                    ? shouldUseSourceMap</span><br><span class="line">                    : isEnvDevelopment,</span><br><span class="line">                  <span class="attr">modules</span>: &#123;</span><br><span class="line">                    <span class="attr">mode</span>: <span class="string">&#x27;local&#x27;</span>,</span><br><span class="line">                    <span class="attr">getLocalIdent</span>: getCSSModuleLocalIdent,</span><br><span class="line">                  &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&#x27;sass-loader&#x27;</span></span><br><span class="line">              ),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// &quot;file&quot; loader makes sure those assets get served by WebpackDevServer.</span></span><br><span class="line">            <span class="comment">// When you `import` an asset, you get its (virtual) filename.</span></span><br><span class="line">            <span class="comment">// In production, they would get copied to the `build` folder.</span></span><br><span class="line">            <span class="comment">// This loader doesn&#x27;t use a &quot;test&quot; so it will catch all modules</span></span><br><span class="line">            <span class="comment">// that fall through the other loaders.</span></span><br><span class="line">            &#123;</span><br><span class="line">              <span class="comment">// Exclude `js` files to keep &quot;css&quot; loader working as it injects</span></span><br><span class="line">              <span class="comment">// its runtime that would otherwise be processed through &quot;file&quot; loader.</span></span><br><span class="line">              <span class="comment">// Also exclude `html` and `json` extensions so they get processed</span></span><br><span class="line">              <span class="comment">// by webpacks internal loaders.</span></span><br><span class="line">              <span class="attr">exclude</span>: [<span class="regexp">/^$/</span>, <span class="regexp">/\.(js|mjs|jsx|ts|tsx)$/</span>, <span class="regexp">/\.html$/</span>, <span class="regexp">/\.json$/</span>],</span><br><span class="line">              <span class="attr">type</span>: <span class="string">&#x27;asset/resource&#x27;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// ** STOP ** Are you adding a new loader?</span></span><br><span class="line">            <span class="comment">// Make sure to add the new loader(s) before the &quot;file&quot; loader.</span></span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">      <span class="comment">// Generates an `index.html` file with the &lt;script&gt; injected.</span></span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">assign</span>(</span><br><span class="line">          &#123;&#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">inject</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">template</span>: paths.<span class="property">appHtml</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          isEnvProduction</span><br><span class="line">            ? &#123;</span><br><span class="line">              <span class="comment">// sy 压缩html</span></span><br><span class="line">                <span class="attr">minify</span>: &#123;</span><br><span class="line">                  <span class="attr">removeComments</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">removeRedundantAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">useShortDoctype</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">removeStyleLinkTypeAttributes</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">keepClosingSlash</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">minifyJS</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">minifyCSS</span>: <span class="literal">true</span>,</span><br><span class="line">                  <span class="attr">minifyURLs</span>: <span class="literal">true</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">              &#125;</span><br><span class="line">            : <span class="literal">undefined</span></span><br><span class="line">        )</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// Inlines the webpack runtime script. This script is too small to warrant</span></span><br><span class="line">      <span class="comment">// a network request.</span></span><br><span class="line">      <span class="comment">// https://github.com/facebook/create-react-app/issues/5358</span></span><br><span class="line">      isEnvProduction &amp;&amp;</span><br><span class="line">        shouldInlineRuntimeChunk &amp;&amp;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">InlineChunkHtmlPlugin</span>(<span class="title class_">HtmlWebpackPlugin</span>, [<span class="regexp">/runtime-.+[.]js/</span>]),</span><br><span class="line">      <span class="comment">// Makes some environment variables available in index.html.</span></span><br><span class="line">      <span class="comment">// The public URL is available as %PUBLIC_URL% in index.html, e.g.:</span></span><br><span class="line">      <span class="comment">// &lt;link rel=&quot;icon&quot; href=&quot;%PUBLIC_URL%/favicon.ico&quot;&gt;</span></span><br><span class="line">      <span class="comment">// It will be an empty string unless you specify &quot;homepage&quot;</span></span><br><span class="line">      <span class="comment">// in `package.json`, in which case it will be the pathname of that URL.</span></span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">InterpolateHtmlPlugin</span>(<span class="title class_">HtmlWebpackPlugin</span>, env.<span class="property">raw</span>),</span><br><span class="line">      <span class="comment">// This gives some necessary context to module not found errors, such as</span></span><br><span class="line">      <span class="comment">// the requesting resource.</span></span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">ModuleNotFoundPlugin</span>(paths.<span class="property">appPath</span>),</span><br><span class="line">      <span class="comment">// Makes some environment variables available to the JS code, for example:</span></span><br><span class="line">      <span class="comment">// if (process.env.NODE_ENV === &#x27;production&#x27;) &#123; ... &#125;. See `./env.js`.</span></span><br><span class="line">      <span class="comment">// It is absolutely essential that NODE_ENV is set to production</span></span><br><span class="line">      <span class="comment">// during a production build.</span></span><br><span class="line">      <span class="comment">// Otherwise React will be compiled in the very slow development mode.</span></span><br><span class="line">      <span class="keyword">new</span> webpack.<span class="title class_">DefinePlugin</span>(env.<span class="property">stringified</span>),</span><br><span class="line">      <span class="comment">// Experimental hot reloading for React .</span></span><br><span class="line">      <span class="comment">// https://github.com/facebook/react/tree/main/packages/react-refresh</span></span><br><span class="line">      isEnvDevelopment &amp;&amp;</span><br><span class="line">        shouldUseReactRefresh &amp;&amp;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ReactRefreshWebpackPlugin</span>(&#123;</span><br><span class="line">          <span class="attr">overlay</span>: <span class="literal">false</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">      <span class="comment">// Watcher doesn&#x27;t work well if you mistype casing in a path so we use</span></span><br><span class="line">      <span class="comment">// a plugin that prints an error when you attempt to do this.</span></span><br><span class="line">      <span class="comment">// See https://github.com/facebook/create-react-app/issues/240</span></span><br><span class="line">      isEnvDevelopment &amp;&amp; <span class="keyword">new</span> <span class="title class_">CaseSensitivePathsPlugin</span>(),</span><br><span class="line">      <span class="comment">// sy 生产环境css提取 通过文件加载</span></span><br><span class="line">      isEnvProduction &amp;&amp;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>(&#123;</span><br><span class="line">          <span class="comment">// Options similar to the same options in webpackOptions.output</span></span><br><span class="line">          <span class="comment">// both options are optional</span></span><br><span class="line">          <span class="attr">filename</span>: <span class="string">&#x27;static/css/[name].[contenthash:8].css&#x27;</span>,</span><br><span class="line">          <span class="attr">chunkFilename</span>: <span class="string">&#x27;static/css/[name].[contenthash:8].chunk.css&#x27;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">      <span class="comment">// Generate an asset manifest file with the following content:</span></span><br><span class="line">      <span class="comment">// - &quot;files&quot; key: Mapping of all asset filenames to their corresponding</span></span><br><span class="line">      <span class="comment">//   output file so that tools can pick it up without having to parse</span></span><br><span class="line">      <span class="comment">//   `index.html`</span></span><br><span class="line">      <span class="comment">// - &quot;entrypoints&quot; key: Array of files which are included in `index.html`,</span></span><br><span class="line">      <span class="comment">//   can be used to reconstruct the HTML if necessary</span></span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">WebpackManifestPlugin</span>(&#123;</span><br><span class="line">        <span class="attr">fileName</span>: <span class="string">&#x27;asset-manifest.json&#x27;</span>,</span><br><span class="line">        <span class="attr">publicPath</span>: paths.<span class="property">publicUrlOrPath</span>,</span><br><span class="line">        <span class="attr">generate</span>: <span class="function">(<span class="params">seed, files, entrypoints</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> manifestFiles = files.<span class="title function_">reduce</span>(<span class="function">(<span class="params">manifest, file</span>) =&gt;</span> &#123;</span><br><span class="line">            manifest[file.<span class="property">name</span>] = file.<span class="property">path</span>;</span><br><span class="line">            <span class="keyword">return</span> manifest;</span><br><span class="line">          &#125;, seed);</span><br><span class="line">          <span class="keyword">const</span> entrypointFiles = entrypoints.<span class="property">main</span>.<span class="title function_">filter</span>(</span><br><span class="line">            <span class="function"><span class="params">fileName</span> =&gt;</span> !fileName.<span class="title function_">endsWith</span>(<span class="string">&#x27;.map&#x27;</span>)</span><br><span class="line">          );</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">files</span>: manifestFiles,</span><br><span class="line">            <span class="attr">entrypoints</span>: entrypointFiles,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// Moment.js is an extremely popular library that bundles large locale files</span></span><br><span class="line">      <span class="comment">// by default due to how webpack interprets its code. This is a practical</span></span><br><span class="line">      <span class="comment">// solution that requires the user to opt into importing specific locales.</span></span><br><span class="line">      <span class="comment">// https://github.com/jmblog/how-to-optimize-momentjs-with-webpack</span></span><br><span class="line">      <span class="comment">// You can remove this if you don&#x27;t use Moment.js:</span></span><br><span class="line">      <span class="keyword">new</span> webpack.<span class="title class_">IgnorePlugin</span>(&#123;</span><br><span class="line">        <span class="attr">resourceRegExp</span>: <span class="regexp">/^\.\/locale$/</span>,</span><br><span class="line">        <span class="attr">contextRegExp</span>: <span class="regexp">/moment$/</span>,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// Generate a service worker script that will precache, and keep up to date,</span></span><br><span class="line">      <span class="comment">// the HTML &amp; assets that are part of the webpack build.</span></span><br><span class="line">      isEnvProduction &amp;&amp;</span><br><span class="line">        fs.<span class="title function_">existsSync</span>(swSrc) &amp;&amp;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">WorkboxWebpackPlugin</span>.<span class="title class_">InjectManifest</span>(&#123;</span><br><span class="line">          swSrc,</span><br><span class="line">          <span class="attr">dontCacheBustURLsMatching</span>: <span class="regexp">/\.[0-9a-f]&#123;8&#125;\./</span>,</span><br><span class="line">          <span class="attr">exclude</span>: [<span class="regexp">/\.map$/</span>, <span class="regexp">/asset-manifest\.json$/</span>, <span class="regexp">/LICENSE/</span>],</span><br><span class="line">          <span class="comment">// Bump up the default maximum size (2mb) that&#x27;s precached,</span></span><br><span class="line">          <span class="comment">// to make lazy-loading failure scenarios less likely.</span></span><br><span class="line">          <span class="comment">// See https://github.com/cra-template/pwa/issues/13#issuecomment-722667270</span></span><br><span class="line">          <span class="attr">maximumFileSizeToCacheInBytes</span>: <span class="number">5</span> * <span class="number">1024</span> * <span class="number">1024</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">      <span class="comment">// TypeScript type checking</span></span><br><span class="line">      useTypeScript &amp;&amp;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ForkTsCheckerWebpackPlugin</span>(&#123;</span><br><span class="line">          <span class="attr">async</span>: isEnvDevelopment,</span><br><span class="line">          <span class="attr">typescript</span>: &#123;</span><br><span class="line">            <span class="attr">typescriptPath</span>: resolve.<span class="title function_">sync</span>(<span class="string">&#x27;typescript&#x27;</span>, &#123;</span><br><span class="line">              <span class="attr">basedir</span>: paths.<span class="property">appNodeModules</span>,</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">configOverwrite</span>: &#123;</span><br><span class="line">              <span class="attr">compilerOptions</span>: &#123;</span><br><span class="line">                <span class="attr">sourceMap</span>: isEnvProduction</span><br><span class="line">                  ? shouldUseSourceMap</span><br><span class="line">                  : isEnvDevelopment,</span><br><span class="line">                <span class="attr">skipLibCheck</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">inlineSourceMap</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">declarationMap</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="attr">noEmit</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">incremental</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">tsBuildInfoFile</span>: paths.<span class="property">appTsBuildInfoFile</span>,</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">context</span>: paths.<span class="property">appPath</span>,</span><br><span class="line">            <span class="attr">diagnosticOptions</span>: &#123;</span><br><span class="line">              <span class="attr">syntactic</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;write-references&#x27;</span>,</span><br><span class="line">            <span class="comment">// profile: true,</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">issue</span>: &#123;</span><br><span class="line">            <span class="comment">// This one is specifically to match during CI tests,</span></span><br><span class="line">            <span class="comment">// as micromatch doesn&#x27;t match</span></span><br><span class="line">            <span class="comment">// &#x27;../cra-template-typescript/template/src/App.tsx&#x27;</span></span><br><span class="line">            <span class="comment">// otherwise.</span></span><br><span class="line">            <span class="attr">include</span>: [</span><br><span class="line">              &#123; <span class="attr">file</span>: <span class="string">&#x27;../**/src/**/*.&#123;ts,tsx&#125;&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">file</span>: <span class="string">&#x27;**/src/**/*.&#123;ts,tsx&#125;&#x27;</span> &#125;,</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">exclude</span>: [</span><br><span class="line">              &#123; <span class="attr">file</span>: <span class="string">&#x27;**/src/**/__tests__/**&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">file</span>: <span class="string">&#x27;**/src/**/?(*.)&#123;spec|test&#125;.*&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">file</span>: <span class="string">&#x27;**/src/setupProxy.*&#x27;</span> &#125;,</span><br><span class="line">              &#123; <span class="attr">file</span>: <span class="string">&#x27;**/src/setupTests.*&#x27;</span> &#125;,</span><br><span class="line">            ],</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">logger</span>: &#123;</span><br><span class="line">            <span class="attr">infrastructure</span>: <span class="string">&#x27;silent&#x27;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">      !disableESLintPlugin &amp;&amp;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ESLintPlugin</span>(&#123;</span><br><span class="line">          threads,<span class="comment">// sy 开启多进程</span></span><br><span class="line">          <span class="comment">// Plugin options</span></span><br><span class="line">          <span class="attr">extensions</span>: [<span class="string">&#x27;js&#x27;</span>, <span class="string">&#x27;mjs&#x27;</span>, <span class="string">&#x27;jsx&#x27;</span>, <span class="string">&#x27;ts&#x27;</span>, <span class="string">&#x27;tsx&#x27;</span>],</span><br><span class="line">          <span class="attr">formatter</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;react-dev-utils/eslintFormatter&#x27;</span>),</span><br><span class="line">          <span class="attr">eslintPath</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;eslint&#x27;</span>),</span><br><span class="line">          <span class="attr">failOnError</span>: !(isEnvDevelopment &amp;&amp; emitErrorsAsWarnings),</span><br><span class="line">          <span class="attr">context</span>: paths.<span class="property">appSrc</span>,</span><br><span class="line">          <span class="attr">cache</span>: <span class="literal">true</span>, <span class="comment">// sy 开启缓存</span></span><br><span class="line">          <span class="attr">cacheLocation</span>: path.<span class="title function_">resolve</span>(</span><br><span class="line">            paths.<span class="property">appNodeModules</span>,</span><br><span class="line">            <span class="string">&#x27;.cache/.eslintcache&#x27;</span></span><br><span class="line">          ),</span><br><span class="line">          <span class="comment">// ESLint class options</span></span><br><span class="line">          <span class="attr">cwd</span>: paths.<span class="property">appPath</span>,</span><br><span class="line">          <span class="attr">resolvePluginsRelativeTo</span>: __dirname,</span><br><span class="line">          <span class="attr">baseConfig</span>: &#123;</span><br><span class="line">            <span class="attr">extends</span>: [<span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;eslint-config-react-app/base&#x27;</span>)],</span><br><span class="line">            <span class="attr">rules</span>: &#123;</span><br><span class="line">              ...(!hasJsxRuntime &amp;&amp; &#123;</span><br><span class="line">                <span class="string">&#x27;react/react-in-jsx-scope&#x27;</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">              &#125;),</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;),</span><br><span class="line">    ].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>),</span><br><span class="line">    <span class="comment">// Turn off performance processing because we utilize</span></span><br><span class="line">    <span class="comment">// our own hints via the FileSizeReporter</span></span><br><span class="line">    <span class="comment">// sy false 关闭浏览器的性能分析</span></span><br><span class="line">    <span class="attr">performance</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一-修改-webpack-配置"><a href="#一-修改-webpack-配置" class="headerlink" title="一. 修改 webpack 配置"></a>一. 修改 webpack 配置</h2><ol><li>需要用到 <a href="https://github.com/timarney/react-app-rewired"><code>react-app-rewired</code></a> <a href="https://github.com/arackaf/customize-cra/blob/master/api.md"><code>customize-cra</code></a></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-app-rewired customize-cra -D</span><br></pre></td></tr></table></figure><ol start="2"><li>修改<code>package.json</code></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired start&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired build&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired test&quot;</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;eject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired eject&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>更目录下创建<code>config-overrides.js</code>，在该文件下修改 webpack 的配置；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  override,</span><br><span class="line">  addDecoratorsLegacy,</span><br><span class="line">  addWebpackAlias,</span><br><span class="line">  addPostcssPlugins,</span><br><span class="line">  addWebpackModuleRule,</span><br><span class="line">  fixBabelImports,</span><br><span class="line">  adjustStyleLoaders,</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;customize-cra&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;.&#x27;</span>, dir)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">override</span>(</span><br><span class="line">  <span class="comment">// 装饰器</span></span><br><span class="line">  <span class="title function_">addDecoratorsLegacy</span>(),</span><br><span class="line">  <span class="comment">// Alias</span></span><br><span class="line">  <span class="title function_">addWebpackAlias</span>(&#123;</span><br><span class="line">    <span class="string">&#x27;@&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@comps&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/components&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@style&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/style&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@images&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/images&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@pages&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/pages&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@api&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/http&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@utils&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/utils&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@hooks&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/utils/hooks&#x27;</span>),</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="comment">// postcss</span></span><br><span class="line">  <span class="title function_">addPostcssPlugins</span>([</span><br><span class="line">    <span class="comment">// require(&#x27;postcss-px2rem&#x27;)(&#123; remUnit: 75 &#125;),</span></span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;autoprefixer&#x27;</span>), <span class="comment">// css 自动加前缀</span></span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;postcss-autoreset&#x27;</span>)(&#123;</span><br><span class="line">      <span class="comment">// 重置浏览器默认样式</span></span><br><span class="line">      <span class="attr">reset</span>: &#123;</span><br><span class="line">        <span class="attr">margin</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">borderRadius</span>: <span class="number">0</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 适配</span></span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;postcss-px-to-viewport&#x27;</span>)(&#123;</span><br><span class="line">      <span class="attr">unitToConvert</span>: <span class="string">&#x27;px&#x27;</span>, <span class="comment">//需要转换的单位，默认为&quot;px&quot;</span></span><br><span class="line">      <span class="attr">viewportWidth</span>: <span class="number">750</span>, <span class="comment">// 视窗的宽度，对应的是我们设计稿的宽度</span></span><br><span class="line">      <span class="attr">viewportHeight</span>: <span class="number">1624</span>, <span class="comment">//视窗的高度，根据375设备的宽度来指定，一般指定667，也可以不配置</span></span><br><span class="line">      <span class="attr">unitPrecision</span>: <span class="number">3</span>, <span class="comment">// 指定`px`转换为视窗单位值的小数位数（很多时候无法整除）</span></span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&#x27;*&#x27;</span>], <span class="comment">// 能转化为vw的属性列表</span></span><br><span class="line">      <span class="attr">viewportUnit</span>: <span class="string">&#x27;vw&#x27;</span>, <span class="comment">// 指定需要转换成的视窗单位，建议使用vw</span></span><br><span class="line">      <span class="attr">fontViewportUnit</span>: <span class="string">&#x27;vw&#x27;</span>, <span class="comment">//字体使用的视口单位</span></span><br><span class="line">      <span class="attr">selectorBlackList</span>: [<span class="string">&#x27;.ignore-&#x27;</span>, <span class="string">&#x27;.hairlines&#x27;</span>, <span class="string">&#x27;am-&#x27;</span>, <span class="string">&#x27;px-&#x27;</span>], <span class="comment">//指定不转换为视窗单位的类，可以自定义，可以无限添加,建议定义一至两个通用的类名</span></span><br><span class="line">      <span class="attr">minPixelValue</span>: <span class="number">1</span>, <span class="comment">// 小于或等于`1px`不转换为视窗单位，你也可以设置为你想要的值</span></span><br><span class="line">      <span class="attr">mediaQuery</span>: <span class="literal">false</span>, <span class="comment">// 允许在媒体查询中转换`px`</span></span><br><span class="line">      <span class="attr">replace</span>: <span class="literal">true</span>, <span class="comment">//是否直接更换属性值，而不添加备用属性</span></span><br><span class="line">      <span class="attr">exclude</span>: [<span class="regexp">/\/Stores\/.*.scss/</span>, <span class="regexp">/global.css/</span>, <span class="regexp">/node_modules/</span>], <span class="comment">//忽略某些文件夹下的文件或特定文件，例如 &#x27;node_modules&#x27; 下的文件</span></span><br><span class="line">      <span class="attr">landscape</span>: <span class="literal">false</span>, <span class="comment">//是否添加根据 landscapeWidth 生成的媒体查询条件 @media (orientation: landscape)</span></span><br><span class="line">      <span class="attr">landscapeUnit</span>: <span class="string">&#x27;vw&#x27;</span>, <span class="comment">//横屏时使用的单位</span></span><br><span class="line">      <span class="attr">landscapeWidth</span>: <span class="number">1134</span>, <span class="comment">//横屏时使用的视口宽度</span></span><br><span class="line">    &#125;),</span><br><span class="line">  ]),</span><br><span class="line">  <span class="comment">// antd 按需加载</span></span><br><span class="line">  <span class="title function_">fixBabelImports</span>(<span class="string">&#x27;import&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">libraryName</span>: <span class="string">&#x27;antd-mobile&#x27;</span>,</span><br><span class="line">    <span class="attr">style</span>: <span class="string">&#x27;css&#x27;</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="comment">// antd 样式加载不出来问题</span></span><br><span class="line">  <span class="title function_">addWebpackModuleRule</span>(&#123;</span><br><span class="line">    <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">    <span class="attr">exclude</span>: <span class="regexp">/src/</span>,</span><br><span class="line">    <span class="attr">use</span>: [</span><br><span class="line">      &#123; <span class="attr">loader</span>: <span class="string">&#x27;style-loader&#x27;</span> &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="attr">importLoaders</span>: <span class="number">1</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="comment">// sass公共样式 引入</span></span><br><span class="line">  <span class="title function_">adjustStyleLoaders</span>(<span class="function">(<span class="params">rule</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (rule.<span class="property">test</span>.<span class="title function_">toString</span>().<span class="title function_">includes</span>(<span class="string">&#x27;scss&#x27;</span>)) &#123;</span><br><span class="line">      rule.<span class="property">use</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;sass-resources-loader&#x27;</span>),</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="attr">resources</span>: [<span class="title function_">resolve</span>(<span class="string">&#x27;./src/assets/style/common.scss&#x27;</span>)],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="comment">// svg处理</span></span><br><span class="line">  <span class="title function_">addWebpackModuleRule</span>(&#123;</span><br><span class="line">    <span class="attr">test</span>: <span class="regexp">/\.svg$/</span>,</span><br><span class="line">    <span class="attr">exclude</span>: [<span class="regexp">/node_modules/</span>],</span><br><span class="line">    <span class="attr">use</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;svg-sprite-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;&#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;svgo-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;&#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="二-配置环境区分"><a href="#二-配置环境区分" class="headerlink" title="二. 配置环境区分"></a>二. 配置环境区分</h2><ol><li>安装 <code>dotenv</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add dotenv dotenv-cli -D</span><br></pre></td></tr></table></figure><ol start="2"><li>修改<code>package.json</code></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired start&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;build:test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotenv -e .env.test react-app-rewired build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;build:uat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotenv -e .env.uat react-app-rewired build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;build:prod&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dotenv -e .env.prod  react-app-rewired build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired test&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;eject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-scripts eject&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在根目录下新建 <code>.env</code>、 <code>.env.test</code> 、 <code>.env.uat</code>、<code>.env.prod</code>,根据不同环境，在不同的环境文件下配置相应的 baseUrl 等数据；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable constant_">REACT_APP_BASE_URL</span>=<span class="string">&#x27;xxxxxx/api&#x27;</span></span><br><span class="line"><span class="variable constant_">REACT_APP_REDIRECT_URL</span>=<span class="string">&#x27;xxxxxxx&#x27;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三-PUBLIC-URL"><a href="#三-PUBLIC-URL" class="headerlink" title="三.  PUBLIC_URL"></a>三.  PUBLIC_URL</h2><p>在<code>.env.[xxx]</code>文件里配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">PUBLIC_URL</span>=<span class="regexp">/service-plat/</span></span><br></pre></td></tr></table></figure><h2 id="四-修改打包文件夹名字"><a href="#四-修改打包文件夹名字" class="headerlink" title="四. 修改打包文件夹名字"></a>四. 修改打包文件夹名字</h2><p>在<code>.env.[xxx]</code>文件里配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">BUILD_PATH</span>=service-plat</span><br></pre></td></tr></table></figure><h2 id="五-生产环境去掉map文件"><a href="#五-生产环境去掉map文件" class="headerlink" title="五. 生产环境去掉map文件"></a>五. 生产环境去掉map文件</h2><p>在<code>.env.prod</code>文件里配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">GENERATE_SOURCEMAP</span>=<span class="literal">false</span> </span><br></pre></td></tr></table></figure><h2 id="六-History模式项目-tomcat-部署配置"><a href="#六-History模式项目-tomcat-部署配置" class="headerlink" title="六. History模式项目 tomcat 部署配置"></a>六. History模式项目 tomcat 部署配置</h2><p>新建一个 <code>WEB-INF</code>文件夹，<code>web.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>/<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>/<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">location</span>&gt;</span>/index.html<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="七-husky-lint-staged"><a href="#七-husky-lint-staged" class="headerlink" title="七. husky + lint-staged"></a>七. husky + lint-staged</h2><p>规范git提交message，统一代码风格<br>注意：husky需要注意版本，5.x以上的版本配置有很大的更改，这里安装4.x的包<br>配置如下：</p><blockquote><p>package.json</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@commitlint/cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^15.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;husky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.3.8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lint-staged&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^12.1.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.5.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;husky&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;pre-commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lint-staged&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;commit-msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commitlint -E HUSKY_GIT_PARAMS&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lint-staged&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;src/**/*.&#123;jsx,js,tsx,ts&#125;&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;prettier --write&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;eslint --fix&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>.commitlintrc.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">parserPreset</span>: &#123;</span><br><span class="line">    <span class="attr">parserOpts</span>: &#123;</span><br><span class="line">      <span class="attr">headerPattern</span>: <span class="regexp">/^(\w*)(?:\((.*)\))?:\s(.*)$/</span>,</span><br><span class="line">      <span class="attr">headerCorrespondence</span>: [<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;scope&#x27;</span>, <span class="string">&#x27;subject&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;type-empty&#x27;</span>: [<span class="number">2</span>, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;type-case&#x27;</span>: [<span class="number">2</span>, <span class="string">&#x27;always&#x27;</span>, <span class="string">&#x27;lower-case&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;subject-empty&#x27;</span>: [<span class="number">2</span>, <span class="string">&#x27;never&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;type-enum&#x27;</span>: [</span><br><span class="line">      <span class="number">2</span>,</span><br><span class="line">      <span class="string">&#x27;always&#x27;</span>,</span><br><span class="line">      [<span class="string">&#x27;feat&#x27;</span>, <span class="string">&#x27;fix&#x27;</span>, <span class="string">&#x27;docs&#x27;</span>, <span class="string">&#x27;style&#x27;</span>, <span class="string">&#x27;refactor&#x27;</span>, <span class="string">&#x27;perf&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;chore&#x27;</span>,  <span class="string">&#x27;revert&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>git message </p></blockquote><ul><li>feat:        新增feature</li><li>fix:         修复bug</li><li>docs:        仅仅修改了文档，如README.md</li><li>style:       仅仅是对格式进行修改，如逗号、缩进、空格等,不改变代码逻辑</li><li>refactor:    代码重构，没有新增功能或修复bug</li><li>perf:        优化相关，如提升性能、用户体验等</li><li>test:        测试用例，包括单元测试、集成测试</li><li>chore:       改变构建流程、或者增加依赖库、工具等</li><li>revert:      版本回滚</li></ul><h2 id="八-svg组件封装"><a href="#八-svg组件封装" class="headerlink" title="八. svg组件封装"></a>八. svg组件封装</h2><p>安装<code>svg-sprite-loader</code>、<code>svgo-loader</code>, 配置详情见 “一. 修改 webpack 配置”；</p><ol><li><code>svg文件夹</code>下<code>index.js</code>中统一引入<code>.svg</code>文件，并导出<code>Icon组件</code>供全局使用；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">importAll</span> = (<span class="params">requireContext: __WebpackModuleApi.RequireContext</span>) =&gt;</span><br><span class="line">  requireContext.<span class="title function_">keys</span>().<span class="title function_">forEach</span>(requireContext)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 引入当前文件夹下所有后缀为 .svg </span></span><br><span class="line">  <span class="title function_">importAll</span>(<span class="built_in">require</span>.<span class="title function_">context</span>(<span class="string">&#x27;./&#x27;</span>, <span class="literal">true</span>, <span class="regexp">/\.svg$/</span>))</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interface <span class="title class_">IIconProps</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Icon</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IIconProps</span>&gt; = <span class="function"><span class="params">props</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">svg</span> &#123;<span class="attr">...props</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlinkHref</span>=<span class="string">&#123;</span>&#x27;#&#x27; + <span class="attr">props.name</span>&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Icon</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; observer &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-react-lite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">IIconItemType</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/hmbc/plat.store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&#x27;@/assets/svg&#x27;</span> <span class="comment">// 引入 Icon 组件</span></span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./index.module.scss&#x27;</span></span><br><span class="line"></span><br><span class="line">interface <span class="title class_">IIconItemCompsProps</span> &#123;</span><br><span class="line">  <span class="attr">item</span>: <span class="title class_">IIconItemType</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">IconItemComps</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IIconItemCompsProps</span>&gt; = (&#123; item &#125;): <span class="title class_">React</span>.<span class="property">ReactElement</span> =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; commonStore &#125; = <span class="title function_">useStore</span>()</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">xy-center</span> $&#123;<span class="attr">styles.mainNavItem</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> commonStore.pushService(item.path)&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">className</span>=<span class="string">&#123;styles.mainIcon&#125;</span> <span class="attr">name</span>=<span class="string">&#123;item.icon&#125;</span> /&gt;</span> </span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;item.name&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">observer</span>(<span class="title class_">IconItemComps</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> create-react-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年末——光怪陆离</title>
      <link href="/2022/01/06/2021YearEnd/"/>
      <url>/2022/01/06/2021YearEnd/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>风吹花树，成长正酣。</p><h3 id="随便一些感想"><a href="#随便一些感想" class="headerlink" title="随便一些感想"></a>随便一些感想</h3><p>光阴如白驹过隙，眨眼间一年的时间又过去了，自古有感于时间，无一不叹其短暂易逝。孩童时期盼望着快快长大去闯荡世界，如今毕业几年才知读书的时候才是人生最美好的一段时间啊！<br>新冠疫情爆发至今都快3年了，不敢相信都已经3年过去了，每天都在盼望疫情早点结束，每天都会被新增的确诊人数拉回现实。<br>以前出门只需要带个钥匙、手机就行，现在口罩都成为出门必备物品之一了。<br>每每想到如此就非常厌恶那些草菅人命的美国政客、资本家，在他们的如意算盘里全人类的命运都能成为其追名逐利的棋子，一条条鲜活的生命就这样葬送在阴谋之中！可恶可憎！</p><h3 id="不知道什么title"><a href="#不知道什么title" class="headerlink" title="不知道什么title"></a>不知道什么title</h3><p>2021年收获颇丰，主要在：心态、性格、工作技能这几个方面；感觉今年最最重要的就是自己对于人性的思考和心态的调整。<br>2021一整年，不愉快的地方是遇到了一个比较年长的同事的冷暴力，排挤，真的是非常难过的一段时间。</p><p>也正是因为这位同事的折磨，使我在2021年一直在寻求精神、心态上的解脱，期间拜读了柏拉图的《理想国》、希阿荣博堪布的《次第花开》、陈忠实的《白鹿原》、稻盛和夫的《心》、莫言《晚熟的人》，还听了很多罗翔老师对于人生智慧的思考，慢慢的十分懊悔自己之前在处理这位同事问题上的情绪方面的错误行为；同时也非常感谢这位同事，塞翁失马焉知非福？正是有了这样的人反而促进了自己的成长，他的刁难促使我心态能越渐平稳的面对生活中遇到的各种困难和难缠的人，他对工作的不负责任促使我能接触到各种各样的工作场景并通过自己的努力达到目标，谁能说的明白是否是命运派来帮助我成长进步的劫难呢？一切都是辩证统一的，没有绝对的好也没有绝对的坏，生活中遇到麻烦的时候，不妨多换个角度想想，不一定是生活在为难你，也有可能是在为你的成功提前铺路？</p><p>你经历的每一次苦难、结识的每一个人、学过的每一样东西，都可能在未来的某一天排上用场！当下可能是幸福的也可能是痛苦的；幸福的时候要居安思危，给自己做好中长期的规划，可以短期放纵，不可沉迷陷落！痛苦的时候，要学会调节心态平衡，多角度思考问题，分解困难逐一攻破，任何打不倒我的人和事，终将使我成长为更加优秀的自己！</p><p>毕业这几年经历了很多事，越发的的认知到：越是博学的人越会觉察到自己的无知和渺小，他们往往是谦和、温润、善待生活、善待自己与他人，与这样的人沟通接触起来会感觉到如沐春风、人间美好；也会有真正的无知者，无知到甚至没有听过与之相对的观点，且非常绝对偏激的认为自己一定是对的，生活中遇到这样人非要与你争执，其实最应该做的就是不去理会；若大的精彩世界他领略的已经够少，不可谓是不无知、不可怜，应该为他感到惋惜，而不是与他争执！</p><p>人生来就被苦难所充满，一定要认识到痛苦是常态，美好的生活才是短暂的，不要祈求生活能一直顺顺利利，一生中会遇到各色各样的人，经历各种大大小小的事，我们能做的也应该做的就是去面对它、去解决它！</p><p>还看到《情绪急救》里仿佛说的就是我的一段话：“当遭遇痛苦的经历时，我们通常会对这些经历进行反思，从中寻求各种见解和领悟，以减少沮丧的窘迫感，从而继续前进。然而，对于许多人来说，在自我反思的过程中，往往会出现差错，他们不仅没有获得情感的释放，反而陷入反刍的恶性循环中。在此循环中，痛苦的场景、记忆和感觉一遍一遍重放，每一次都令我们的感觉更糟。我们变得像困在轮子上的仓鼠，无休止地踩动轮子，却无处可去。这种反刍心理之所以有害，是因为它没有提供新的认识，无法治愈我们的伤痛，反而只会揭开结痂的伤口，带来新的感染。”</p><p>本来是打算写个年终总结的，好像写成勉励自己的鸡汤文了~~~</p><h3 id="关于工作上"><a href="#关于工作上" class="headerlink" title="关于工作上"></a>关于工作上</h3><p>2021年，大体上来说工作还算是顺利的，开始担任公司前端岗位的面试官，领导也比较认可我的能力和靠谱，也提出给我调整级别。不过还没有落地，咱也不知道是不是真的，等真正看到了再说吧~ (ps: 级别已调 2022-03-18)</p><blockquote><p>今年在工作上最大的收获有以下几点：</p><ol><li>从零到上线部署了一套微前端的架构。虽然期间遇到了很多的坑，好歹都一一解决成功上线了，由于主应用是history模式的路由配合Tomcat部署前端，之前自己用的比较多的都是hash模式配合nginx部署前端，在部署上也遇到了好几个坑，至于遇到了什么些坑，打算通过博客后期整理记录起来；</li><li>2021通过自己手写去实现当前前端行业比较流行的一些库来增加自己对底层逻辑的理解，由于对技能掌握的扎实，在开发过程中能避免很多潜在的坑，所以目前手上的线上项目基本很少出现前端方面的生产bug；</li><li>受益于上级的信任，2021年有了更多的权限能了解到公司对于技术部的发展规划、项目计划、人员安排等情况，比起之前埋头搞技术，慢慢的学习到了更多的职场生存技能；</li><li>在这个毕业4年的拐点上最大的转变就是，由毕业头三年以专业技能为全部注意点的学习方式，扩展成为技术为主、学习公司业务详情和办公室人文为辅的学习方式；前段看到过一句话觉得非常的赞同：“工作3年的时候觉得工作技能是最难的，工作5年的时候觉得人际关系是最难的，工作10年的时候觉得看透人性才是最难的！”；</li><li>通过前端岗位候选人的面试，自己有机会与市场上的各种年限的同行进行横向对比，帮助我对自己的工作水平有一个精准的定位，认知到了一些自己不足的地方；</li></ol></blockquote><h3 id="技能点"><a href="#技能点" class="headerlink" title="技能点"></a>技能点</h3><p>这里大致记录一下自己这一年学过的一些知识点，不过很多小知识点不一定还记得了，记得多少写多少吧；</p><h4 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h4><p>vue3、vue3源码流程、手写简版vue响应式原理、vite、vuepdf展示最佳方案、vue+vant多个线上项目经验；</p><h4 id="react"><a href="#react" class="headerlink" title="react"></a>react</h4><p>hook、hoc、context、react-redux、实现react-redux常用中间件、react-router-dom源码、react-saga 、create-react-app搭建项目一系列配置、umi、dva 、react+ant-mobile多个线上项目经验；</p><h4 id="typescript"><a href="#typescript" class="headerlink" title="typescript"></a>typescript</h4><p>typescript+react多个线上项目经验；</p><h4 id="node"><a href="#node" class="headerlink" title="node"></a>node</h4><ol><li>搭建了一套前端脚手架，用于项目刚开始的时候直接生成基础框架，支持vue、react项目；本来打算在公司使用的，但是公司前端比较追求使用最新技术，使用脚手架生成框架就没有多大的用，每次都会有新的东西需要改动；</li><li>一些不知名的小工具…</li></ol><h4 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h4><p>nginx代理、nginx配置跨域头、tomcat部署history路由模式部署；</p><h4 id="other"><a href="#other" class="headerlink" title="other"></a>other</h4><p>微前端（qiankun）、rrweb、埋点、npm包发布、git使用husk+lint-staged规范提交message、git子模块；</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>放平心态，踏踏实实走好每一步，剩下的就交给时间吧~</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm发包小记</title>
      <link href="/2021/11/19/npm/"/>
      <url>/2021/11/19/npm/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>记录一次犯蠢经历😅，主要是npm私服发包和npm官网发包有一点小区别。</p><h1 id="npm官网"><a href="#npm官网" class="headerlink" title="npm官网"></a>npm官网</h1><p>包写好后，先登录，登录之后直接publish就ok了。<br><code>注意：</code></p><ol><li>确定在执行登录命令的时候处于npm源下，不能是淘宝源等其他源，否则会401报错；</li><li>包发布24小时内可以使用<code>unpublish</code>撤销。</li></ol><p><a href="https://docs.npmjs.com/cli/v8/commands/npm">npm文档传送门</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 登录 会提示输入账号，密码，邮箱</span><br><span class="line">npm login</span><br><span class="line"></span><br><span class="line">// 退出登录</span><br><span class="line">npm logout</span><br><span class="line"></span><br><span class="line">// 发包</span><br><span class="line">npm publish</span><br><span class="line"></span><br><span class="line">// 删除 npm unpublish [&lt;@scope&gt;/]&lt;pkg&gt;@&lt;version&gt;</span><br><span class="line">npm unpublish </span><br><span class="line">npm unpublish [&lt;@scope&gt;/]&lt;pkg&gt;@&lt;version&gt;</span><br><span class="line">npm unpublish [&lt;@scope&gt;/]&lt;pkg&gt; --force</span><br><span class="line"></span><br><span class="line">// deprecate命令 弃用一个包 会给使用这个包的人 推送弃用警示</span><br><span class="line">npm deprecate &lt;pkg&gt;[@&lt;version range&gt;] &lt;message&gt;</span><br><span class="line">npm deprecate my-thing@1.x &quot;1.x is no longer supported&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>npm login 之后，在npm的<code>.npmrc</code>文件的最后一行会出现<code>_authToken</code>存储token信息，退出登录之后会被清掉；<br><code>.npmrc</code> 文件可以通过<code>npm config ls</code>后在<code>userconfig</code>找到地址；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">//registry.npmjs.org/:_authToken=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</span><br></pre></td></tr></table></figure><h1 id="npm私服"><a href="#npm私服" class="headerlink" title="npm私服"></a>npm私服</h1><p>一般都是使用nexus搭建的私服，建库的时候需要建<code>hosted</code>类型的库，私服发布包需要在本地配置好账户信息，不用使用<code>npm login</code>做登录操作。<br>使用<code>nrm</code>切到你私服的源，在本地配置好账户信息的前提下，直接<code>npm publish</code>就可以发成功了。</p><p><a href="https://help.sonatype.com/repomanager2/node-packaged-modules-and-npm-registries#NodePackagedModulesandnpmRegistries-EncodingCredentialsonLinux">nexus文档地址</a></p><p>文档写的很清楚，如何建库，如何配置，详细配置请参考文档。</p><h1 id="坑在这里"><a href="#坑在这里" class="headerlink" title="坑在这里"></a>坑在这里</h1><p> 一开始并不知道私服只要配置了本地的账户信息之后，就不需要再登录了，配置好后，尝试登录一直报错<code>400 Bad request</code>也没有更加明确的提示！查了一堆资料都没有找到解决方案，实在无语😑，于是想试试看<code>npm publish</code>会报什么错来着，结果包就上去了~ 上去了~ 发成功了Σ(⊙▽⊙”a！好吧！<br>防止是意外成功，我又切回npm源<code>npm login</code>输入正确的账号、密码、邮箱登录成功，使用<code>npm publish</code>把包在npm上发布了一份，然后<code>npm logout</code>退出登录；再次切换到私服改了一下版本号重新<code>npm publish</code>，果真又成功了！</p><h1 id="自说自话"><a href="#自说自话" class="headerlink" title="自说自话"></a>自说自话</h1><p>借此篇文章记录一下，近来的感想：<br>在做一件事情的时候，如果暂时被困难挡住，不要那么快气馁，深呼吸冷静一下，理清一下思路换个方式再去试试，说不定就豁然开朗了呢？<br>一切栏不住自己的难题，终将成为我成长路上的养料~</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node小记</title>
      <link href="/2021/11/10/node-path/"/>
      <url>/2021/11/10/node-path/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>偶尔会写一些 node 小工具，由于不是经常写忘的很快，特此记录一下一些常用的依赖包之类的；</p><h3 id="支持esmodule"><a href="#支持esmodule" class="headerlink" title="支持esmodule"></a>支持esmodule</h3><p>修改<code>type</code>属性；</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;server&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;module&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span><span class="string">&quot;node bin/index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;chalk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;execa&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;inquirer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.2.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="chalk"><a href="#chalk" class="headerlink" title="chalk"></a>chalk</h3><p>地址:<a href="https://www.npmjs.com/package/chalk">chalk</a></p><p>美化控制台的输出</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(chalk.<span class="title function_">blue</span>(<span class="string">&#x27;Hello world!&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(chalk.<span class="title function_">red</span>(<span class="string">&#x27;hello world!&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="execa"><a href="#execa" class="headerlink" title="execa"></a>execa</h3><p>地址：<a href="https://www.npmjs.com/package/execa">execa</a><br>可以开子进程，用来执行一些命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> child_process = <span class="title function_">execa</span>(<span class="string">&#x27;yarn serve&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">cwd</span>: url.<span class="property">root</span>, <span class="comment">// 命令执行的项目地址</span></span><br><span class="line">  <span class="attr">shell</span>: <span class="literal">true</span>,    </span><br><span class="line">  <span class="attr">stdio</span>: [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>] </span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;execa res:&#x27;</span>, res);</span><br><span class="line">  child_process.<span class="title function_">kill</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="inquirer"><a href="#inquirer" class="headerlink" title="inquirer"></a>inquirer</h3><p>地址：<a href="https://www.npmjs.com/package/inquirer">inquirer</a><br>控制台输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> inquirer <span class="keyword">from</span> <span class="string">&#x27;inquirer&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> inquirer.<span class="title function_">prompt</span>([</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;input&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;projectName&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;set project name&#x27;</span>,</span><br><span class="line">      <span class="title function_">validate</span>(<span class="params">input</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (input) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Please enter project name&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;frame&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;please select a frame&#x27;</span>,</span><br><span class="line">      <span class="attr">choices</span>: [<span class="string">&#x27;vue&#x27;</span>, <span class="string">&#x27;react&#x27;</span>],</span><br><span class="line">      <span class="title function_">validate</span>(<span class="params">input</span>) &#123;</span><br><span class="line">        <span class="comment">// Declare function as asynchronous, and save the done callback</span></span><br><span class="line">        <span class="keyword">var</span> done = <span class="variable language_">this</span>.<span class="title function_">async</span>()</span><br><span class="line">        <span class="comment">// Do async stuff</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">typeof</span> input !== <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// Pass the return value in the done callback</span></span><br><span class="line">            <span class="title function_">done</span>(<span class="string">&#x27;You need to select a frame&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// Pass the return value in the done callback</span></span><br><span class="line">          <span class="title function_">done</span>(<span class="literal">null</span>, <span class="literal">true</span>)</span><br><span class="line">        &#125;, <span class="number">3000</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  ])</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="dirname"><a href="#dirname" class="headerlink" title="__dirname"></a>__dirname</h3><p>需要特殊处理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath &#125; <span class="keyword">from</span> <span class="string">&#x27;url&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> __dirname = <span class="title function_">fileURLToPath</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">join</span>(__dirname, dir);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dva小记</title>
      <link href="/2021/11/05/react-dvajs/"/>
      <url>/2021/11/05/react-dvajs/</url>
      
        <content type="html"><![CDATA[<h1 id="dva"><a href="#dva" class="headerlink" title="dva"></a>dva</h1><p>dva把redux和redux-saga组合起来，避免了store中需要写watcher saga、worker saga、reducer、action等一堆的东西，增加state的时候减少多个文件反复横跳的情况；dva提出了model的概念，通过reducers, effects 和 subscriptions 组织 model，大大提高开发便利度！其还集成了react-router, router的api也可从dva中直接引入。</p><h1 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h1><p>文档地址：<a href="https://dvajs.com/">dva.js</a></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>dva作为一个纯数据流方案，简化redux相关技术栈的开发流程。目前dva库已经停止维护，更多的是使用umi.js去做react项目的开发，umi里面dva作为插件默认注册，单单用dva开发项目的情况很少。</p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> dva </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易版react-redux</title>
      <link href="/2021/10/26/react-redux2/"/>
      <url>/2021/10/26/react-redux2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习 react-redux 源码并自己实现其主要功能；学习使我快乐~ 敲代码使我快乐~</p><h2 id="手写一个简单的-react-redux"><a href="#手写一个简单的-react-redux" class="headerlink" title="手写一个简单的 react-redux"></a>手写一个简单的 react-redux</h2><p>react-redux 库将 react 和 redux 结合起来，使 react 项目中可以更加方便的使用 redux~</p><p><code>react-redux</code> 主要 API 有: <code>Provider</code>、<code>connect</code>、<code>bindActionCreators</code>、<code>useSelector</code>、<code>useDispatch</code>、</p><h2 id="Provider"><a href="#Provider" class="headerlink" title="Provider"></a>Provider</h2><p><code>Provider</code>组件通过包裹应用根组件通过 ReactContext 将 store 数据传给子孙组件；</p><ol><li>使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./myRedux&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Provider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ol start="2"><li>实现</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ReduxContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Provider</span> = (<span class="params">&#123; store, children &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">ReduxContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;store&#125;</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">ReduxContext.Provider</span>&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="connect"><a href="#connect" class="headerlink" title="connect"></a>connect</h2><p><code>connect</code>是一个高阶组件 HOC，主要作用是将 store 中的<code>state</code>和<code>dispatch</code>映射到组件，以下实现仅写了最常用的<code>mapStateToProps</code>和<code>mapDispatchToProps</code>；</p><ol><li>使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title function_">connect</span>(<span class="function">(<span class="params">&#123; count &#125;</span>) =&gt;</span> (&#123; count &#125;), &#123;</span><br><span class="line">  <span class="attr">add</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;ADD&#x27;</span> &#125;),</span><br><span class="line">  <span class="attr">minus</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;MINUS&#x27;</span> &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReactReduxPage</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; count, dispatch, add, minus &#125; = <span class="variable language_">this</span>.<span class="property">props</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>ReactReduxPage<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;add&#125;</span>&gt;</span>ADD<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;minus&#125;</span>&gt;</span>MINUS<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            dispatch(&#123; type: &#x27;ADD&#x27; &#125;)</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          dispatch</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现（代码里有详细解释）</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// connect 是一个高阶组件hoc</span></span><br><span class="line"><span class="comment">// conent 有两个() 第一个是 mapStateToProps, mapDispatchToProps ... 第二个是组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">connect</span> = (<span class="params">mapStateToProps, mapDispatchToProps</span>) =&gt; <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  WrappedComponnet</span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 将store的数据 传到 下面组件</span></span><br><span class="line">  <span class="keyword">const</span> store = <span class="title function_">useContext</span>(<span class="title class_">ReduxContext</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// store.getState()能拿到所有的state的数据，mapStateToProps则是把需要的数据解构出来，挂到组件的props上</span></span><br><span class="line">  <span class="keyword">const</span> stateProps = <span class="title function_">mapStateToProps</span>(store.<span class="title function_">getState</span>())</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果不写 mapDispatchToProps , 默认是 dispatch 对象</span></span><br><span class="line">  <span class="keyword">let</span> dispatchProps = &#123; <span class="attr">dispatch</span>: store.<span class="property">dispatch</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// mapDispatchToProps 支持 Object 和 Function 两种类型</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> mapDispatchToProps === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">    dispatchProps = <span class="title function_">mapDispatchToProps</span>(store.<span class="property">dispatch</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> mapDispatchToProps === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 对象的时候，需要自动把dispatch加上，函数的时候，需要用户在mapStateToProps里面手动bindActionCreators</span></span><br><span class="line">    dispatchProps = <span class="title function_">bindActionCreators</span>(mapDispatchToProps, store.<span class="property">dispatch</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新组件方法 useForceUpdate为自定义hook</span></span><br><span class="line">  <span class="keyword">const</span> forceUpdate = <span class="title function_">useForceUpdate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// useEffect__订阅 Dom更新  useEffect会在浏览器绘制后延迟执行</span></span><br><span class="line">  <span class="comment">// useLayoutEffect-订阅-Dom更新 useLayoutEffect 没有延迟 同步</span></span><br><span class="line">  <span class="title function_">useLayoutEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 副作用不能直接写到函数体，会阻塞UI渲染</span></span><br><span class="line">    <span class="comment">// 订阅</span></span><br><span class="line">    store.<span class="title function_">subscribe</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">forceUpdate</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;, [store])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">WrappedComponnet</span> &#123;<span class="attr">...props</span>&#125; &#123;<span class="attr">...stateProps</span>&#125; &#123;<span class="attr">...dispatchProps</span>&#125; /&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bindActionCreators"><a href="#bindActionCreators" class="headerlink" title="bindActionCreators"></a>bindActionCreators</h2><p>这个方法主要是对<code>mapDispatchToProps</code>做处理使用的，它会将<code>dispatch</code>和<code>action</code>组合起来；当<code>mapDispatchToProps</code>为函数类型的时候<code>mapDispatchToProps</code>函数体里面需要用到，当<code>mapDispatchToProps</code>为对象的时候，<code>connect</code>内部也需要对传入的对象做处理，这部分可查看上面<code>connect</code>实现代码<code>第20行</code>；</p><ol><li>使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fucntion 参数是dispatch与ownProps</span></span><br><span class="line"><span class="comment">// !慎重定义ownProps，因为你一旦定义ownProps，那么每当ownProps发生改变的时候，当前的mapStateToProps都会被调用，容易影响性能</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">mapDispatchToProps</span> =  (<span class="params">dispatch</span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> creators = &#123;</span><br><span class="line">    <span class="attr">add</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;ADD&#x27;</span> &#125;),</span><br><span class="line">    <span class="attr">minus</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;MINUS&#x27;</span> &#125;),</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  creators = <span class="title function_">bindActionCreators</span>(creators, dispatch)</span><br><span class="line">  <span class="keyword">return</span> &#123; dispatch, ...creators &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">connect</span>(mapStateToProps, mapDispatchToProps)(<span class="title class_">ReactReduxPage</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>实现<br>实现其实很简单，主要就是对传入的<code>creator</code>循环处理，给<code>action</code>套上<code>dispatch</code>;</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">bindActionCreator</span> = (<span class="params">creator, dispatch</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 注意： 函数不要丢参数</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...agrs</span>) =&gt;</span> <span class="title function_">dispatch</span>(<span class="title function_">creator</span>(...agrs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">bindActionCreators</span> = (<span class="params">creator, dispatch</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> obj = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> creator) &#123;</span><br><span class="line">    obj[key] = <span class="title function_">bindActionCreator</span>(creator[key], dispatch)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> obj</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="useSelector、useDispatch"><a href="#useSelector、useDispatch" class="headerlink" title="useSelector、useDispatch"></a>useSelector、useDispatch</h2><p><code>useSelector</code>和<code>useDispatch</code>是<code>react-redux</code>提供的 hook 方法，主要是针对函数组件使用 redux 的；</p><ol><li>使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="comment">// import &#123;useSelector, useDispatch&#125; from &#x27;react-redux&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useSelector, useDispatch &#125; <span class="keyword">from</span> <span class="string">&#x27;../myRedux&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">ReactReduxHookPage</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 类似于 mapStateToProps</span></span><br><span class="line">  <span class="keyword">const</span> count = <span class="title function_">useSelector</span>(<span class="function">(<span class="params">&#123; count &#125;</span>) =&gt;</span> count)</span><br><span class="line">  <span class="keyword">const</span> dispatch = <span class="title function_">useDispatch</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">add</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">dispatch</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;ADD&#x27;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">minus</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">dispatch</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;MINUS&#x27;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>ReactReduxHookPage<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;add&#125;</span>&gt;</span>ADD<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;minus&#125;</span>&gt;</span>MINUS<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          dispatch(&#123; type: &#x27;ADD&#x27; &#125;)</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        dispatch</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ReactReduxHookPage</span></span><br></pre></td></tr></table></figure><ol start="2"><li>实现</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useSelector</span> = (<span class="params">selector</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> store = <span class="title function_">useContext</span>(<span class="title class_">ReduxContext</span>)</span><br><span class="line">  <span class="keyword">const</span> selectedState = <span class="title function_">selector</span>(store.<span class="title function_">getState</span>())</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> forceUpdate = <span class="title function_">useForceUpdate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 订阅</span></span><br><span class="line">  <span class="title function_">useLayoutEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//  副作用不能直接写到函数体，会阻塞UI渲染</span></span><br><span class="line">    store.<span class="title function_">subscribe</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">forceUpdate</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;, [store])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> selectedState</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useDispatch</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> store = <span class="title function_">useContext</span>(<span class="title class_">ReduxContext</span>)</span><br><span class="line">  <span class="keyword">return</span> store.<span class="property">dispatch</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="myReactRedux-完整代码"><a href="#myReactRedux-完整代码" class="headerlink" title="myReactRedux 完整代码"></a>myReactRedux 完整代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useContext, useLayoutEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useForceUpdate &#125; <span class="keyword">from</span> <span class="string">&#x27;../hooks&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ReduxContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Provider</span> = (<span class="params">&#123; store, children &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">ReduxContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;store&#125;</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">ReduxContext.Provider</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// connect 是一个高阶组件 hoc</span></span><br><span class="line"><span class="comment">// conent 有两个() 第一个是 mapStateToProps, mapDispatchToProps ... 第二个是组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">connect</span> = (<span class="params">mapStateToProps, mapDispatchToProps</span>) =&gt; <span class="function">(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  WrappedComponnet</span></span></span><br><span class="line"><span class="params"><span class="function"></span>) =&gt;</span> <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 将store的数据 传到 下面组件</span></span><br><span class="line">  <span class="keyword">const</span> store = <span class="title function_">useContext</span>(<span class="title class_">ReduxContext</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> stateProps = <span class="title function_">mapStateToProps</span>(store.<span class="title function_">getState</span>())</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果不写 mapDispatchToProps , 默认是 dispatch 对象</span></span><br><span class="line">  <span class="keyword">let</span> dispatchProps = &#123; <span class="attr">dispatch</span>: store.<span class="property">dispatch</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// mapDispatchToProps 支持 Object 和 Function 两种格式</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> mapDispatchToProps === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">    dispatchProps = <span class="title function_">mapDispatchToProps</span>(store.<span class="property">dispatch</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> mapDispatchToProps === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 对象的时候，需要自动把dispatch加上，函数的时候，需要用户在mapStateToProps里面手动bindActionCreators</span></span><br><span class="line">    dispatchProps = <span class="title function_">bindActionCreators</span>(mapDispatchToProps, store.<span class="property">dispatch</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新hook</span></span><br><span class="line">  <span class="keyword">const</span> forceUpdate = <span class="title function_">useForceUpdate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// useEffect__订阅 Dom更新  useEffect会在浏览器绘制后延迟执行</span></span><br><span class="line">  <span class="comment">// useLayoutEffect-订阅-Dom更新 useLayoutEffect 没有延迟 同步</span></span><br><span class="line">  <span class="title function_">useLayoutEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 副作用不能直接写到函数体，会阻塞UI渲染</span></span><br><span class="line">    <span class="comment">// 订阅</span></span><br><span class="line">    store.<span class="title function_">subscribe</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">forceUpdate</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;, [store])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">WrappedComponnet</span> &#123;<span class="attr">...props</span>&#125; &#123;<span class="attr">...stateProps</span>&#125; &#123;<span class="attr">...dispatchProps</span>&#125; /&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useSelector</span> = (<span class="params">selector</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> store = <span class="title function_">useContext</span>(<span class="title class_">ReduxContext</span>)</span><br><span class="line">  <span class="keyword">const</span> selectedState = <span class="title function_">selector</span>(store.<span class="title function_">getState</span>())</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> forceUpdate = <span class="title function_">useForceUpdate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 订阅</span></span><br><span class="line">  <span class="title function_">useLayoutEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//  副作用不能直接写到函数体，会阻塞UI渲染</span></span><br><span class="line">    store.<span class="title function_">subscribe</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">forceUpdate</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;, [store])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> selectedState</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useDispatch</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> store = <span class="title function_">useContext</span>(<span class="title class_">ReduxContext</span>)</span><br><span class="line">  <span class="keyword">return</span> store.<span class="property">dispatch</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">bindActionCreator</span> = (<span class="params">creator, dispatch</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...agrs</span>) =&gt;</span> <span class="title function_">dispatch</span>(<span class="title function_">creator</span>(...agrs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">bindActionCreators</span> = (<span class="params">creator, dispatch</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> obj = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> creator) &#123;</span><br><span class="line">    obj[key] = <span class="title function_">bindActionCreator</span>(creator[key], dispatch)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> obj</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>useForceUpdate</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState, useCallback &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义hook 模拟类组件的forceUpdate</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useForceUpdate = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [count, setCount] = <span class="title function_">useState</span>(<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">const</span> update = <span class="title function_">useCallback</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setCount</span>(<span class="function"><span class="params">prev</span> =&gt;</span> prev + <span class="number">1</span>)</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> update</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-redux使用</title>
      <link href="/2021/10/22/react-redux/"/>
      <url>/2021/10/22/react-redux/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上两月忙其他的事情，由此学习的步伐暂停了近两个月的时间，现在终于有时间继续啦！之前在学习 redux 的过程中没有整理笔记，继续开始的时候发现知识点居然忘记了好多，还是老话说的好：“好记性不如烂笔头！”；写成一篇文章一是对自己学习过程的记录，也是对知识点的总结，最终目的是为了让知识点掌握的更加牢固~</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>提供了两个 api</p><ol><li><code>Provider</code> 为后代组件提供 store</li><li><code>connect</code> 为组件提供数据和变更方法</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-redux</span><br></pre></td></tr></table></figure><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><h4 id="Provider"><a href="#Provider" class="headerlink" title="Provider"></a>Provider</h4><p><code>&lt;Provider store&gt;</code> 使组件层级中的 <code>connect()</code> 方法能够获得 <code>Redux store</code>。正常情况下，根组件应该嵌套在 <code>&lt;Provider&gt;</code> 中才能使用 <code>connect()</code> 方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-redux&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 把Provider放在根组件外层，使子组件能获得store</span></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Provider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="connect"><a href="#connect" class="headerlink" title="connect"></a>connect</h4><p><code>connect([mapStateToProps], [mapDispatchToProps], [mergeProps], [options])</code><br>连接 React 组件与 Redux store, 返回一个新的已与 Redux store 连接的组件类。</p><ul><li><code>mapStateToProps</code></li><li><code>mapDispatchToProps</code></li><li><code>mergeProps</code><br>如果指定了这个参数， <code>mapStateToProps()</code> 与 <code>mapDispatchToProps()</code> 的执行结果和组件自身的 <code>props</code> 将传入到这个回调函数中。该回调函数返回的对象将作为 <code>props</code> 传递到被包装的组件中。你也许可以用这个回调函数，根据组件的 <code>props</code> 来筛选部分的 <code>state</code> 数据，或者把 <code>props</code> 中 的某个特定变量与 <code>action creator</code> 绑定在一起。如果你省略这个参数，默认情况下返回<code>Object.assign(&#123;&#125;, ownProps, stateProps, dispatchProps)</code> 的结果。</li></ul><h3 id="react-redux-使用-类组件"><a href="#react-redux-使用-类组件" class="headerlink" title="react-redux 使用 类组件"></a>react-redux 使用 类组件</h3><h4 id="store-index"><a href="#store-index" class="headerlink" title="store/index"></a>store/index</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware, combineReducers &#125; <span class="keyword">from</span> <span class="string">&#x27;redux&#x27;</span></span><br><span class="line"><span class="keyword">import</span> thunk <span class="keyword">from</span> <span class="string">&#x27;redux-thunk&#x27;</span> <span class="comment">// 异步</span></span><br><span class="line"><span class="keyword">import</span> logger <span class="keyword">from</span> <span class="string">&#x27;redux-logger&#x27;</span> <span class="comment">// logger</span></span><br><span class="line"><span class="keyword">import</span> promise <span class="keyword">from</span> <span class="string">&#x27;redux-promise&#x27;</span> <span class="comment">// 处理promise</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">countReducer</span>(<span class="params">state = <span class="number">0</span>, action</span>) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.<span class="property">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;ADD&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> state + (action.<span class="property">payload</span> || <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;MINUS&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> state - (action.<span class="property">payload</span> || <span class="number">1</span>)</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个数据仓库 combineReducers组合reducer  applyMiddleware扩展redux的中间件</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(</span><br><span class="line">  <span class="title function_">combineReducers</span>(&#123; <span class="attr">count</span>: countReducer &#125;),</span><br><span class="line">  <span class="title function_">applyMiddleware</span>(thunk, promise, logger)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出的store在 index.js 中通过&lt;Provider store&gt;&lt;/Provider&gt;组件传入&lt;App/&gt;根组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><h4 id="pages-reactReduxPage"><a href="#pages-reactReduxPage" class="headerlink" title="pages/reactReduxPage"></a>pages/reactReduxPage</h4><p>通过 connect 的<code>mapStateToProps</code>映射<code>state</code>、<code>mapDispatchToProps</code>映射<code>dispatch</code>到组件的<code>props</code>身上；<br><code>mapDispatchToProps</code> 可以是对象形式，也可以是函数形式:<br>对象：组件 props 身上就会有具体的 dispatch 方法；<br>函数：组件身上会有具体的方法，还有 redux 的 dispatch 方法，redux 提供了 <code>bindActionCreators</code>帮助我们写<code>mapDispatchToProps</code></p><p>注意：<code>mapStateToProps</code>、<code>mapDispatchToProps</code>的第二个参数都是<code>ownProps</code>,慎用！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title function_">connect</span>(</span><br><span class="line">  <span class="function">(<span class="params">&#123; count &#125;</span>) =&gt;</span> (&#123; count &#125;),</span><br><span class="line">  <span class="comment">// mapDispatchToProps</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 对象 可以通过 this.props.add() this.props.minus()调用</span></span><br><span class="line">  <span class="comment">// &#123;</span></span><br><span class="line">  <span class="comment">//     add: () =&gt; (&#123; type: &#x27;ADD&#x27; &#125;),</span></span><br><span class="line">  <span class="comment">//     minus: () =&gt; (&#123; type: &#x27;MINUS&#x27; &#125;)</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. 函数 将dispatch也扩展进去</span></span><br><span class="line">  <span class="comment">// dispatch =&gt; &#123;</span></span><br><span class="line">  <span class="comment">// const add = () =&gt; dispatch(&#123;type: &quot;ADD&quot;&#125;);</span></span><br><span class="line">  <span class="comment">// const minus =() =&gt; dispatch(&#123;type: &quot;MINUS&quot;&#125;);</span></span><br><span class="line">  <span class="comment">// return &#123; dispatch, add, minus &#125;;</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3. 函数 如果方法太多的话，一个一个导出会很麻烦，由此redux提供了bindActionCreators帮我们组合dispatch和action</span></span><br><span class="line">  <span class="function">(<span class="params">dispatch</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 创建一个对象</span></span><br><span class="line">    <span class="keyword">let</span> creators = &#123;</span><br><span class="line">      <span class="attr">add</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;ADD&#x27;</span> &#125;),</span><br><span class="line">      <span class="attr">minus</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;MINUS&#x27;</span> &#125;),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    creators = <span class="title function_">bindActionCreators</span>(creators, dispatch)</span><br><span class="line">    <span class="comment">// 直接返回 creators</span></span><br><span class="line">    <span class="keyword">return</span> &#123; dispatch, ...creators &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReactReduxPage</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// console.log(&quot;props&quot;, this.props); //sy-log</span></span><br><span class="line">    <span class="keyword">const</span> &#123; count, dispatch, add, minus &#125; = <span class="variable language_">this</span>.<span class="property">props</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>ReactReduxPage<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;add&#125;</span>&gt;</span>ADD<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;minus&#125;</span>&gt;</span>MINUS<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            dispatch(&#123; type: &#x27;ADD&#x27; &#125;)</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          dispatch</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写装饰器的话，@connet 里面看起来会比较乱，一般在写项目的时候都会把<code>mapStateToProps</code>和<code>mapDispatchToProps</code>写到组件的下边：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">&#x27;react-redux&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; bindActionCreators &#125; <span class="keyword">from</span> <span class="string">&#x27;redux&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ReactReduxPage</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// console.log(&quot;props&quot;, this.props); //sy-log</span></span><br><span class="line">    <span class="keyword">const</span> &#123; count, dispatch, add, minus &#125; = <span class="variable language_">this</span>.<span class="property">props</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>ReactReduxPage<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;add&#125;</span>&gt;</span>ADD<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;minus&#125;</span>&gt;</span>MINUS<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">            dispatch(&#123; type: &#x27;ADD&#x27; &#125;)</span></span><br><span class="line"><span class="language-xml">          &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          dispatch</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// mapStateToProps Fucntion</span></span><br><span class="line"><span class="comment">// !慎重定义ownProps，因为你一旦定义ownProps，那么每当ownProps发生改变的时候，当前的 mapStateToProps都会被调用，</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">mapStateToProps</span> = (<span class="params">&#123; count &#125;</span>) =&gt; (&#123; count &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fucntion 参数是dispatch与ownProps</span></span><br><span class="line"><span class="comment">// !慎重定义ownProps，因为你一旦定义ownProps，那么每当ownProps发生改变的时候，当前的mapStateToProps都会被调用，容易影响性能</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">mapDispatchToProps</span> = (<span class="params">dispatch</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> creators = &#123;</span><br><span class="line">    <span class="attr">add</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;ADD&#x27;</span> &#125;),</span><br><span class="line">    <span class="attr">minus</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&#x27;MINUS&#x27;</span> &#125;),</span><br><span class="line">  &#125;</span><br><span class="line">  creators = <span class="title function_">bindActionCreators</span>(creators, dispatch)</span><br><span class="line">  <span class="keyword">return</span> &#123; dispatch, ...creators &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">connect</span>(mapStateToProps, mapDispatchToProps)(<span class="title class_">ReactReduxPage</span>)</span><br></pre></td></tr></table></figure><h3 id="react-redux-使用-函数组件"><a href="#react-redux-使用-函数组件" class="headerlink" title="react-redux 使用 函数组件"></a>react-redux 使用 函数组件</h3><p>store 的注入根组件等方法和上面的类组件都是一样的，区别就在组件内部使用 store 数据的区别，hook 的方法会更加的简洁和方便；<br>主要是利用<code>react-redux</code>提供的 <code>useSelecter</code>、<code>useDispatch</code>两个 hook;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useSelector, useDispatch &#125; <span class="keyword">from</span> <span class="string">&#x27;react-redux&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">ReactReduxHookPage</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 类似于 mapStateToProps</span></span><br><span class="line">  <span class="keyword">const</span> count = <span class="title function_">useSelector</span>(<span class="function">(<span class="params">&#123; count &#125;</span>) =&gt;</span> count)</span><br><span class="line">  <span class="keyword">const</span> dispatch = <span class="title function_">useDispatch</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">add</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">dispatch</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;ADD&#x27;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">minus</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">dispatch</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;MINUS&#x27;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>ReactReduxHookPage<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;add&#125;</span>&gt;</span>ADD<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;minus&#125;</span>&gt;</span>MINUS<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;dispatch(&#123; type: &#x27;ADD&#x27; &#125;)&#125;&#125;&gt;dispatch<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ReactReduxHookPage</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上记录了react-redux的基本使用，尚未涉及处理异步情况，处理异步问题计划另起一篇文章去详细讲述。<br>很多人在学习react的时候感觉很难，我猜大部分就是对这个react-redux拎不清，其实使用方法都很简单，主要就是react、react-redux写法都很自由，一但项目大起来，如何优雅的去编写项目代码保证项目具有良好的扩展性、阅读性、以及代码的健壮性，确实是一个需要重要关注的点。</p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pdfjs在移动端预览pdf</title>
      <link href="/2021/09/16/pdfjs-dist/"/>
      <url>/2021/09/16/pdfjs-dist/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://github.com/mozilla/pdf.js">pdfjs传送门</a><br>pdfjs + vue 移动端 踩坑记录，这个问题遇到过很多次，特此记录。</p><h2 id="成功解决方案"><a href="#成功解决方案" class="headerlink" title="成功解决方案"></a>成功解决方案</h2><ol><li><p>去pdfjs的<a href="https://github.com/mozilla/pdf.js">GitHub地址</a>把代码拉下来；</p></li><li><p>没有glup的环境需要安装一下gulp:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g gulp-cli</span><br></pre></td></tr></table></figure></li><li><p>安装项目依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install </span><br></pre></td></tr></table></figure></li><li><p>运行服务,运行之后打开地址<code>http://localhost:8888/web/viewer.html</code>；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp server</span><br></pre></td></tr></table></figure><p>可以看到pdfjs库本身examples文件夹下提供了很多的例子，都可以预览看看，自己想要使用哪个版本；</p></li><li><p>打包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp generic-legacy</span><br></pre></td></tr></table></figure><p>打包之后<code>build/generic-legacy</code>下面就是打包后的内容；</p></li><li><p>将<code>generic-legacy</code>文件夹拷贝到vue项目里面，放到public目录下，这里需要注意一点，没必要放到src下，不用打包到app.js中徒增项目大小、降低了性能；上线之前可以把<code>generic-legacy</code>下的代码都压缩一下~</p></li><li><p>新建一个vue文件，用来预览pdf，url需要填写为具体项目的的具体文件地址，pdf的地址可以通过query传到当前页面(pdf的地址参数，具体逻辑具体分析)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> &lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;viewPdf&quot;&gt;</span><br><span class="line">    &lt;iframe :src=&quot;url&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      url: &#x27;&#x27;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created: function() &#123;</span><br><span class="line">    let pdflink = this.$route.query.url || &#x27;&#x27;;</span><br><span class="line">    this.url = `/generic-legacy/web/viewer.html?file=$&#123;pdflink&#125;`;</span><br><span class="line">    console.log(&#x27;------&#x27; + this.url);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">#viewPdf &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  background: #f5f5f5;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  iframe &#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">    border: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>这样就能正常的预览了，而且<code>Android</code>和<code>ios</code>端预览都没有问题，测试使用40+页的pdf,渲染速度也没有太慢~</p></li></ol><h2 id="踩坑历史"><a href="#踩坑历史" class="headerlink" title="踩坑历史"></a>踩坑历史</h2><ol><li><p>切勿使用<code>examples</code>下面的<code>mobile-viewer</code>,这个<code>mobile-viewer</code>真的一点都不mobile~, 使用之后ios预览是正常的，在大部分Android手机也行，但是也有不少比例的安卓手机上pdf无法loading，典型代表：华为手机鸿蒙系统；</p></li><li><p>pdfjs最好使用最新版本，一开始用了一个老版本（版本号不详，老项目里的），如果pdf存在后台动态填充数据的情况，Android手机预览正常，ios则一直loading；</p></li><li><p>之前在vue项目中有使用<code>pdfjs-dist</code>包，然后按照<code>examples/webpack</code>版的例子集成到vue文件中，pdf预览正常，但是文字显示非常糊，就算是放大也看不清字；pdfjs默认是canvas渲染，换成svg的方式渲染后画面清晰了，非宋体的字体却又显示不出来！横竖是各种坑；后来通过把canvas画大两倍，解决绘画模糊，但是渲染性能实在鸡肋，最终放弃该方案！</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pdfjs-dist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vant 375适配750项目</title>
      <link href="/2021/09/01/vuxToVant/"/>
      <url>/2021/09/01/vuxToVant/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>如果自己的项目是按照750尺寸做的适配，引入vant组件就会出现，组件的样式都缩小一半的情况；<br>github的issues里面已经有小伙伴提过类似的问题<a href="https://github.com/youzan/vant/issues/1181">传送门</a></p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>改法：利用<code>postcss-pxtorem</code>对项目和vant组件进行区别适配，修改<code>postcss.config.js</code>或者<code>.postcssrc.js</code>里面的配置:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://github.com/michael-ciniawsky/postcss-load-config</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">(<span class="params">&#123; file &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> rootValue;</span><br><span class="line">  <span class="comment">// vant组件使用37.5</span></span><br><span class="line">  <span class="keyword">if</span> (file &amp;&amp; file.<span class="property">dirname</span> &amp;&amp; file.<span class="property">dirname</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;vant&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    rootValue = <span class="number">37.5</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    rootValue = <span class="number">75</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">plugins</span>: &#123;</span><br><span class="line">      <span class="string">&quot;postcss-import&quot;</span>: &#123;&#125;,</span><br><span class="line">      <span class="string">&quot;postcss-pxtorem&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">rootValue</span>: rootValue,</span><br><span class="line">        <span class="attr">propList</span>: [<span class="string">&quot;*&quot;</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;autoprefixer&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react项目npm库记录(持续更新中)</title>
      <link href="/2021/08/18/react-utils/"/>
      <url>/2021/08/18/react-utils/</url>
      
        <content type="html"><![CDATA[<h1 id="react-helmet"><a href="#react-helmet" class="headerlink" title="react-helmet"></a>react-helmet</h1><p>React Helmet是一个HTML文档head管理工具，管理对文档头的所有更改; <a href="https://github.com/nfl/react-helmet/">传送门</a></p><h1 id="reselect"><a href="#reselect" class="headerlink" title="reselect"></a>reselect</h1><p><a href="https://segmentfault.com/a/1190000011936772">为什么我们需要reselect</a><br>Reselect 是一个 Redux 的选择器库：</p><ul><li><p>Selector 可以计算衍生的数据，可以让 Redux 存储尽可能少的 state 。</p></li><li><p>Selector 非常高效，除非某个参数发生变化，否则不会发生计算过程。</p></li><li><p>Selector 是可组合的，它们可以输入、传递到其他的选择器。</p></li></ul><h1 id="history"><a href="#history" class="headerlink" title="history"></a>history</h1><p> 消除平台差异的一个history库</p><h1 id="invariant"><a href="#invariant" class="headerlink" title="invariant"></a>invariant</h1><p>校验库</p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React.memo()</title>
      <link href="/2021/08/03/reactMemo/"/>
      <url>/2021/08/03/reactMemo/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>React.memo()</code>是 React 的一个顶层 API 且为高阶组件，它对组件做的事类似于<code>React.PureComponet</code>,不同的是：<code>React.memo()</code>是对函数组件进行优化，<code>React.PureComponent</code>是定义类组件使用的；</p><h2 id="React-Component、React-PureComponent"><a href="#React-Component、React-PureComponent" class="headerlink" title="React.Component、React.PureComponent"></a>React.Component、React.PureComponent</h2><p>了解<code>React.memo()</code>之前，让我们先来了解一下<code>React.Component</code>、<code>React.PureComponent</code>这两个组件，只要理解了这两个组件<code>React.memo()</code>就能自然而然的 get 到了~</p><h3 id="React-Component"><a href="#React-Component" class="headerlink" title="React.Component"></a>React.Component</h3><p>这里引用 React 官方介绍：<code>React.Component</code> 是使用 ES6 classes 方式定义 React 组件的基类；<br>只要是写类组件就需要用到它；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Name</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="React-PureComponent"><a href="#React-PureComponent" class="headerlink" title="React.PureComponent"></a>React.PureComponent</h3><p><code>React.PureComponent</code>与<code>React.Component</code>的区别是内部实现了<code>shouldComponentUpdate()</code>, 会对组件的 props 和 state 进行浅层比较，如果比较下来数据没有改变，组件则不会重复刷新；<br>举个例子：</p><blockquote><p>先用 React.Component 写一个小 demo:</p></blockquote><p><img src="/images/react/memo_5.png"></p><blockquote><p>然后我们点击 Add 按钮，可以看到点击一次 dom 就会重新渲染一次：</p></blockquote><p><img src="/images/react/memo_3.png"></p><blockquote><p>然后再把 state 固定设置为 1，看看在数据相同的情况下，dom 是否会重新渲染：</p></blockquote><p><img src="/images/react/memo_6.png"><br><img src="/images/react/memo_2.png"></p><blockquote><p>很明显，上面的结果可以看出不管 setState 的值是否相同，dom 都会无差别的更新，项目一旦庞大起来性能就会存在很大的问题；为了解决这个问题，react 提供了 React.PureComponent；</p></blockquote><p>下面让我们把 demo 小小的修改一下：</p><p><img src="/images/react/memo_8.png"></p><blockquote><p>这个时候点击 Add 按钮，点击再多次，只要 setState 的值是一样的就只会触发一次更新，避免了性能的浪费；</p></blockquote><p><img src="/images/react/memo_1.png"></p><p>使用 <code>React.PureComponent</code>主要注意的点：</p><ol><li>React.PureComponent 中的 shouldComponentUpdate() 仅作对象的浅层比较；</li><li>如果数据结构很复杂，可能会产生错误结果；</li></ol><h2 id="React-memo"><a href="#React-memo" class="headerlink" title="React.memo()"></a>React.memo()</h2><p>这里引用react官网的原文：</p><ol><li>如果你的组件在相同 props 的情况下渲染相同的结果，那么你可以通过将其包装在 React.memo 中调用，以此通过记忆组件渲染结果的方式来提高组件的性能表现。这意味着在这种情况下，React 将跳过渲染组件的操作并直接复用最近一次渲染的结果。</li><li>React.memo <code>仅检查 props</code> 变更。如果函数组件被 React.memo 包裹，且其实现中拥有 useState，useReducer 或 useContext 的 Hook，当 context 发生变化时，它仍会重新渲染。</li><li>默认情况下其只会对复杂对象做浅层对比，如果你想要<code>控制对比过程</code>，那么请将自定义的比较函数通过<code>第二个参数</code>传入来实现。</li></ol><p>以上对React.memo的讲解已经足够清晰了~</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">MyComponent</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="comment">/* 使用 props 渲染 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">areEqual</span>(<span class="params">prevProps, nextProps</span>) &#123;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  如果把 nextProps 传入 render 方法的返回结果与</span></span><br><span class="line"><span class="comment">  将 prevProps 传入 render 方法的返回结果一致则返回 true，</span></span><br><span class="line"><span class="comment">  否则返回 false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">React</span>.<span class="title function_">memo</span>(<span class="title class_">MyComponent</span>, areEqual);</span><br></pre></td></tr></table></figure><p>让我们再把上面点击按钮的小demo改一下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Test</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IObjectProps</span>&gt; = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> [count, setCount] = <span class="title function_">useState</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> addHandle = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 这里固定设置count的值为1</span></span><br><span class="line">    <span class="title function_">setCount</span>(<span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &#x27;<span class="attr">10px</span>&#x27; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;console.log(&#x27;dom 渲染&#x27;)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;addHandle&#125;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用React.memo包裹组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">React</span>.<span class="title function_">memo</span>(<span class="title class_">Test</span>)</span><br></pre></td></tr></table></figure><p>这个时候只会在count的值由0变为1的时候触发 <code>console.log(&#39;dom 渲染&#39;)</code>, 当count值为1再去设置成1的时候，组件就不会再重复的刷新了~</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>React.memo()</code>减少函数组件的无用渲染，为React函数组件性能优化提供了一个有效的方法。</p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> memo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义hooks</title>
      <link href="/2021/07/29/react-hooks/"/>
      <url>/2021/07/29/react-hooks/</url>
      
        <content type="html"><![CDATA[<h3 id="自定义-hooks-记录"><a href="#自定义-hooks-记录" class="headerlink" title="自定义 hooks 记录"></a>自定义 hooks 记录</h3><blockquote><p>记录一下常用的自定义 hook~~~</p></blockquote><h3 id="useForceUpdate"><a href="#useForceUpdate" class="headerlink" title="useForceUpdate"></a>useForceUpdate</h3><blockquote><p>当我们使用<code>React.PureComponent</code>定义类组件的时候，因为<code>React.PureComponent</code>只是对数据做浅比较，当数据结构非常复杂的情况则可能出现数据更新页面不更新的情况，react 提供了一个<code>forceupdate</code>方法用来手动重新渲染组件，而函数组件是没有这个方法的，如果也想要实现手动刷新组件可以通过自定义 hook 的方法去实现；</p></blockquote><p>以下记录了两种实现 useForceUpdate 自定义 hook 的方法：</p><h4 id="useState-版"><a href="#useState-版" class="headerlink" title="useState 版"></a>useState 版</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState, useCallback &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义hook 模拟类组件的forceUpdate</span></span><br><span class="line"><span class="comment"> * 写法一 利用uesState</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> useForceUpdate = <span class="keyword">function</span> (<span class="params"></span>): <span class="title class_">Function</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [, setCount] = useState &lt; number &gt; <span class="number">0</span></span><br><span class="line">  <span class="keyword">const</span> update = <span class="title function_">useCallback</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setCount</span>((<span class="attr">prev</span>: number): <span class="function"><span class="params">number</span> =&gt;</span> prev + <span class="number">1</span>)</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> update</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useForceUpdate</span><br></pre></td></tr></table></figure><h4 id="useReducer-版"><a href="#useReducer-版" class="headerlink" title="useReducer 版"></a>useReducer 版</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useReducer &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义hook 模拟类组件的forceUpdate</span></span><br><span class="line"><span class="comment"> * 写法一 利用useReducer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> useForceUpdate = <span class="keyword">function</span> (<span class="params"></span>): <span class="title class_">Function</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [, forceUpdate] = <span class="title function_">useReducer</span>((<span class="attr">v</span>: number): <span class="function"><span class="params">number</span> =&gt;</span> v + <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">  <span class="keyword">return</span> forceUpdate</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useForceUpdate</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化updater</span></span><br><span class="line"><span class="keyword">const</span> updater = <span class="title function_">useForceUpdate</span>()</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用刷新方法</span></span><br><span class="line"><span class="keyword">const</span> handleRefresh = ():<span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">updater</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleRefresh&#125;</span>&gt;</span>refresh<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>)</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="useClientRect"><a href="#useClientRect" class="headerlink" title="useClientRect"></a>useClientRect</h3><blockquote><p>动态获取元素大小的自定义 hook</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  useRef,</span><br><span class="line">  useState,</span><br><span class="line">  useCallback,</span><br><span class="line">  <span class="title class_">RefObject</span>,</span><br><span class="line">  useLayoutEffect</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> debounce <span class="keyword">from</span> <span class="string">&#x27;lodash/debounce&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">CLIENT_RECT_DEBOUNCE_INTERVAL</span> = <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动态获取元素大小的自定义hook</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> debounceInterval  防抖频率</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> <span class="variable">realtime</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> useClientRect&lt;T <span class="keyword">extends</span> <span class="title class_">HTMLElement</span>&gt;(</span><br><span class="line">  <span class="attr">debounceInterval</span>: number = <span class="variable constant_">CLIENT_RECT_DEBOUNCE_INTERVAL</span>,</span><br><span class="line">  <span class="attr">realtime</span>: boolean = <span class="literal">false</span></span><br><span class="line">): [<span class="title class_">DOMRect</span>, <span class="title class_">RefObject</span>&lt;T&gt;] &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> ref = useRef&lt;T&gt;(<span class="literal">null</span>)</span><br><span class="line">  <span class="comment">// @ts-ignore</span></span><br><span class="line">  <span class="keyword">const</span> [rect, setRect] = useState&lt;<span class="title class_">DOMRect</span>&gt;(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> resize = <span class="title function_">useCallback</span>(</span><br><span class="line">    <span class="title function_">debounce</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (ref.<span class="property">current</span>) &#123;</span><br><span class="line">        <span class="title function_">setRect</span>(ref.<span class="property">current</span>.<span class="title function_">getBoundingClientRect</span>())</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, debounceInterval),</span><br><span class="line">    [ref.<span class="property">current</span>, realtime]</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useLayoutEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ref.<span class="property">current</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">resize</span>()</span><br><span class="line">    <span class="comment">// ResizeObserver 接口可以监听到 Element 的内容区域或 SVGElement的边界框改变</span></span><br><span class="line">    <span class="comment">// 只会在绘制前或布局后触发调用</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">ResizeObserver</span> === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 开始观察指定的 Element或 SVGElement。</span></span><br><span class="line">      <span class="keyword">let</span> resizeObserver = <span class="keyword">new</span> <span class="title class_">ResizeObserver</span>(resize)</span><br><span class="line">      resizeObserver.<span class="title function_">observe</span>(ref.<span class="property">current</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        resizeObserver.<span class="title function_">disconnect</span>()</span><br><span class="line">        <span class="comment">// @ts-ignore</span></span><br><span class="line">        resizeObserver = <span class="literal">null</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resize)</span><br><span class="line">      <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, resize)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [ref.<span class="property">current</span>])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> [rect, ref]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useClientRect</span><br><span class="line"></span><br><span class="line"><span class="comment">// refs: https://github.com/rehooks/component-size/blob/master/index.js</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">// 自动计算元素的getBoundingClientRect值 demo</span></span><br><span class="line"><span class="keyword">const</span> [rect, refBackground] = useClientRect&lt;<span class="title class_">HTMLDivElement</span>&gt;()</span><br><span class="line"></span><br><span class="line"><span class="title function_">useEffect</span>((): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line"> <span class="comment">// 元素数据变化打印</span></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;rect&#x27;</span>,rect)</span><br><span class="line">&#125;, [rect])</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"><span class="keyword">return</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&#123;refBackground&#125;</span> <span class="attr">className</span>=<span class="string">&#123;style.box&#125;</span>&gt;</span> 需要监听的元素 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> hooks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易版react-router</title>
      <link href="/2021/07/22/react-router-dom/"/>
      <url>/2021/07/22/react-router-dom/</url>
      
        <content type="html"><![CDATA[<ul><li><p><a href="#%E5%AD%A6%E4%B9%A0%E7%9B%AE%E6%A0%87">学习目标</a></p></li><li><p><a href="#%E4%BD%BF%E7%94%A8demo">使用 demo</a></p></li><li><p><a href="#react-router%E7%AE%80%E4%BB%8B">react-router 简介</a></p></li><li><p><a href="#%E5%AE%9E%E7%8E%B0">实现</a></p><ul><li><a href="#BrowserRouter">BrowserRouter</a></li><li><a href="#HashRouter">HashRouter</a></li><li><a href="#Router">Router</a></li><li><a href="#Route">Route</a></li><li><a href="#Link">Link</a></li><li><a href="#Switch">Switch</a></li><li><a href="#Redirect">Redirect</a></li><li><a href="#hooks">hooks</a></li><li><a href="#Prompt">Prompt</a></li><li><a href="#WithRouter">WithRouter</a></li><li><a href="#MemoryRouter">MemoryRouter</a></li></ul></li><li><p><a href="#%E5%85%B6%E4%BB%96%E7%BB%84%E4%BB%B6">其他组件</a></p><ul><li><a href="#RouterContext">RouterContext</a></li><li><a href="#LifeCycle">LifeCycle</a></li><li><a href="#matchpath">matchpath</a></li></ul></li></ul><h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><p><a name="学习目标"></a></p><blockquote><p>通过对 react-router 的学习和自己实现其核心功能，更加深度的掌握 react-router 的使用和原理，以达到日常遇到相关问题可以从源码角度快速定位问题并解决问题；(记笔记行为，仅供学习参考，代码解释均在注释里)</p></blockquote><h2 id="react-router-简介"><a href="#react-router-简介" class="headerlink" title="react-router 简介"></a>react-router 简介</h2><p><a name="react-router简介"></a></p><blockquote><p>react-router 包含 3 个库，react-router、react-router-dom 和 react-router-native。react-router 提供 最基本的路由功能，实际使用的时候我们不会直接安装 react-router，而是根据应用运行的环境选择安 装 react-router-dom(在浏览器中使用)或 react-router-native(在 rn 中使用)。react-router-dom 和 react-router-native 都依赖 react-router，所以在安装时，react-router 也会自动安装。</p></blockquote><h2 id="使用-demo"><a href="#使用-demo" class="headerlink" title="使用 demo"></a>使用 demo</h2><p><a name="使用demo"></a></p><blockquote><ol><li>创建<code>HomePage</code>、<code>LoginPage</code>、<code>UserPage</code>、<code>_404Page</code>四个页面；</li><li>然后在 App 页面引入并使用，写一个简单的使用例子；</li></ol></blockquote><p>页面效果如下：<br><img src="/images/react/react-router-blog_2.png" alt="图一 四个跳转，点击跳转相应页面"><br><img src="/images/react/react-router-blog_1.png" alt="图二 测试Prompt，点击‘go home’按钮跳出提示"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; <span class="title class_">Component</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>,</span><br><span class="line">  <span class="title class_">Route</span>,</span><br><span class="line">  <span class="title class_">Link</span>,</span><br><span class="line">  <span class="title class_">Switch</span>,</span><br><span class="line">  useHistory,</span><br><span class="line">  useLocation,</span><br><span class="line">  useRouteMatch,</span><br><span class="line">  useParams,</span><br><span class="line">  withRouter,</span><br><span class="line">  <span class="title class_">Redirect</span>,</span><br><span class="line">  <span class="title class_">Prompt</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;./my-router-dom&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HomePage</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/HomePage&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserPage</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/UserPage&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LoginPage</span> <span class="keyword">from</span> <span class="string">&#x27;./pages/LoginPage&#x27;</span></span><br><span class="line"><span class="keyword">import</span> _404Page <span class="keyword">from</span> <span class="string">&#x27;./pages/_404Page&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/user&quot;</span>&gt;</span>用户中心<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/product/123&quot;</span>&gt;</span>商品<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        &#123;/*Switch 独占路由： 返回第一个匹配的route或者redirect  */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Switch</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;/* children &gt; component &gt; render */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">path</span>=<span class="string">&quot;/&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">exact</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            // <span class="attr">children</span>=<span class="string">&#123;children&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">component</span>=<span class="string">&#123;HomePage&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            // <span class="attr">render</span>=<span class="string">&#123;render&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/user&quot;</span> <span class="attr">exact</span> <span class="attr">component</span>=<span class="string">&#123;UserPage&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">exact</span> <span class="attr">component</span>=<span class="string">&#123;LoginPage&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;/* 动态路由 测试 */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">path</span>=<span class="string">&quot;/product/:id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">component</span>=<span class="string">&#123;Product&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            // <span class="attr">render</span>=<span class="string">&#123;(props)</span> =&gt;</span> <span class="tag">&lt;<span class="name">Product</span> &#123;<span class="attr">...props</span>&#125; /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">          /&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">component</span>=<span class="string">&#123;_404Page&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Switch</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 测试函数组件使用 */</span></span><br><span class="line"><span class="comment">// function Product() &#123;</span></span><br><span class="line"><span class="comment">//   // const histroy= useHistory();</span></span><br><span class="line"><span class="comment">//   // const location= useLocation();</span></span><br><span class="line"><span class="comment">//   const match = useRouteMatch()</span></span><br><span class="line"><span class="comment">//   const &#123; url &#125; = match</span></span><br><span class="line"><span class="comment">//   const &#123; id &#125; = useParams()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   return (</span></span><br><span class="line"><span class="comment">//     &lt;div&gt;</span></span><br><span class="line"><span class="comment">//       &lt;h1&gt;Search-&#123;id&#125;&lt;/h1&gt;</span></span><br><span class="line"><span class="comment">//       &lt;Link to=&#123;url + &#x27;/detail&#x27;&#125;&gt;详情&lt;/Link&gt;</span></span><br><span class="line"><span class="comment">//       &lt;Route path=&#123;url + &#x27;/detail&#x27;&#125; component=&#123;Detail&#125; /&gt;</span></span><br><span class="line"><span class="comment">//     &lt;/div&gt;</span></span><br><span class="line"><span class="comment">//   )</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 测试类组件使用 */</span></span><br><span class="line">@withRouter</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Product</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123; <span class="attr">confirm</span>: <span class="literal">true</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Product&#x27;</span>, <span class="variable language_">this</span>.<span class="property">props</span>) <span class="comment">//sy-log</span></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Product<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span> go home <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/*测试 Prompt message可以传入字符串，也可以传入函数 */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Prompt</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">when</span>=<span class="string">&#123;this.state.confirm&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">message</span>=<span class="string">&quot;那我走?&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          // <span class="attr">message</span>=<span class="string">&#123;(location)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          //   return &quot;你确定要离开页面吗&quot;;</span></span><br><span class="line"><span class="language-xml">          // &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Detail</span>(<span class="params">&#123; match &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>detail<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试route渲染顺序使用</span></span><br><span class="line"><span class="comment">// children  &gt; component &gt; render</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">children</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;children props&#x27;</span>, props) <span class="comment">//sy-log</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>children<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">render</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;render props&#x27;</span>, props) <span class="comment">//sy-log</span></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>render<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><a name="实现"></a></p><h3 id="BrowserRouter"><a href="#BrowserRouter" class="headerlink" title="BrowserRouter"></a>BrowserRouter</h3><p><a name="BrowserRouter"></a></p><blockquote><p><BrowserRouter> 使用 HTML5 提供的 <code>history API</code> ( <code>pushState</code> , <code>replaceState</code> 和 <code>popstate</code> 事件) 来保持 UI 和 URL 的同步。<br><code>react-router</code>使用的是 <a href="https://github.com/ReactTraining/history#readme"><code>history</code></a> 这个库来进行路由的处理，提供了操作路由的<a href="https://github.com/ReactTraining/history/blob/master/docs/api-reference.md">API</a>并帮我们抹平了平台差异，可以很放心的使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createBrowserHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;history&#x27;</span> <span class="comment">// 该库为浏览器抹平平台差异</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;./Router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BrowserRouter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props)</span><br><span class="line">    <span class="comment">// 创建 history</span></span><br><span class="line">    <span class="comment">// 使用什么路由模式在这里控制 然后通过context传个子级</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">history</span> = <span class="title function_">createBrowserHistory</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Router</span> <span class="attr">history</span>=<span class="string">&#123;this.history&#125;</span> <span class="attr">children</span>=<span class="string">&#123;this.props.children&#125;</span> /&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">BrowserRouter</span></span><br></pre></td></tr></table></figure><h3 id="HashRouter"><a href="#HashRouter" class="headerlink" title="HashRouter"></a>HashRouter</h3><p><a name="HashRouter"></a></p><blockquote><p><HashRouter> 使用 URL 的 <code>hash</code> 部分(即 <code>window.location.hash</code> )来保持 UI 和 URL 的同步。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createHashHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;history&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;./Router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BrowserRouter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">history</span> = <span class="title function_">createHashHistory</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Router</span> <span class="attr">history</span>=<span class="string">&#123;this.history&#125;</span> <span class="attr">children</span>=<span class="string">&#123;this.props.children&#125;</span> /&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">BrowserRouter</span></span><br></pre></td></tr></table></figure><h3 id="Router"><a href="#Router" class="headerlink" title="Router"></a>Router</h3><p><a name="Router"></a></p><blockquote><p>Router 组件的作用是将父级的路由模式传给 Switch、Router、Redirect 等子组件，并监听路由变化且刷新页面；</p><ol><li>通过<code>Context</code>进行子父组件数据的传递；</li><li>通过<code>history.listen</code>监听路由，并在组件卸载时取消监听；</li><li><code>location</code>存在<code>state</code>中，利用<code>setState</code>改变值会刷新页面达到重新渲染页面的效果；</li><li><code>match</code>是对<code>location.pathname</code>和<code>Route</code>组件配置的<code>path</code>属性做匹配的结果，<code>Router</code>组件中将<code>match</code>设置默认匹配根目录，页面默认首先渲染根目录匹配的组件；</li><li>其中<code>RouterContext</code>位置在代码在目录 &gt; 其他组件 &gt; RouterContext；</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用什么路由模式 由父级决定 BrowserRouter HashRouter MemoryRouter</span></span><br><span class="line"><span class="comment">// Router 需要做的是拿到父级传来的history 并对路由变化做监听</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Router</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="comment">// 赋一个初始值</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">computeRootMatch</span>(<span class="params">pathname</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">params</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">isExact</span>: pathname === <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;</span><br><span class="line">      <span class="attr">location</span>: props.<span class="property">history</span>.<span class="property">location</span>, <span class="comment">// 记录一下当前的location 为监听location的变化做准备</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听路由的变化，</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">unlisten</span> = props.<span class="property">history</span>.<span class="title function_">listen</span>(<span class="function">(<span class="params">location</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; location &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 组件卸载 关掉监听</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">unlisten</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">RouterContext.Provider</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">value</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">history:</span> <span class="attr">this.props.history</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">location:</span> <span class="attr">this.state.location</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">match:</span> <span class="attr">Router.computeRootMatch</span>(<span class="attr">this.state.location.pathname</span>),</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;this.props.children&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">RouterContext.Provider</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Router</span></span><br></pre></td></tr></table></figure><h3 id="Route"><a href="#Route" class="headerlink" title="Route"></a>Route</h3><p><a name="Route"></a></p><blockquote><ol><li>Route 组件主要作用是对<code>location.pathname</code>和<code>props.path</code>做匹配，如果匹配到就返回<code>match</code>的值，如果没匹配到 match 为 null；</li><li>如果<code>path</code>不存在，则 Router 传下来的<code>context.match</code>作为默认值，这样保证 match 存在才能渲染这个没有<code>path</code>的组件,例如 404 页面；</li><li>Route 组件最重要的是对 children、component、render 三个属性的渲染规则，详细规则写在了代码注释里，请直接看下面的代码；</li><li>其中的<code>matchpath</code>是对location和path做匹配的函数，代码在目录 &gt; 其他组件 &gt; matchpath；</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matchPath <span class="keyword">from</span> <span class="string">&#x27;./matchPath&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Route</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;(context) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          const &#123; location &#125; = context</span></span><br><span class="line"><span class="language-xml">          const &#123; path, children, component, render &#125; = this.props</span></span><br><span class="line"><span class="language-xml">          // 1.路由的匹配</span></span><br><span class="line"><span class="language-xml">          // Public API for matching a URL pathname to a path.</span></span><br><span class="line"><span class="language-xml">          // 404页面没有path 就使用上级传来的默认match</span></span><br><span class="line"><span class="language-xml">          const match = path</span></span><br><span class="line"><span class="language-xml">            ? matchPath(location.pathname, this.props)</span></span><br><span class="line"><span class="language-xml">            : context.match</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          // 传给组件的props router-dom 把history、location等路由的数据传给组件</span></span><br><span class="line"><span class="language-xml">          const props = &#123;</span></span><br><span class="line"><span class="language-xml">            ...context,</span></span><br><span class="line"><span class="language-xml">            location,</span></span><br><span class="line"><span class="language-xml">            match,</span></span><br><span class="line"><span class="language-xml">          &#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          console.log(&#x27;match&#x27;, match)</span></span><br><span class="line"><span class="language-xml">          // 组件的严格匹配</span></span><br><span class="line"><span class="language-xml">          // return match? React.createElement(component) :null</span></span><br><span class="line"><span class="language-xml">          // match children &gt; component &gt; render &gt; null</span></span><br><span class="line"><span class="language-xml">          // no match : children(function) &gt; null</span></span><br><span class="line"><span class="language-xml">          // 详细解析: 1. 先判断match是否存在（存在则找到了路由对应的组件），</span></span><br><span class="line"><span class="language-xml">          // 2. 存在的话查找children属性是否存在，如果存在：判断children的类型是否是函数形式，如果是函数形式需要把props传给children，不是函数形式直接渲染children</span></span><br><span class="line"><span class="language-xml">          // 3. children不存在：继续找component属性是否存在，component存在就直接通过React.createElement创建组件；</span></span><br><span class="line"><span class="language-xml">          // 4. component不存在：查找render属性存不存在，render属性存在就执行render函数并将props传给render，render不存在就直接返回为空；</span></span><br><span class="line"><span class="language-xml">          // 5. match如果不存在，渲染函数子组件</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          // 由于context的取值规则是 取到最近一层的provide传进来的值</span></span><br><span class="line"><span class="language-xml">          // 这里再包一层 &lt;RouterContext.Provider是为了写hook useRouteMatch的时候，route可以拿到当前匹配的match传给组件，不传这一层，组件拿到的match就会是最顶级router(browserRouter/hashRouter)传来的默认match</span></span><br><span class="line"><span class="language-xml">          return (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">RouterContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;props&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;match</span></span><br><span class="line"><span class="language-xml">                ? children</span></span><br><span class="line"><span class="language-xml">                  ? typeof children === &#x27;function&#x27;</span></span><br><span class="line"><span class="language-xml">                    ? children(props)</span></span><br><span class="line"><span class="language-xml">                    : children</span></span><br><span class="line"><span class="language-xml">                  : component</span></span><br><span class="line"><span class="language-xml">                  ? React.createElement(component, props)</span></span><br><span class="line"><span class="language-xml">                  : render</span></span><br><span class="line"><span class="language-xml">                  ? render(props)</span></span><br><span class="line"><span class="language-xml">                  : null</span></span><br><span class="line"><span class="language-xml">                : typeof children === &#x27;function&#x27;</span></span><br><span class="line"><span class="language-xml">                ? children(props)</span></span><br><span class="line"><span class="language-xml">                : null&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">RouterContext.Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          )</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    )</span></span><br><span class="line"><span class="language-xml">  &#125;</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">export default Route</span></span><br></pre></td></tr></table></figure><h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p><a name="Link"></a></p><p>Link.js: 跳转链接，处理点击事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useContext &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Link 本质就是a标签</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Link</span>(<span class="params">&#123; to, children , ...rest&#125;</span>) &#123;</span><br><span class="line">  <span class="comment">// 拿到父级传来的 history</span></span><br><span class="line">  <span class="keyword">const</span> context = <span class="title function_">useContext</span>(<span class="title class_">RouterContext</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleClick</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line">    <span class="comment">// 更换路由</span></span><br><span class="line">    context.<span class="property">history</span>.<span class="title function_">push</span>(to)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#123;to&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleClick&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Link</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Switch"><a href="#Switch" class="headerlink" title="Switch"></a>Switch</h3><p><a name="Switch"></a></p><blockquote><ol><li>Switch组件的主要作用是独占路由，保证当前页面只渲染 match 匹配的一个组件；</li><li>不加Switch组件，Route组件的 <code>children</code> 属性渲染层级比较高，则都会被渲染；</li><li>Switch中对子组件进行循环匹配，如果找到match则通过<code>React.cloneElement</code>渲染对应组件，没有匹配就渲染404页面（假设Route配置了404页面）；</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext&#x27;</span></span><br><span class="line"><span class="keyword">import</span> matchpath <span class="keyword">from</span> <span class="string">&#x27;./matchPath&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * switch独占路由，返回第一个匹配的route或者redirect</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Switch</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;(context) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          const location = context.location</span></span><br><span class="line"><span class="language-xml">          // 记录是否匹配</span></span><br><span class="line"><span class="language-xml">          let match</span></span><br><span class="line"><span class="language-xml">          // 记录匹配的元素(route/redirect)</span></span><br><span class="line"><span class="language-xml">          let element</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          // 利用 React.Children 对switch的子组件route们遍历</span></span><br><span class="line"><span class="language-xml">          React.Children.forEach(this.props.children, (child) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">            // match为 null 证明还没匹配上，且child是有效的元素</span></span><br><span class="line"><span class="language-xml">            if (match == null &amp;&amp; React.isValidElement(child)) &#123;</span></span><br><span class="line"><span class="language-xml">              // 缓存组件</span></span><br><span class="line"><span class="language-xml">              element = child</span></span><br><span class="line"><span class="language-xml">              // 判断route是否存在path 如果存在就拿到path去和当前location的path做对比，不存在就使用祖传的默认match</span></span><br><span class="line"><span class="language-xml">              match = child.props.path</span></span><br><span class="line"><span class="language-xml">                ? matchpath(location.pathname, child.props)</span></span><br><span class="line"><span class="language-xml">                : context.match</span></span><br><span class="line"><span class="language-xml">            &#125;</span></span><br><span class="line"><span class="language-xml">          &#125;)</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          return match</span></span><br><span class="line"><span class="language-xml">            ? React.cloneElement(element, &#123; computedMatch: match &#125;)</span></span><br><span class="line"><span class="language-xml">            : null</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Switch</span></span><br></pre></td></tr></table></figure><h3 id="Redirect"><a href="#Redirect" class="headerlink" title="Redirect"></a>Redirect</h3><p><a name="Redirect"></a></p><blockquote><p>Redirect组件作用是对路由进行重定向</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LifeCycle</span> <span class="keyword">from</span> <span class="string">&#x27;./LifeCycle&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Redirect</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;(context) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          const &#123; history &#125; = context</span></span><br><span class="line"><span class="language-xml">          const &#123; to, push = false &#125; = this.props</span></span><br><span class="line"><span class="language-xml">          return (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">LifeCycle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onMount</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                push ? history.push(to) : history.replace(to)</span></span><br><span class="line"><span class="language-xml">              &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            /&gt;</span></span><br><span class="line"><span class="language-xml">          )</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Redirect</span></span><br></pre></td></tr></table></figure><h3 id="hooks"><a href="#hooks" class="headerlink" title="hooks"></a>hooks</h3><p><a name="hooks"></a></p><blockquote><p>hooks组件主要作用是给函数组件提供路由hook，确保在函数组中可以使用路由的history、location等一众属性和方法；</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useContext &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useHistory</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 拿到Route组件Provider的props</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">useContext</span>(<span class="title class_">RouterContext</span>).<span class="property">history</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useLocation</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">useContext</span>(<span class="title class_">RouterContext</span>).<span class="property">location</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useRouteMatch</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">useContext</span>(<span class="title class_">RouterContext</span>).<span class="property">match</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useParams</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> match = <span class="title function_">useContext</span>(<span class="title class_">RouterContext</span>).<span class="property">match</span></span><br><span class="line">  <span class="keyword">return</span> match ? match.<span class="property">params</span> : <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Prompt"><a href="#Prompt" class="headerlink" title="Prompt"></a>Prompt</h3><p><a name="Prompt"></a></p><blockquote><p>Prompt组件主要作用是对路由离开之前进行提示；<br>例如：用户在信息填写页填写了一大堆东西且未保存，然后一不小心点击到返回按钮，这个时候需要提示用户是否离开，否则直接离开数据也没了，用户会直接崩溃~😂</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LifeCycle</span> <span class="keyword">from</span> <span class="string">&#x27;./LifeCycle&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Prompt</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;(context) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          const &#123; message, when = true &#125; = this.props</span></span><br><span class="line"><span class="language-xml">          if (!when) return null</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          // 利用history库的 block 在离开页面的时候做拦截</span></span><br><span class="line"><span class="language-xml">          const method = context.history.block</span></span><br><span class="line"><span class="language-xml">          // const</span></span><br><span class="line"><span class="language-xml">          return (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">LifeCycle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onMount</span>=<span class="string">&#123;(self)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                // 组件挂载的时候把  method 存在 release上</span></span><br><span class="line"><span class="language-xml">                self.release = method(message)</span></span><br><span class="line"><span class="language-xml">              &#125;&#125;</span></span><br><span class="line"><span class="language-xml">              onUpdate=&#123;(self, prevProps) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">                if (prevProps.message !== message) &#123;</span></span><br><span class="line"><span class="language-xml">                  self.release()</span></span><br><span class="line"><span class="language-xml">                  self.release = method(message)</span></span><br><span class="line"><span class="language-xml">                &#125;</span></span><br><span class="line"><span class="language-xml">              &#125;&#125;</span></span><br><span class="line"><span class="language-xml">              onUnmount=&#123;(self) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">                self.release()</span></span><br><span class="line"><span class="language-xml">              &#125;&#125;</span></span><br><span class="line"><span class="language-xml">              message=&#123;message&#125;</span></span><br><span class="line"><span class="language-xml">            /&gt;</span></span><br><span class="line"><span class="language-xml">          )</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Prompt</span></span><br></pre></td></tr></table></figure><h3 id="WithRouter"><a href="#WithRouter" class="headerlink" title="WithRouter"></a>WithRouter</h3><p><a name="WithRouter"></a></p><blockquote><p>withRouter本身是一个hoc高级组件,为类组件提供history的方法；</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">RouterContext</span> <span class="keyword">from</span> <span class="string">&#x27;./RouterContext&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * withrouter本身就是一个hoc高阶组件，高阶组件接收一个组件，返回一个组件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">withRouter</span> = (<span class="params">WrapperComponent</span>) =&gt; <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 类组件通过withRouter把 router 的api传给组件</span></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;(context) =&gt; <span class="tag">&lt;<span class="name">WrapperComponent</span> &#123;<span class="attr">...props</span>&#125; &#123;<span class="attr">...context</span>&#125; /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">RouterContext.Consumer</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> withRouter</span><br></pre></td></tr></table></figure><h3 id="MemoryRouter"><a href="#MemoryRouter" class="headerlink" title="MemoryRouter"></a>MemoryRouter</h3><p><a name="MemoryRouter"></a></p><blockquote><p><code>MemoryRouter</code>直接拷贝的 react-router 源码,<code> MemoryRouter</code>一般写<code>native</code>会用到，<code>web</code>的话常用<code>BrowserRouter</code>和<code>HashRouter</code>;</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&#x27;prop-types&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createMemoryHistory <span class="keyword">as</span> createHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;history&#x27;</span></span><br><span class="line"><span class="keyword">import</span> warning <span class="keyword">from</span> <span class="string">&#x27;tiny-warning&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;./Router.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The public API for a &lt;Router&gt; that stores location in memory.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MemoryRouter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  history = <span class="title function_">createHistory</span>(<span class="variable language_">this</span>.<span class="property">props</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Router</span> <span class="attr">history</span>=<span class="string">&#123;this.history&#125;</span> <span class="attr">children</span>=<span class="string">&#123;this.props.children&#125;</span> /&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (__DEV__) &#123;</span><br><span class="line">  <span class="title class_">MemoryRouter</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">    <span class="attr">initialEntries</span>: <span class="title class_">PropTypes</span>.<span class="property">array</span>,</span><br><span class="line">    <span class="attr">initialIndex</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">    <span class="attr">getUserConfirmation</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>,</span><br><span class="line">    <span class="attr">keyLength</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">    <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">node</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">MemoryRouter</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">componentDidMount</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">warning</span>(</span><br><span class="line">      !<span class="variable language_">this</span>.<span class="property">props</span>.<span class="property">history</span>,</span><br><span class="line">      <span class="string">&#x27;&lt;MemoryRouter&gt; ignores the history prop. To use a custom history, &#x27;</span> +</span><br><span class="line">        <span class="string">&#x27;use `import &#123; Router &#125;` instead of `import &#123; MemoryRouter as Router &#125;`.&#x27;</span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MemoryRouter</span></span><br></pre></td></tr></table></figure><h2 id="其他组件"><a href="#其他组件" class="headerlink" title="其他组件"></a>其他组件</h2><p><a name="其他组件"></a></p><h3 id="RouterContext"><a href="#RouterContext" class="headerlink" title="RouterContext"></a>RouterContext</h3><p><a name="RouterContext"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 为router传递数据</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">RouterContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">RouterContext</span></span><br></pre></td></tr></table></figure><h3 id="LifeCycle"><a href="#LifeCycle" class="headerlink" title="LifeCycle"></a>LifeCycle</h3><p><a name="LifeCycle"></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * LifeCycle就做一件事，在组件生命周期里do something</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LifeCycle</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">componentWillMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">props</span>.<span class="property">onMount</span>) <span class="variable language_">this</span>.<span class="property">props</span>.<span class="property">onMount</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">componentWillUpdate</span>(<span class="params">prevProps</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">props</span>.<span class="property">onUpdate</span>) <span class="variable language_">this</span>.<span class="property">props</span>.<span class="property">onUpdate</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>, prevProps)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">props</span>.<span class="property">onUnmount</span>) <span class="variable language_">this</span>.<span class="property">props</span>.<span class="property">onUnmount</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">LifeCycle</span></span><br></pre></td></tr></table></figure><h3 id="matchpath"><a href="#matchpath" class="headerlink" title="matchpath"></a>matchpath</h3><p><a name="matchpath"></a></p><blockquote><p><code>path-to-regexp</code>这个库真的蛮好用的，<a href="https://github.com/pillarjs/path-to-regexp">github</a>、<a href="http://forbeslindesay.github.io/express-route-tester/">Express Route Tester</a>；</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pathToRegexp <span class="keyword">from</span> <span class="string">&#x27;path-to-regexp&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cache = &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> cacheLimit = <span class="number">10000</span></span><br><span class="line"><span class="keyword">let</span> cacheCount = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compilePath</span>(<span class="params">path, options</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> cacheKey = <span class="string">`<span class="subst">$&#123;options.end&#125;</span><span class="subst">$&#123;options.strict&#125;</span><span class="subst">$&#123;options.sensitive&#125;</span>`</span></span><br><span class="line">  <span class="keyword">const</span> pathCache = cache[cacheKey] || (cache[cacheKey] = &#123;&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pathCache[path]) <span class="keyword">return</span> pathCache[path]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> keys = []</span><br><span class="line">  <span class="keyword">const</span> regexp = <span class="title function_">pathToRegexp</span>(path, keys, options)</span><br><span class="line">  <span class="keyword">const</span> result = &#123; regexp, keys &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (cacheCount &lt; cacheLimit) &#123;</span><br><span class="line">    pathCache[path] = result</span><br><span class="line">    cacheCount++</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Public API for matching a URL pathname to a path.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">matchPath</span>(<span class="params">pathname, options = &#123;&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> options === <span class="string">&#x27;string&#x27;</span> || <span class="title class_">Array</span>.<span class="title function_">isArray</span>(options)) &#123;</span><br><span class="line">    options = &#123; <span class="attr">path</span>: options &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// exact精确匹配  strict严格匹配  sensitive区分大小写</span></span><br><span class="line">  <span class="keyword">const</span> &#123; path, exact = <span class="literal">false</span>, strict = <span class="literal">false</span>, sensitive = <span class="literal">false</span> &#125; = options</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> paths = [].<span class="title function_">concat</span>(path)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> paths.<span class="title function_">reduce</span>(<span class="function">(<span class="params">matched, path</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!path &amp;&amp; path !== <span class="string">&#x27;&#x27;</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    <span class="keyword">if</span> (matched) <span class="keyword">return</span> matched</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; regexp, keys &#125; = <span class="title function_">compilePath</span>(path, &#123;</span><br><span class="line">      <span class="attr">end</span>: exact,</span><br><span class="line">      strict,</span><br><span class="line">      sensitive,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> match = regexp.<span class="title function_">exec</span>(pathname)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!match) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> [url, ...values] = match</span><br><span class="line">    <span class="keyword">const</span> isExact = pathname === url</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (exact &amp;&amp; !isExact) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      path, <span class="comment">// the path used to match</span></span><br><span class="line">      <span class="attr">url</span>: path === <span class="string">&#x27;/&#x27;</span> &amp;&amp; url === <span class="string">&#x27;&#x27;</span> ? <span class="string">&#x27;/&#x27;</span> : url, <span class="comment">// the matched portion of the URL</span></span><br><span class="line">      isExact, <span class="comment">// whether or not we matched exactly</span></span><br><span class="line">      <span class="attr">params</span>: keys.<span class="title function_">reduce</span>(<span class="function">(<span class="params">memo, key, index</span>) =&gt;</span> &#123;</span><br><span class="line">        memo[key.<span class="property">name</span>] = values[index]</span><br><span class="line">        <span class="keyword">return</span> memo</span><br><span class="line">      &#125;, &#123;&#125;),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="literal">null</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> matchPath</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-router </tag>
            
            <tag> react-router-dom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现redux-thunk、redux-promise、redux-logger</title>
      <link href="/2021/07/13/redux/"/>
      <url>/2021/07/13/redux/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> 众所周知，redux只单纯的提供数据流的管理，action也只接受<code>plain object</code>类型，那么如果我们需要在<code>action</code>中写异步就需要借助其他中间件;<br> 学习的时候简陋的实现了一下<code>redux-thunk</code>、<code>redux-promise</code>、<code>redux-logger</code>， 特此记录（记笔记行为，仅供学习参考）。</p><h3 id="redux-thunk"><a href="#redux-thunk" class="headerlink" title="redux-thunk"></a>redux-thunk</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现redux-thunk</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">thunk</span>(<span class="params">&#123; getState, dispatch &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">next</span>) =&gt;</span> <span class="function">(<span class="params">action</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> action === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">action</span>(dispatch, getState)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">next</span>(action)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="redux-promise"><a href="#redux-promise" class="headerlink" title="redux-promise"></a>redux-promise</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> isPromise <span class="keyword">from</span> <span class="string">&#x27;is-promise&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现 redux-promise</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">promise</span>(<span class="params">&#123; getState, dispatch &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">next</span>) =&gt;</span> <span class="function">(<span class="params">action</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">isPromise</span>(action) ? action.<span class="title function_">then</span>(dispatch) : <span class="title function_">next</span>(action)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="redux-logger"><a href="#redux-logger" class="headerlink" title="redux-logger"></a>redux-logger</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现 redux-logger</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125;  </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">logger</span>(<span class="params">&#123; getState, dispatch &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">next</span>) =&gt;</span> <span class="function">(<span class="params">action</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">group</span>(<span class="string">&#x27;reducer&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> prevState = <span class="title function_">getState</span>()</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%cprev state&#x27;</span>, <span class="string">&#x27;color:green&#x27;</span>, prevState)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%caction&#x27;</span>, <span class="string">&#x27;color:blue&#x27;</span>, action)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> returnValue = <span class="title function_">next</span>(action)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> nextState = <span class="title function_">getState</span>()</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;%cnext state&#x27;</span>, <span class="string">&#x27;color:green&#x27;</span>, nextState)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">groupEnd</span>(<span class="string">&#x27;reducer&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> returnValue</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录create-react-app搭建项目</title>
      <link href="/2021/07/09/create-react-app/"/>
      <url>/2021/07/09/create-react-app/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>记录一次通过 create-react-app 搭建一个 react 项目的过程，坑一个接着一个~</p><h3 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1. 创建项目"></a>1. 创建项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app my-app --typescript</span><br></pre></td></tr></table></figure><h3 id="2-扩展-webpack-配置"><a href="#2-扩展-webpack-配置" class="headerlink" title="2. 扩展 webpack 配置"></a>2. 扩展 webpack 配置</h3><p>需要用到 <a href="https://github.com/timarney/react-app-rewired"><code>react-app-rewired</code></a> <a href="https://github.com/arackaf/customize-cra/blob/master/api.md"><code>customize-cra</code></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-app-rewired customize-cra -D</span><br></pre></td></tr></table></figure><h4 id="配置支持装饰器、别名、postcss"><a href="#配置支持装饰器、别名、postcss" class="headerlink" title="配置支持装饰器、别名、postcss"></a>配置支持装饰器、别名、postcss</h4><p>根目录下新建一个<code>config-overrides.js</code>文件，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* config-overrides.js */</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  override,</span><br><span class="line">  addDecoratorsLegacy,</span><br><span class="line">  addWebpackAlias,</span><br><span class="line">  addPostcssPlugins,</span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;customize-cra&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;.&#x27;</span>, dir)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">override</span>(</span><br><span class="line">  <span class="comment">// 装饰器</span></span><br><span class="line">  <span class="title function_">addDecoratorsLegacy</span>(),</span><br><span class="line">  <span class="comment">// Alias</span></span><br><span class="line">  <span class="title function_">addWebpackAlias</span>(&#123;</span><br><span class="line">    <span class="string">&#x27;@&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@comps&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/components&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@style&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/style&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@images&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/images&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@pages&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/pages&#x27;</span>),</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="comment">// postcss</span></span><br><span class="line">  <span class="title function_">addPostcssPlugins</span>([</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;postcss-px2rem&#x27;</span>)(&#123; <span class="attr">remUnit</span>: <span class="number">37.5</span> &#125;),</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;autoprefixer&#x27;</span>), <span class="comment">// css 自动加前缀</span></span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&#x27;postcss-autoreset&#x27;</span>)(&#123;</span><br><span class="line">      <span class="comment">// 重置浏览器默认样式</span></span><br><span class="line">      <span class="attr">reset</span>: &#123;</span><br><span class="line">        <span class="attr">margin</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">padding</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">borderRadius</span>: <span class="number">0</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">  ])</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="3-配置-api-代理"><a href="#3-配置-api-代理" class="headerlink" title="3. 配置 api 代理"></a>3. 配置 api 代理</h3><p>使用<a href="https://github.com/chimurai/http-proxy-middleware"><code>http-proxy-middleware</code></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add http-proxy-middleware -D</span><br></pre></td></tr></table></figure><p>src 目录下新建一个<code>setupProxy.js</code>文件，名字只能叫这个，http-proxy-middleware 读配置只会从<code>src/setupProxy.js</code>这个地址去读</p><p>此处有坑，按照官网的配置会报错，心累；下面代码，亲测有效</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; createProxyMiddleware &#125; = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy-middleware&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">app</span>) &#123;</span><br><span class="line">  app.<span class="title function_">use</span>(</span><br><span class="line">    <span class="title function_">createProxyMiddleware</span>(<span class="string">&#x27;/api&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">target</span>: <span class="string">&#x27;http://xxx.xxx.xxx.xxx:xxxx/api&#x27;</span>,</span><br><span class="line">      <span class="attr">ws</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-配置-typescript"><a href="#4-配置-typescript" class="headerlink" title="4. 配置 typescript"></a>4. 配置 typescript</h3><p>此处也有坑，每次项目重启<code>tsconfig.json</code>会被重置，配置的东西就会丢失！坑啊~<br>解决办法：新建一个<code>tsconfig.path.json</code>文件，把多余的配置写在这里，然后在<code>tsconfig.json</code>里面通过<code>extends</code>的方法导入，这样就不会被清除掉；</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./tsconfig.path.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/*&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;@pages/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/pages/*&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;@style/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/assets/style/*&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;@comps/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/components/*&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;@asstes/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/asstes/*&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-配置路由"><a href="#5-配置路由" class="headerlink" title="5. 配置路由"></a>5. 配置路由</h3><h4 id="1-全局路由"><a href="#1-全局路由" class="headerlink" title="1) 全局路由"></a>1) 全局路由</h4><p>注： 此处有一个小知识点</p><blockquote><ol><li> Route 渲染组件有三个属性: <code>component</code>、<code>render</code>、<code>children</code>, 渲染优先级为<code>children</code> &gt; <code>component</code> &gt; <code>render</code>,</li><li> 只要有<code>children</code>就会优先渲染子组件，<code>component</code>组件是传入一个组件，底层会通过<code>React.createElement</code>的方法去创建组件，如果写成函数形式，则每次渲染都会重新渲染组件经历新组件的创建和废弃组件的卸载，而不是对组件的更新；</li><li> <code>render</code>传入一个函数，可以更灵活的控制组件的渲染。</li></ol></blockquote><p>使用 <code>react-router-dom</code>包；直接上代码吧~</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>,</span><br><span class="line">  <span class="title class_">Route</span>,</span><br><span class="line">  <span class="title class_">Switch</span>,</span><br><span class="line">  <span class="title class_">Redirect</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotFound</span> <span class="keyword">from</span> <span class="string">&#x27;@pages/noFound/noFound&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@pages/home/home&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">User</span> <span class="keyword">from</span> <span class="string">&#x27;@pages/user/user&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Loading</span> <span class="keyword">from</span> <span class="string">&#x27;@comps/loading&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Suspense</span> &#125; = <span class="title class_">React</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">RenderRouter</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Suspense</span> <span class="attr">fallback</span>=<span class="string">&#123;</span>&lt;<span class="attr">Loading</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Switch</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Redirect</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">exact</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Redirect</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">path</span>=<span class="string">&quot;/home&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">exact</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">component</span>=<span class="string">&#123;Home&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            // <span class="attr">render</span>=<span class="string">&#123;(props)</span>=&gt;</span>(<span class="tag">&lt;<span class="name">div</span>&gt;</span>这是内联组件<span class="tag">&lt;/<span class="name">div</span>&gt;</span>)&#125;</span></span><br><span class="line"><span class="language-xml">            // children=&#123;(props)=&gt;<span class="tag">&lt;<span class="name">NotFound</span>/&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">          &gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/user&quot;</span> <span class="attr">exact</span> <span class="attr">component</span>=<span class="string">&#123;User&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">component</span>=<span class="string">&#123;NotFound&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Switch</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">RenderRouter</span></span><br></pre></td></tr></table></figure><h4 id="2）在页面中使用"><a href="#2）在页面中使用" class="headerlink" title="2）在页面中使用"></a>2）在页面中使用</h4><blockquote><p>在页面上使用<code>useHistory</code>、<code>useLocation</code>、<code>useRouteMatch</code> 等hook可以进行路由跳转、拿到当前路由信息、传参等操作</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> history = <span class="title function_">useHistory</span>()</span><br><span class="line"><span class="keyword">const</span> location = <span class="title function_">useLocation</span>()</span><br><span class="line"></span><br><span class="line"><span class="title function_">useEffect</span>((): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// history信息</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(history) </span><br><span class="line">  <span class="comment">// 当前路由信息</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(location) </span><br><span class="line">&#125;, [])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleToUser = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 路由跳转</span></span><br><span class="line">  history.<span class="title function_">push</span>(<span class="string">&#x27;user&#x27;</span>) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleBack = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 返回上一页</span></span><br><span class="line">  history.<span class="title function_">goBack</span>() </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleSetState = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 路由传参 方式一 </span></span><br><span class="line">  history.<span class="title function_">push</span>(&#123; <span class="attr">pathname</span>: <span class="string">&#x27;/user&#x27;</span>, <span class="attr">state</span>: &#123; <span class="attr">test</span>: <span class="string">&#x27;aaa&#x27;</span> &#125; &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleSetMatch = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 路由传参 方式二 这种需要配合 Route组件的配置  </span></span><br><span class="line">  <span class="comment">// &lt;Route path=&quot;/user/:id&quot; render=&#123;(props:IRouterProps):ReactElement =&gt; &lt;User &#123;...props&#125; /&gt;&#125; &gt;&lt;/Route&gt;</span></span><br><span class="line">  history.<span class="title function_">push</span>(<span class="string">&#x27;/user/666&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>user页面 拿到传参</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect, <span class="title class_">ReactElement</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useRouteMatch, useLocation&#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span></span><br><span class="line"><span class="keyword">import</span> style <span class="keyword">from</span> <span class="string">&#x27;@style/modules/user.module.scss&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IRouterProps</span>&gt; = (<span class="attr">props</span>: <span class="title class_">IRouterProps</span>): <span class="function"><span class="params">ReactElement</span> =&gt;</span> &#123;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">// 传参方式一 从location身上取参数</span></span><br><span class="line">  <span class="comment">// const location:ILocationProps = useLocation()</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 传参方式二 利用useRouteMatch 取餐</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">match</span>:<span class="title class_">IMatchProps</span> | <span class="literal">null</span> = <span class="title function_">useRouteMatch</span>(<span class="string">&#x27;/user/:id&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>((): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// console.log(location?.state?.id)</span></span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(match?.<span class="property">params</span>?.<span class="property">id</span>)</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">className</span>=<span class="string">&#123;style.home&#125;</span>&gt;</span>User<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">User</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-配置-sass"><a href="#6-配置-sass" class="headerlink" title="6. 配置 sass"></a>6. 配置 sass</h3><ol><li>安装<code>node-sass</code>；这里可能会存在版本问题，如遇报错回退一下<code>node-sass</code>版本就 ok；</li><li>把 css 文件后缀改为 scss 就可以开始开发了；</li></ol><h3 id="7-配置-axios"><a href="#7-配置-axios" class="headerlink" title="7. 配置 axios"></a>7. 配置 axios</h3><ol><li>安装<code>axios</code>包；</li><li>配置拦截器;</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">REQUEST</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/assets/constant&#x27;</span></span><br><span class="line"></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">timeout</span> = <span class="number">500000</span></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&#x27;http://localhost:3000/api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求拦截</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 根据项目 请求前设置token等</span></span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 响应拦截</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 根据项目 数据处理，全局接口错误处理</span></span><br><span class="line">    <span class="comment">// 成功</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">status</span> === <span class="variable constant_">REQUEST</span>.<span class="property">SUCCESS_CODE</span>) &#123;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 失败</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> axios</span><br></pre></td></tr></table></figure><ol start="3"><li>新建<code>api.js</code> 统一管理请求;</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;./index&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> apiTest = <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> axios.<span class="title function_">post</span>(<span class="string">&#x27;/test&#x27;</span>, data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>页面上使用；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect, useState, useCallback, <span class="title class_">ReactElement</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> style <span class="keyword">from</span> <span class="string">&#x27;@style/modules/home.module.scss&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; apiTest &#125; <span class="keyword">from</span> <span class="string">&#x27;@/assets/http/api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Home</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;<span class="title class_">IRouterProps</span>&gt; = (<span class="attr">props</span>: <span class="title class_">IRouterProps</span>): <span class="function"><span class="params">ReactElement</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [user, setUser] = <span class="title function_">useState</span>(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>((): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 请求测试</span></span><br><span class="line">    <span class="title function_">apiTest</span>(&#123; <span class="attr">appointNo</span>: <span class="string">&#x27;XXX&#x27;</span> &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">      <span class="title function_">setUser</span>(res.<span class="property">result</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&#123;style.home&#125;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;JSON.stringify(user)&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Home</span></span><br></pre></td></tr></table></figure><h3 id="8-项目数据流管理库"><a href="#8-项目数据流管理库" class="headerlink" title="8. 项目数据流管理库"></a>8. 项目数据流管理库</h3><p>当前项目是 redux，小项目的话此项是可选的；</p><ol><li>安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add redux react-redux redux-thunk redux-promise redux-logger</span><br></pre></td></tr></table></figure><ol start="2"><li>新建<code>src/store/index.js</code>、<code>src/store/home.store.ts</code></li></ol><p><code>src/store/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware, combineReducers &#125; <span class="keyword">from</span> <span class="string">&#x27;redux&#x27;</span></span><br><span class="line"><span class="keyword">import</span> thunk <span class="keyword">from</span> <span class="string">&#x27;redux-thunk&#x27;</span> <span class="comment">// 处理action异步</span></span><br><span class="line"><span class="keyword">import</span> promise <span class="keyword">from</span> <span class="string">&#x27;redux-promise&#x27;</span> <span class="comment">// 处理action promise风格</span></span><br><span class="line"><span class="keyword">import</span> logger <span class="keyword">from</span> <span class="string">&#x27;redux-logger&#x27;</span> <span class="comment">// 打印log</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; countReducer, userReducer &#125; <span class="keyword">from</span> <span class="string">&#x27;./home.store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(</span><br><span class="line">  <span class="title function_">combineReducers</span>(&#123; <span class="attr">count</span>: countReducer, <span class="attr">user</span>: userReducer &#125;),</span><br><span class="line">  <span class="title function_">applyMiddleware</span>(thunk, promise, logger)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><p><code>src/store/home.store.ts</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; actionType, objType &#125; <span class="keyword">from</span> <span class="string">&#x27;@/@types/global&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; apiTest &#125; <span class="keyword">from</span> <span class="string">&#x27;@/assets/http/api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">countReducer</span> = (<span class="params">state = <span class="number">0</span>, action: IActionProps</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.<span class="property">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;ADD&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> state + (action.<span class="property">payload</span> || <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;MINUS&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> state - (action.<span class="property">payload</span> || <span class="number">1</span>)</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userReducer</span> = (<span class="params">state = <span class="literal">null</span>, action: IActionProps</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.<span class="property">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;SET&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, state, action.<span class="property">payload</span>)</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在页面中使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useSelector, useDispatch &#125; <span class="keyword">from</span> <span class="string">&#x27;react-redux&#x27;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> countRedux = <span class="title function_">useSelector</span>(<span class="function">(<span class="params">state: IObjectProps</span>) =&gt;</span> state.<span class="property">count</span>)</span><br><span class="line"><span class="keyword">const</span> userRedux = <span class="title function_">useSelector</span>(<span class="function">(<span class="params">state: IObjectProps</span>) =&gt;</span> state.<span class="property">user</span>)</span><br><span class="line"><span class="keyword">const</span> dispatch = <span class="title function_">useDispatch</span>()</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 异步action</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">const</span> asyncAction = ():<span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">dispatch</span>(<span class="function">(<span class="params">dispatch: any, getState: any</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 测试api</span></span><br><span class="line">    <span class="title function_">apiTest</span>(&#123;<span class="attr">appointNo</span>: <span class="string">&#x27;XXXX&#x27;</span>&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res: IObjectProps</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// console.log(res)</span></span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">success</span> == <span class="string">&#x27;t&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 修改store中的数据</span></span><br><span class="line">        <span class="title function_">dispatch</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;SET&#x27;</span>, <span class="attr">payload</span>: res.<span class="property">result</span> &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&#123;style.home&#125;</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;countRedux&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123; dispatch(&#123; type: &#x27;ADD&#x27;, payload: 100 &#125;) &#125;&#125;&gt; ADD <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> &#123; dispatch(&#123; type: &#x27;MINUS&#x27;, payload: 5 &#125;) &#125;&#125;&gt; MINUS <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;asyncAction&#125;</span>&gt;</span>USER<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;JSON.stringify(userRedux)&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>以上就是本次项目搭建的基本流程，文章里只记录项目搭建的最简实现确保项目运行正常，更多需求请根据项目实际需要进行另行配置，如修改 router 模式、router 权限控制、封装全局样式、全局组件、全局 utils、全局 api 拦截处理、项目性能优化等… 需要源代码请留言。</p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> create-react-app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目中使用svg</title>
      <link href="/2021/06/10/vue-svg/"/>
      <url>/2021/06/10/vue-svg/</url>
      
        <content type="html"><![CDATA[<h3 id="先看使用"><a href="#先看使用" class="headerlink" title="先看使用"></a>先看使用</h3><p>在vue组件中的template里</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg-icon</span> <span class="attr">:icon-class</span>=<span class="string">&quot;icon-name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">svg-icon</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="SvgIcon-vue"><a href="#SvgIcon-vue" class="headerlink" title="SvgIcon.vue"></a>SvgIcon.vue</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">svg</span> <span class="attr">:class</span>=<span class="string">&quot;svgClass&quot;</span> <span class="attr">v-on</span>=<span class="string">&quot;$listeners&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">use</span> <span class="attr">:xlink:href</span>=<span class="string">&quot;iconName&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;SvgIcon&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">props</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">iconClass</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">required</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">className</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">default</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">iconName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="string">`#icon-<span class="subst">$&#123;<span class="variable language_">this</span>.iconClass&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">svgClass</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">className</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="string">&#x27;svg-icon&#x27;</span> + <span class="variable language_">this</span>.<span class="property">className</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="string">&#x27;svg-icon&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.svg-icon</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">1em</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">1em</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">vertical-align</span>: -<span class="number">0.15em</span>;</span></span><br><span class="line"><span class="language-css">  fill: currentColor;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="加载svg文件-注册成自定义组件"><a href="#加载svg文件-注册成自定义组件" class="headerlink" title="加载svg文件,注册成自定义组件"></a>加载svg文件,注册成自定义组件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SvgIcon</span> <span class="keyword">from</span> <span class="string">&#x27;./svgIcon.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> req = <span class="built_in">require</span>.<span class="title function_">context</span>(<span class="string">&#x27;./&#x27;</span>, <span class="literal">false</span>, <span class="regexp">/\.svg$/</span>);</span><br><span class="line">req.<span class="title function_">keys</span>().<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="title function_">req</span>(item));</span><br><span class="line"></span><br><span class="line"><span class="comment">// register globally</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;svg-icon&#x27;</span>, <span class="title class_">SvgIcon</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="webpack配置-svg-sprite-loader"><a href="#webpack配置-svg-sprite-loader" class="headerlink" title="webpack配置(svg-sprite-loader)"></a>webpack配置(svg-sprite-loader)</h3><p><code>npm install svg-sprite-loader</code></p><p><code>vue.config.js</code>里面修改配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chainWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 配置svg规则排除assets目录中svg文件处理</span></span><br><span class="line">   <span class="comment">// 目标给svg规则增加一个排除选项exclude:</span></span><br><span class="line">   config.<span class="property">module</span>.<span class="title function_">rule</span>(<span class="string">&#x27;svg&#x27;</span>).<span class="property">exclude</span>.<span class="title function_">add</span>(<span class="title function_">resolve</span>(<span class="string">&#x27;src/resources/svg&#x27;</span>));</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 新增icon规则，设置svg-sprite-loader处理assets目录中的svg</span></span><br><span class="line">   config.<span class="property">module</span></span><br><span class="line">     .<span class="title function_">rule</span>(<span class="string">&#x27;icons&#x27;</span>)</span><br><span class="line">     .<span class="title function_">test</span>(<span class="regexp">/\.svg$/</span>)</span><br><span class="line">     .<span class="property">include</span>.<span class="title function_">add</span>(<span class="title function_">resolve</span>(<span class="string">&#x27;src/resources/svg&#x27;</span>))</span><br><span class="line">     .<span class="title function_">end</span>()</span><br><span class="line">     .<span class="title function_">use</span>(<span class="string">&#x27;svg-sprite-loader&#x27;</span>)</span><br><span class="line">     .<span class="title function_">loader</span>(<span class="string">&#x27;svg-sprite-loader&#x27;</span>)</span><br><span class="line">     .<span class="title function_">options</span>(&#123; <span class="attr">symbolId</span>: <span class="string">&#x27;icon-[name]&#x27;</span> &#125;)</span><br><span class="line">     .<span class="title function_">end</span>();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="main-js-中引入"><a href="#main-js-中引入" class="headerlink" title="main.js 中引入"></a>main.js 中引入</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./resources/svg/index.js&#x27;</span>; <span class="comment">// svg</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> svg </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易版antd4.x表单实现</title>
      <link href="/2021/06/02/reactMyForm/"/>
      <url>/2021/06/02/reactMyForm/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>学习笔记，仅供学习参考</p><h4 id="主要功能点"><a href="#主要功能点" class="headerlink" title="主要功能点"></a>主要功能点</h4><ol><li>可以输入数据，数据动态更新；</li><li>点击 submit，进行数据校验（仅做必填校验）；</li><li>校验失败展示提示，控制台打印 Failed 详情信息；</li><li>校验成功控制台打印 Success 详情信息，并输出 form 表单数据；</li></ol><p>注： 仅实现核心思想，更多业务细节忽略</p><h4 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h4><ol><li>学习 antd4.x 对 form 表单的优化处理，控制 dom 的精准更新以提高性能；</li><li>学习 antd form 表单封装思路；</li></ol><h4 id="antd4-x-form-表单优化点"><a href="#antd4-x-form-表单优化点" class="headerlink" title="antd4.x form 表单优化点"></a>antd4.x form 表单优化点</h4><ol><li>antd4.x 之前，form 的数据都做在 Form 的 state 中，一旦 form 表单某一项数据更新，整个 form 表单会全部更新，一旦表单逻辑复杂了，性能成本可想而知；</li><li>antd4.x 通过新建一个类，对 form 表单的数据进行缓存和处理，一旦数据更新，通过<code>forceUpdate</code>方法对表单数据更改项精准更新；</li><li>兼容了 class 组件和函数组件；</li></ol><h3 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h3><h4 id="代码目录结构"><a href="#代码目录结构" class="headerlink" title="代码目录结构"></a>代码目录结构</h4><p><img src="/images/react/reactform.png"></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><blockquote><p>函数组件使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Form</span>, &#123; <span class="title class_">Field</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@comps/Form&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&#x27;@comps/Form/Input&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> nameRules = [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入姓名！&#x27;</span> &#125;]</span><br><span class="line"><span class="keyword">const</span> passworRules = [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码！&#x27;</span> &#125;]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">MyForm</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [form] = <span class="title class_">Form</span>.<span class="title function_">useForm</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 设置默认值</span></span><br><span class="line">    form.<span class="title function_">setFieldsValue</span>(&#123; <span class="attr">username</span>: <span class="string">&#x27;default&#x27;</span> &#125;)</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onFinish</span> = (<span class="params">values</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Success:&#x27;</span>, values)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onFinishFailed</span> = (<span class="params">errorInfo</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Failed:&#x27;</span>, errorInfo)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;my-form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>MyFrom<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Form</span> <span class="attr">form</span>=<span class="string">&#123;form&#125;</span> <span class="attr">onFinish</span>=<span class="string">&#123;onFinish&#125;</span> <span class="attr">onFinishFailed</span>=<span class="string">&#123;onFinishFailed&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Field</span> <span class="attr">label</span>=<span class="string">&quot;Username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">rules</span>=<span class="string">&#123;nameRules&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Input</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Field</span> <span class="attr">label</span>=<span class="string">&quot;Password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">rules</span>=<span class="string">&#123;passworRules&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Input</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Field</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span>&gt;</span> submit <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>class 组件使用方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Form</span>, &#123; <span class="title class_">Field</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@comps/Form&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&#x27;@comps/Form/Input&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> nameRules = [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入姓名！&#x27;</span> &#125;]</span><br><span class="line"><span class="keyword">const</span> passworRules = [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码！&#x27;</span> &#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment">// class 组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">MyForm</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  onFinish = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;onFinish&#x27;</span>, val) <span class="comment">//sy-log</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 表单校验失败执行</span></span><br><span class="line">  onFinishFailed = <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;onFinishFailed&#x27;</span>, val) <span class="comment">//sy-log</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>MyRCFieldForm<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Form</span> <span class="attr">onFinish</span>=<span class="string">&#123;this.onFinish&#125;</span> <span class="attr">onFinishFailed</span>=<span class="string">&#123;this.onFinishFailed&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">rules</span>=<span class="string">&#123;[nameRules]&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Username&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Field</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">rules</span>=<span class="string">&#123;[passworRules]&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Input</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Field</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="index"><a href="#index" class="headerlink" title="index"></a>index</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// import React from &#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> _Form <span class="keyword">from</span> <span class="string">&#x27;./Form&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Field</span> <span class="keyword">from</span> <span class="string">&#x27;./Field&#x27;</span></span><br><span class="line"><span class="keyword">import</span> useForm <span class="keyword">from</span> <span class="string">&#x27;./useForm&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./Form.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Form</span> = _Form</span><br><span class="line"><span class="title class_">Form</span>.<span class="property">Field</span> = <span class="title class_">Field</span></span><br><span class="line"><span class="title class_">Form</span>.<span class="property">useForm</span> = useForm</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Field</span>, useForm &#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Form</span></span><br></pre></td></tr></table></figure><h4 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FieldContext</span> <span class="keyword">from</span> <span class="string">&#x27;./FeildContext&#x27;</span></span><br><span class="line"><span class="keyword">import</span> useForm <span class="keyword">from</span> <span class="string">&#x27;./useForm&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Form</span>(<span class="params"></span></span><br><span class="line"><span class="params">  &#123; form, children, onFinish, onFinishFailed &#125;,</span></span><br><span class="line"><span class="params">  ref</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// store 存储数据的</span></span><br><span class="line">  <span class="keyword">const</span> [formInstance] = <span class="title function_">useForm</span>(form)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 子给父的ref传数据 新方法</span></span><br><span class="line">  <span class="comment">// 将 formInstance 传给 Form 组件的使用者 ，然后再通过</span></span><br><span class="line">  <span class="comment">// React.useImperativeHandle(ref, () =&gt; formInstance)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 缓存 方法</span></span><br><span class="line">  formInstance.<span class="title function_">setCallback</span>(&#123;</span><br><span class="line">    onFinish,</span><br><span class="line">    onFinishFailed,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&quot;ll-form&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">        e.preventDefault()</span></span><br><span class="line"><span class="language-xml">        formInstance.submit()</span></span><br><span class="line"><span class="language-xml">      &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FieldContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;formInstance&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">FieldContext.Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Field"><a href="#Field" class="headerlink" title="Field"></a>Field</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FieldContext</span> <span class="keyword">from</span> <span class="string">&#x27;./FeildContext&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">Field</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> contextType = <span class="title class_">FieldContext</span></span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>(props)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 将field实例存到formstore中，后续formStore中的数据更新了，通过调用实例的onStoreChange触发组件的重新渲染</span></span><br><span class="line">    <span class="keyword">const</span> &#123; setFieldEntities &#125; = <span class="variable language_">this</span>.<span class="property">context</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// setFieldEntities 函数返回一个销毁存储的方法</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">unregister</span> = <span class="title function_">setFieldEntities</span>(<span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ! 组件销毁同时删除formstore中对field的缓存</span></span><br><span class="line">  <span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">unregister</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">unregister</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// store 中的数据更新之后要手动刷新页面</span></span><br><span class="line">  onStoreChange = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">forceUpdate</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getControlled = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; name &#125; = <span class="variable language_">this</span>.<span class="property">props</span></span><br><span class="line">    <span class="keyword">const</span> &#123; setFieldsValue, getFieldValue &#125; = <span class="variable language_">this</span>.<span class="property">context</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">value</span>: <span class="title function_">getFieldValue</span>(name),</span><br><span class="line">      <span class="attr">onChange</span>: <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> val = e.<span class="property">target</span>.<span class="property">value</span></span><br><span class="line">        <span class="comment">// store set 根据 name的唯一性</span></span><br><span class="line">        <span class="title function_">setFieldsValue</span>(&#123; [name]: val &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; children, label, name &#125; = <span class="variable language_">this</span>.<span class="property">props</span></span><br><span class="line">    <span class="keyword">const</span> &#123; getVaildateErrByName &#125; = <span class="variable language_">this</span>.<span class="property">context</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> err = <span class="title function_">getVaildateErrByName</span>(name)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给子组件增加属性、方法</span></span><br><span class="line">    <span class="keyword">const</span> returnChildrenNode = <span class="title class_">React</span>.<span class="title function_">cloneElement</span>(</span><br><span class="line">      children,</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getControlled</span>()</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">ll-form-field</span> $&#123;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">err</span> &amp;&amp; <span class="attr">err.name</span> === <span class="string">name</span> ? &#x27;<span class="attr">ll-form-field-err</span>&#x27; <span class="attr">:</span> &#x27;&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;label &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;ll-form-label ll-form-label-left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">label</span>&gt;</span> &#123;label&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;ll-form-wrap&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;returnChildrenNode&#125;</span></span><br><span class="line"><span class="language-xml">          &#123;err &amp;&amp; err.name === name &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;ll-form-field-explain ll-form-field-error&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;alert&quot;</span>&gt;</span>&#123;err.message&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="FeildContext"><a href="#FeildContext" class="headerlink" title="FeildContext"></a>FeildContext</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建context</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FieldContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FieldContext</span></span><br></pre></td></tr></table></figure><h4 id="useForm"><a href="#useForm" class="headerlink" title="useForm"></a>useForm</h4><p>form 表单的数据全部在这个类里面处理；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// store 状态管理库</span></span><br><span class="line"><span class="comment">// 开辟一块空间，存储form中的数据，空间换性能</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FormStore</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 存状态</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">store</span> = &#123;&#125;</span><br><span class="line">    <span class="comment">// 存fields form 下面的子组件</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fieldEntities</span> = &#123;&#125;</span><br><span class="line">    <span class="comment">// 存储cbs form 身上的事件 例如onFinish等</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">callbacks</span> = &#123;&#125;</span><br><span class="line">    <span class="comment">// 缓存校验错误数据</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">err</span> = &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// get 单个值</span></span><br><span class="line">  getFieldValue = <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">store</span>[name]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// get 所有store数据</span></span><br><span class="line">  getFieldsValue = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; ...<span class="variable language_">this</span>.<span class="property">store</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// set store</span></span><br><span class="line">  setFieldsValue = <span class="function">(<span class="params">newStore</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">store</span> = &#123;</span><br><span class="line">      ...<span class="variable language_">this</span>.<span class="property">store</span>,</span><br><span class="line">      ...newStore,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新视图需要准确的拿到对应的 数据变化的filed实例 进行更新</span></span><br><span class="line">    <span class="keyword">const</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(newStore)</span><br><span class="line"></span><br><span class="line">    keys.<span class="property">length</span> &amp;&amp;</span><br><span class="line">      keys.<span class="title function_">forEach</span>(<span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">onStoreChange</span>(name)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 存 filed</span></span><br><span class="line">  <span class="comment">// 订阅和取消订阅，监听和取消监听要成对出现</span></span><br><span class="line">  setFieldEntities = <span class="function">(<span class="params">entity</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 订阅</span></span><br><span class="line">    entity.<span class="property">props</span>.<span class="property">name</span> &amp;&amp; (<span class="variable language_">this</span>.<span class="property">fieldEntities</span>[entity.<span class="property">props</span>.<span class="property">name</span>] = entity)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回一个卸载方法 取消订阅</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 删除field 实例</span></span><br><span class="line">      <span class="keyword">delete</span> <span class="variable language_">this</span>.<span class="property">fieldEntities</span>[entity.<span class="property">props</span>.<span class="property">name</span>]</span><br><span class="line">      <span class="comment">// 删除store存的对应的数据</span></span><br><span class="line">      <span class="keyword">delete</span> <span class="variable language_">this</span>.<span class="property">store</span>[entity.<span class="property">props</span>.<span class="property">name</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  setCallback = <span class="function">(<span class="params">newCallbacks</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">callbacks</span> = &#123;</span><br><span class="line">      ...<span class="variable language_">this</span>.<span class="property">callbacks</span>,</span><br><span class="line">      ...newCallbacks,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  validate = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> err = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> name <span class="keyword">in</span> <span class="variable language_">this</span>.<span class="property">fieldEntities</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> rules = <span class="variable language_">this</span>.<span class="property">fieldEntities</span>[name].<span class="property">props</span>.<span class="property">rules</span> || <span class="literal">null</span></span><br><span class="line">      rules = rules &amp;&amp; rules[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!rules) <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> value = <span class="variable language_">this</span>.<span class="title function_">getFieldValue</span>(name)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!(rules.<span class="property">required</span> &amp;&amp; value)) &#123;</span><br><span class="line">        <span class="keyword">const</span> o = &#123;</span><br><span class="line">          <span class="attr">message</span>: rules.<span class="property">message</span>,</span><br><span class="line">          value,</span><br><span class="line">          <span class="attr">name</span>: name,</span><br><span class="line">        &#125;</span><br><span class="line">        err.<span class="title function_">push</span>(o)</span><br><span class="line">        <span class="comment">// 缓存校验出来的err</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">err</span>[name] = o</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">onStoreChange</span>(name)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">err</span>[name]) &#123;</span><br><span class="line">          <span class="comment">// 校验成功的 清除记录 并刷新对应的 field</span></span><br><span class="line">          <span class="keyword">delete</span> <span class="variable language_">this</span>.<span class="property">err</span>[name]</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">onStoreChange</span>(name)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getVaildateErrByName = <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">err</span>[name] || <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  submit = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> err = <span class="variable language_">this</span>.<span class="title function_">validate</span>()</span><br><span class="line">    <span class="keyword">const</span> &#123; onFinish, onFinishFailed &#125; = <span class="variable language_">this</span>.<span class="property">callbacks</span></span><br><span class="line">    <span class="keyword">if</span> (err.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 校验出错</span></span><br><span class="line">      <span class="title function_">onFinishFailed</span>(err, <span class="variable language_">this</span>.<span class="title function_">getFieldsValue</span>())</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 校验通过</span></span><br><span class="line">      <span class="title function_">onFinish</span>(<span class="variable language_">this</span>.<span class="title function_">getFieldsValue</span>())</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onStoreChange = <span class="function">(<span class="params">name</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fieldEntities</span>[name] &amp;&amp; <span class="variable language_">this</span>.<span class="property">fieldEntities</span>[name].<span class="title function_">onStoreChange</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getForm = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">getFieldValue</span>: <span class="variable language_">this</span>.<span class="property">getFieldValue</span>,</span><br><span class="line">      <span class="attr">getFieldsValue</span>: <span class="variable language_">this</span>.<span class="property">getFieldsValue</span>,</span><br><span class="line">      <span class="attr">setFieldsValue</span>: <span class="variable language_">this</span>.<span class="property">setFieldsValue</span>,</span><br><span class="line">      <span class="attr">setFieldEntities</span>: <span class="variable language_">this</span>.<span class="property">setFieldEntities</span>,</span><br><span class="line">      <span class="attr">getVaildateErrByName</span>: <span class="variable language_">this</span>.<span class="property">getVaildateErrByName</span>,</span><br><span class="line">      <span class="attr">setCallback</span>: <span class="variable language_">this</span>.<span class="property">setCallback</span>,</span><br><span class="line">      <span class="attr">submit</span>: <span class="variable language_">this</span>.<span class="property">submit</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 储存状态管理库</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">useForm</span>(<span class="params">form</span>) &#123;</span><br><span class="line">  <span class="comment">// 实例 全局只会生成一次，不能每次刷新一次 初始化一次</span></span><br><span class="line">  <span class="comment">// React.useRef() 拥有 跨渲染周期 保存数据的 能力</span></span><br><span class="line">  <span class="keyword">const</span> formRef = <span class="title class_">React</span>.<span class="title function_">useRef</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!formRef.<span class="property">current</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (form) &#123;</span><br><span class="line">      formRef.<span class="property">current</span> = form</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 通过getForm 获取formstore的方法</span></span><br><span class="line">      <span class="keyword">const</span> formStore = <span class="keyword">new</span> <span class="title class_">FormStore</span>()</span><br><span class="line">      formRef.<span class="property">current</span> = formStore.<span class="title function_">getForm</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> [formRef.<span class="property">current</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 受控组件，属性、方法均控制在父级</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Input</span> = (<span class="params">props</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">className</span>=<span class="string">&quot;ll-input&quot;</span> &#123;<span class="attr">...props</span>&#125; /&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">CustomizeInput</span> = (<span class="params">&#123; value = <span class="string">&#x27;&#x27;</span>, ...props &#125;</span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;ll-form-input&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Input</span> <span class="attr">value</span>=<span class="string">&#123;value&#125;</span> &#123;<span class="attr">...props</span>&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">CustomizeInput</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0源码执行流程图</title>
      <link href="/2021/06/01/vue3-0code/"/>
      <url>/2021/06/01/vue3-0code/</url>
      
        <content type="html"><![CDATA[<p>最近学习vue3.0.11的源码，顺便画了一个流程图。防止图片丢失，贴在这里吧~</p><p><img src="/images/vue/vue3.0.png" alt="vue3.0.11流程图"></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git merge 指定内容</title>
      <link href="/2021/05/25/gitCherryPick/"/>
      <url>/2021/05/25/gitCherryPick/</url>
      
        <content type="html"><![CDATA[<h2 id="合并某个分支上的单个commit-摘樱桃"><a href="#合并某个分支上的单个commit-摘樱桃" class="headerlink" title="合并某个分支上的单个commit(摘樱桃)"></a>合并某个分支上的单个commit(摘樱桃)</h2><p>eg: 想把<code>develop</code>上的版本<code>82ecb31</code>合到<code>master</code>分支; </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master  </span><br><span class="line">git cherry-pick 82ecb31</span><br></pre></td></tr></table></figure><p>会把<code>develop</code>上的<code>82ecb31</code>版本的改动合并到<code>master</code>，会在<code>master</code>分支上产生一个新的<code>commit</code>;</p><h2 id="合并某个分支上的一系列commits"><a href="#合并某个分支上的一系列commits" class="headerlink" title="合并某个分支上的一系列commits"></a>合并某个分支上的一系列commits</h2><p>eg: 想把<code>develop</code>上版本<code>1111~9999</code>合并到<code>master</code>;</p><ol><li>基于<code>develop</code>拉一个新分支，并指定新分支的<code>最后一个版本</code>为<code>9999</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop </span><br><span class="line">git checkout -b newbranch 9999</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>变基（<code>rebase</code>）这个新分支的<code>commit</code>到<code>master</code>分支, <code>1111^</code>指明你想从哪个版本开始合代码,<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --onto master 1111^ </span><br></pre></td></tr></table></figure></li></ol><h2 id="合并具体的文件到某分支"><a href="#合并具体的文件到某分支" class="headerlink" title="合并具体的文件到某分支"></a>合并具体的文件到某分支</h2><p>eg: 把<code>develop</code>分支上的<code>test.js</code>合并到<code>master</code>;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git checkout --patch develop test.js</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0 路由切换动画</title>
      <link href="/2021/03/05/vue-transition/"/>
      <url>/2021/03/05/vue-transition/</url>
      
        <content type="html"><![CDATA[<h3 id="router"><a href="#router" class="headerlink" title="router"></a>router</h3><blockquote><p>先要在router，<code>meta</code>里给页面编号，通过监听<code>route</code>判断<code>index</code>的大小来确定是进入还是离开；</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../views/home/index.vue&#x27;</span>), <span class="attr">meta</span>: &#123; <span class="attr">index</span>: <span class="number">0</span> &#125; &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/a&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../views/a.vue&#x27;</span>), <span class="attr">meta</span>: &#123; <span class="attr">index</span>: <span class="number">1</span> &#125; &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/b&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../views/b.vue&#x27;</span>), <span class="attr">meta</span>: &#123; <span class="attr">index</span>: <span class="number">2</span> &#125; &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/c&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../views/c.vue&#x27;</span>), <span class="attr">meta</span>: &#123; <span class="attr">index</span>: <span class="number">3</span> &#125; &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/d&#x27;</span>, <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../views/d.vue&#x27;</span>), <span class="attr">meta</span>: &#123; <span class="attr">index</span>: <span class="number">4</span> &#125; &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h3><blockquote><p>通过vue的内置组件<code>transition</code>来做动画，这里有个注意点，vue3和vue2写法不一样</p></blockquote><ul><li><p>在vue2中:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transition</span> <span class="attr">:name</span>=<span class="string">&quot;transitionName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">class</span>=<span class="string">&quot;view app-view&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在vue3中:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-view</span> <span class="attr">class</span>=<span class="string">&quot;router-view&quot;</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; Component &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">transition</span> <span class="attr">:name</span>=<span class="string">&quot;transitionName&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;Component&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="app-vue"><a href="#app-vue" class="headerlink" title="app.vue"></a>app.vue</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-view class=&quot;router-view&quot; v-slot=&quot;&#123; Component &#125;&quot;&gt;</span><br><span class="line">    &lt;transition :name=&quot;transitionName&quot;&gt;</span><br><span class="line">      &lt;component :is=&quot;Component&quot; /&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">  &lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; useRoute &#125; from &#x27;vue-router&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  setup() &#123;</span><br><span class="line"></span><br><span class="line">    const transition = [&#x27;slide-left&#x27;, &#x27;slide-right&#x27;]</span><br><span class="line">    let transitionName = ref(transition[0])</span><br><span class="line"></span><br><span class="line">    const route = useRoute()</span><br><span class="line"></span><br><span class="line">    // 监控路由的变化</span><br><span class="line">    watch(</span><br><span class="line">      () =&gt; route.meta.index,</span><br><span class="line">      (newIndex, oldIndex) =&gt; &#123;</span><br><span class="line">        if (newIndex &gt; oldIndex) &#123;</span><br><span class="line">          transitionName.value = transition[0]</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          transitionName.value = transition[1]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    return &#123; transitionName &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">.router-view &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  overflow-y: auto;</span><br><span class="line">  overflow-x: hidden;</span><br><span class="line">  -webkit-overflow-scrolling: touch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.slide-right-enter-active,</span><br><span class="line">.slide-right-leave-active,</span><br><span class="line">.slide-left-enter-active,</span><br><span class="line">.slide-left-leave-active &#123;</span><br><span class="line">  will-change: transform;</span><br><span class="line">  transition: all 500ms;</span><br><span class="line">  position: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.slide-right-enter &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translate3d(-100%, 0, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.slide-right-leave-active &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translate3d(100%, 0, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.slide-left-enter &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translate3d(100%, 0, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.slide-left-leave-active &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translate3d(-100%, 0, 0);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> transition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vite反向代理、设置别名</title>
      <link href="/2021/03/04/vue3-alias/"/>
      <url>/2021/03/04/vue3-alias/</url>
      
        <content type="html"><![CDATA[<p>根目录下<code>vite.config.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">proxy</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">target</span>: <span class="string">&#x27;http://*.*.*.*:*&#x27;</span>,</span><br><span class="line">      <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">rewrite</span>: <span class="function"><span class="params">path</span> =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">alias</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;/@/&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./src&#x27;</span>),</span><br><span class="line">    <span class="string">&quot;/@assets/&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src/assets&quot;</span>),</span><br><span class="line">    <span class="string">&quot;/@request/&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src/framework/request&quot;</span>),</span><br><span class="line">    <span class="string">&quot;/@api/&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src/framework/api&quot;</span>),</span><br><span class="line">    <span class="string">&quot;/@utils/&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src/framework/utils&quot;</span>),</span><br><span class="line">    <span class="string">&quot;/@router/&quot;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./src/framework/router&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序</title>
      <link href="/2021/03/02/sort/"/>
      <url>/2021/03/02/sort/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>排序的常用算法 之 有事没事敲一遍，下面的图片来自百度图片；</p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><img src="/images/sort/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F.gif"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1,冒泡排序（两两对比）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!arr.<span class="property">length</span>) <span class="keyword">return</span> arr;</span><br><span class="line">  <span class="keyword">const</span> len = arr.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">        <span class="comment">// 互换位置</span></span><br><span class="line">        [arr[j], arr[j + <span class="number">1</span>]] = [arr[j + <span class="number">1</span>], arr[j]];</span><br><span class="line">        <span class="comment">// 只要对比还有交换，就证明排序还没结束</span></span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag) <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(bubbleSort([78, 6, 7, 3, 9, 45, 10, 8]))</span></span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p><img src="/images/sort/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.gif"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选择排序(选最小值)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">selectSort</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!arr.<span class="property">length</span>) <span class="keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> len = arr.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">let</span> minIndex;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    minIndex = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = i; j &lt; len; j++) &#123;</span><br><span class="line">      <span class="comment">// 还有值比当前最小值小</span></span><br><span class="line">      <span class="keyword">if</span> (arr[minIndex] &gt; arr[j]) &#123;</span><br><span class="line">        <span class="comment">// 重新赋值minIndex</span></span><br><span class="line">        minIndex = j;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最小值index变了， 把minIndex位置上的值替换掉</span></span><br><span class="line">    <span class="keyword">if</span> (minIndex !== i) &#123;</span><br><span class="line">      [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(selectSort([78, 6, 7, 3, 9, 45, 10, 8]))</span></span><br></pre></td></tr></table></figure><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p><img src="/images/sort/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.gif"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插入排序(范围排序)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">insertSort</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!arr.<span class="property">length</span>) <span class="keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 缓存数组长度</span></span><br><span class="line">  <span class="keyword">const</span> len = arr.<span class="property">length</span>;</span><br><span class="line">  <span class="comment">// temp 用来保存当前需要插入的元素</span></span><br><span class="line">  <span class="keyword">let</span> temp;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="comment">// 范围</span></span><br><span class="line">    temp = arr[i];</span><br><span class="line">    <span class="keyword">let</span> j = i;</span><br><span class="line">    <span class="comment">// 判断前一个数据是否比后面一位大</span></span><br><span class="line">    <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; arr[j - <span class="number">1</span>] &gt; temp) &#123;</span><br><span class="line">      <span class="comment">// 大的数据向后移动位置，让出一个空位用来放小值</span></span><br><span class="line">      arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">      j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 循环让位，让出来的空位就是这个 待插入值 的位置</span></span><br><span class="line">    arr[j] = temp;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(insertSort([2, 6, 7, 3, 9, 45, 10, 0]))</span></span><br></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><p>归并排序是对<code>分治思想</code>的典型应用。</p><ul><li>分解子问题</li><li>求解每个子问题</li><li>合并子问题的解，得出大问题的解</li></ul><blockquote><p>看图理解</p></blockquote><p><img src="/images/sort/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.gif" alt="图一"></p><p><img src="/images/sort/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F2.gif" alt="图二"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 把数组平分拆分成最小单元，再合并，合并过程中排序，合并结束排序结束</span></span><br><span class="line"><span class="comment">// 拆分 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mergeSort</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!arr &amp;&amp; !arr.<span class="property">length</span>) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> len = arr.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 边界</span></span><br><span class="line">  <span class="keyword">if</span> (arr.<span class="property">length</span> === <span class="number">1</span>) <span class="keyword">return</span> arr;</span><br><span class="line">  <span class="comment">// 中点</span></span><br><span class="line">  <span class="keyword">const</span> center = <span class="title class_">Math</span>.<span class="title function_">floor</span>(len / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 拆分左边</span></span><br><span class="line">  <span class="keyword">const</span> leftArr = <span class="title function_">mergeSort</span>(arr.<span class="title function_">slice</span>(<span class="number">0</span>, center));</span><br><span class="line">  <span class="comment">// 拆分右边</span></span><br><span class="line">  <span class="keyword">const</span> rightArr = <span class="title function_">mergeSort</span>(arr.<span class="title function_">slice</span>(center, len));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">mergeArr</span>(leftArr, rightArr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">mergeSort</span>([<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">59</span>, <span class="number">12</span>, <span class="number">32</span>, <span class="number">7</span>, <span class="number">21</span>])); <span class="comment">// [ 2,  3,  4,  4, 6, 7, 12, 21, 32, 59 ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 合并两个有序数组(小到大)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mergeArr</span>(<span class="params">arr1, arr2</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!arr1 &amp;&amp; !arr2) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span>, j = <span class="number">0</span>; <span class="comment">// 声明指针</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 缓存数组长度</span></span><br><span class="line">  <span class="keyword">let</span> len1 = arr1.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">let</span> len2 = arr2.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 结果数组</span></span><br><span class="line">  <span class="keyword">let</span> res = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 合并</span></span><br><span class="line">  <span class="keyword">while</span> (i &lt; len1 &amp;&amp; j &lt; len2) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr1[i] &lt; arr2[j]) &#123;</span><br><span class="line">      res.<span class="title function_">push</span>(arr1[i]);</span><br><span class="line">      i++;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">push</span>(arr2[j]);</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 剩下的数据直接放入</span></span><br><span class="line">  <span class="keyword">if</span> (i &lt; len1) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">concat</span>(arr1.<span class="title function_">slice</span>(i));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">concat</span>(arr2.<span class="title function_">slice</span>(j));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><blockquote><p>排序算法还有很多，什么时候敲了再更新。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>generator打印斐波拉契数列</title>
      <link href="/2021/02/26/generator/"/>
      <url>/2021/02/26/generator/</url>
      
        <content type="html"><![CDATA[<h3 id="斐波拉契数列"><a href="#斐波拉契数列" class="headerlink" title="斐波拉契数列"></a>斐波拉契数列</h3><p>斐波拉契数列又称“兔子数列”，例如 <code>[0, 1, 1, 2, 3, 8, 13, 21, 34]</code>;<br>数学公式为：<code> F(n)=F(n - 1)+F(n - 2)</code></p><h3 id="打印斐波拉契数列"><a href="#打印斐波拉契数列" class="headerlink" title="打印斐波拉契数列"></a>打印斐波拉契数列</h3><h4 id="普通写法"><a href="#普通写法" class="headerlink" title="普通写法"></a>普通写法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; len 返回数组的长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setFS</span>(<span class="params">len</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(!len) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">let</span> arr = [<span class="number">0</span>, <span class="number">1</span>];</span><br><span class="line">  <span class="keyword">let</span> a = <span class="number">0</span>, b = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (arr.<span class="property">length</span> &lt; len) &#123;</span><br><span class="line">    [a, b] = [b, a + b];</span><br><span class="line">    arr.<span class="title function_">push</span>(b);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">setFS</span>(<span class="number">10</span>))  <span class="comment">// [0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="generator写法"><a href="#generator写法" class="headerlink" title="generator写法"></a>generator写法</h4><p>这种写法并没有比普通写法简单，主要是为了利用generator的方法； 其中<code>while (true)</code>是让FS这个迭代器无限次迭代，相当于一直 <code>yield b</code>,这样在 <code>next()</code>执行迭代器的时候，<code>next</code>多少次就会有多少个<code>yield b</code>;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">FS</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> a = <span class="number">0</span>, b = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">yield</span> a;</span><br><span class="line">  <span class="keyword">yield</span> b;</span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    [a, b] = [b, a + b];</span><br><span class="line">    <span class="keyword">yield</span> b;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setFS</span>(<span class="params">len</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!len) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> res = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// generator对象</span></span><br><span class="line">  <span class="keyword">let</span> geneFS = <span class="title function_">FS</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    res.<span class="title function_">push</span>(geneFS.<span class="title function_">next</span>().<span class="property">value</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">setFS</span>(<span class="number">10</span>)) <span class="comment">// [0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉树算法题(学习笔记)</title>
      <link href="/2021/02/26/binaryTree2/"/>
      <url>/2021/02/26/binaryTree2/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>仅记录自己敲过的题，留个爪印。</p><blockquote><p>注意：二叉树问题，基本要考虑是否采用递归</p></blockquote><h3 id="二叉树翻转"><a href="#二叉树翻转" class="headerlink" title="二叉树翻转"></a>二叉树翻转</h3><p>二叉树翻转为左子树和右子树翻转位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> reverse = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> left = <span class="title function_">reverse</span>(root.<span class="property">left</span>);</span><br><span class="line">    <span class="keyword">const</span> right = <span class="title function_">reverse</span>(root.<span class="property">right</span>);</span><br><span class="line"></span><br><span class="line">    root.<span class="property">right</span> = left;</span><br><span class="line">    root.<span class="property">left</span> = right;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二叉搜索树"><a href="#二叉搜索树" class="headerlink" title="二叉搜索树"></a>二叉搜索树</h3><p>什么是二叉搜索树？<br>二叉搜索树（又：二叉搜索树，二叉排序树），一棵二叉搜索树有如下性质：</p><ul><li>是一棵空树</li><li>是一棵由根结点、左子树、右子树组成的树，</li><li>同时左子树和右子树都是二叉搜索树，</li><li>且左子树上所有结点的数据域都小于等于根结点的数据域，右子树上所有结点的数据域都大于等于根结点的数据域</li></ul><p>例如：</p><pre><code>         8       /  \      5     9     / \     \    4    6    10</code></pre><p>  关于二叉搜索树高频操作：</p><ol><li>查找数据域为某一特定值的结点</li><li>插入新结点</li><li>删除指定结点</li></ol><h4 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h4><blockquote><p>题：1.查找数据域为某一特定值的结点</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> root1 = &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">left</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">6</span>,</span><br><span class="line">        <span class="attr">left</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">5</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">7</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">9</span>,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; data 要找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; root 二叉树</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> search = <span class="keyword">function</span> (<span class="params">data, root</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data || !root) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (root.<span class="property">val</span> === data) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;目标结点是：&#x27;</span>, root)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data &lt; root.<span class="property">val</span>) &#123;</span><br><span class="line">        <span class="comment">// 左节点的值小于上节点</span></span><br><span class="line">        <span class="title function_">search</span>(data, root.<span class="property">left</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data &gt; root.<span class="property">val</span>) &#123;</span><br><span class="line">        <span class="comment">// 右节点的值大于上节点</span></span><br><span class="line">        <span class="title function_">search</span>(data, root.<span class="property">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// search(9, root1)  // 目标结点是： &#123; val: 9, right: &#123; val: 10 &#125; &#125;</span></span><br><span class="line"><span class="comment">// search(6, root1)  // 目标结点是： &#123; val: 6, left: &#123; val: 5 &#125;, right: &#123; val: 7 &#125; &#125;</span></span><br></pre></td></tr></table></figure><h4 id="插入新结点"><a href="#插入新结点" class="headerlink" title="插入新结点"></a>插入新结点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> root2 = &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="attr">left</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">left</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">7</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">12</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TreeNode</span>(<span class="params">val, left, right</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = (val === <span class="literal">undefined</span> ? <span class="number">0</span> : val)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">left</span> = (left === <span class="literal">undefined</span> ? <span class="literal">null</span> : left)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">right</span> = (right === <span class="literal">undefined</span> ? <span class="literal">null</span> : right)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; data 插入的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; root 二叉树</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> insert = <span class="keyword">function</span> (<span class="params">data, root</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!data) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果root是空的，则为一个可以插入的空二叉树</span></span><br><span class="line">    <span class="keyword">if</span> (!root) &#123;</span><br><span class="line">        <span class="comment">// 用一个值为n的结点占据这个空位</span></span><br><span class="line">        root = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(data)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (root.<span class="property">val</span> &gt; data) &#123;</span><br><span class="line">        root.<span class="property">left</span> = <span class="title function_">insert</span>(data, root.<span class="property">left</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (root.<span class="property">val</span> &lt; data) &#123;</span><br><span class="line">        root.<span class="property">right</span> = <span class="title function_">insert</span>(data, root.<span class="property">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(JSON.stringify(insert(2, root2)))</span></span><br></pre></td></tr></table></figure><h4 id="删除指定结点"><a href="#删除指定结点" class="headerlink" title="删除指定结点"></a>删除指定结点</h4><p>要保持搜索二叉树的合法性，中序遍历是<code>有序</code>的!<br>删除节点这里需要注意：</p><ul><li>结点不存在，定位到了空结点。直接返回即可。</li><li>需要删除的目标结点没有左孩子也没有右孩子——它是一个叶子结点，删掉它不会对其它结点造成任何影响，直接删除即可。</li><li>需要删除的目标结点存在左子树，那么就去左子树里寻找小于目标结点值的最大结点，用这个结点覆盖掉目标结点</li><li>需要删除的目标结点存在右子树，那么就去右子树里寻找大于目标结点值的最小结点，用这个结点覆盖掉目标结点</li><li>需要删除的目标结点既有左子树、又有右子树，这时就有两种做法了：要么取左子树中值最大的结点，要么取右子树中取值最小的结点。两个结点中任取一个覆盖掉目标结点，都可以维持二叉搜索树的数据有序性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> root3 = &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="attr">left</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">left</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">7</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">11</span>,</span><br><span class="line">        <span class="attr">left</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">10</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">12</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// inorder(root3);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">deleteNode</span>(<span class="params">val, root</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (root.<span class="property">val</span> === val) &#123;</span><br><span class="line">        <span class="comment">// 删除(要保持搜索二叉树的合法性，中序遍历是有序的)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (root.<span class="property">left</span>) &#123;</span><br><span class="line">            <span class="comment">// 从左子树中找到最大值</span></span><br><span class="line">            <span class="keyword">const</span> maxNode = <span class="title function_">findMax</span>(root.<span class="property">left</span>)</span><br><span class="line">            <span class="comment">// 用这个最大节点覆盖掉这个删除的节点</span></span><br><span class="line">            root.<span class="property">val</span> = maxNode.<span class="property">val</span>;</span><br><span class="line">            <span class="comment">// 找到的这个最大节点替换了删除节点，需要删除位上的这个节点</span></span><br><span class="line">            root.<span class="property">left</span> = <span class="title function_">deleteNode</span>(maxNode.<span class="property">val</span>, root.<span class="property">left</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (root.<span class="property">right</span>) &#123;</span><br><span class="line">            <span class="comment">// 从右子树中找到最小值 </span></span><br><span class="line">            <span class="keyword">const</span> minNode = <span class="title function_">findMin</span>(root.<span class="property">right</span>);</span><br><span class="line">            root.<span class="property">val</span> = minNode.<span class="property">val</span>;</span><br><span class="line">            root.<span class="property">right</span> = <span class="title function_">deleteNode</span>(minNode.<span class="property">val</span>, root.<span class="property">right</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!root.<span class="property">right</span> &amp;&amp; !root.<span class="property">left</span>) &#123;</span><br><span class="line">            <span class="comment">// 左右子树都不存在</span></span><br><span class="line">            root = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (val &gt; root.<span class="property">val</span>) &#123;</span><br><span class="line"></span><br><span class="line">        root.<span class="property">right</span> = <span class="title function_">deleteNode</span>(val, root.<span class="property">right</span>);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (val &lt; root.<span class="property">val</span>) &#123;</span><br><span class="line"></span><br><span class="line">        root.<span class="property">left</span> = <span class="title function_">deleteNode</span>(val, root.<span class="property">left</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找左子树最大值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findMax</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (root.<span class="property">right</span>) &#123;</span><br><span class="line">        root = root.<span class="property">right</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找右子树的最小值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">findMin</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (root.<span class="property">left</span>) &#123;</span><br><span class="line">        root = root.<span class="property">left</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(deleteNode(11, root3))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="对定义的考察：二叉搜索树的验证"><a href="#对定义的考察：二叉搜索树的验证" class="headerlink" title="对定义的考察：二叉搜索树的验证"></a>对定义的考察：二叉搜索树的验证</h4><blockquote><p>题目描述：给定一个二叉树，判断其是否是一个有效的二叉搜索树(不需要考虑相等情况)。</p></blockquote><ul><li>节点的左子树只包含小于当前节点的数。</li><li>节点的右子树只包含大于当前节点的数。</li><li>所有左子树和右子树自身必须也是二叉搜索树。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> root4 = &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="attr">left</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">left</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">4</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">7</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">left</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">10</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">right</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isValidBST = <span class="keyword">function</span> (<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 空树为合法</span></span><br><span class="line">    <span class="keyword">if</span> (!root) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">// 三个值比较 根节点 左子树 右子树</span></span><br><span class="line">    <span class="keyword">if</span> ((root.<span class="property">right</span> &amp;&amp; root.<span class="property">right</span>.<span class="property">val</span> &lt; root.<span class="property">val</span>) || (root.<span class="property">left</span> &amp;&amp; root.<span class="property">left</span>.<span class="property">val</span> &gt; root.<span class="property">val</span>)) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">isValidBST</span>(root.<span class="property">right</span>) &amp;&amp; <span class="title function_">isValidBST</span>(root.<span class="property">left</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(isValidBST(root4))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="对特性的考察：将排序数组转化为二叉搜索树"><a href="#对特性的考察：将排序数组转化为二叉搜索树" class="headerlink" title="对特性的考察：将排序数组转化为二叉搜索树"></a>对特性的考察：将排序数组转化为二叉搜索树</h4><blockquote><p>题目描述：将一个按照升序排列的有序数组，转换为一棵高度平衡二叉搜索树<br>给定有序数组: [-10,-3,0,5,9]</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> sortedArrayToBST = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!(nums &amp;&amp; nums.<span class="property">length</span>)) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TreeNode</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> len = nums.<span class="property">length</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 因为要保证二叉树的平衡，所以数组中间的值为根节点</span></span><br><span class="line">    <span class="keyword">let</span> root = <span class="title function_">buildBST</span>(<span class="number">0</span>, len - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">buildBST</span>(<span class="params">startIndex, endIndex</span>) &#123;</span><br><span class="line">        <span class="comment">// 数组走完了</span></span><br><span class="line">        <span class="keyword">if</span> (startIndex &gt; endIndex) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        <span class="comment">// 找根节点  0,1,2,3, 4,5,6, 7,8 (startIndex + (endIndex - startIndex)/2)为计算 startIndex, endIndex 这个两个index的中间index为多少</span></span><br><span class="line">        <span class="keyword">let</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>((startIndex + (endIndex - startIndex) / <span class="number">2</span>));</span><br><span class="line">        <span class="comment">// 生成根节点</span></span><br><span class="line">        <span class="keyword">let</span> cur = <span class="keyword">new</span> <span class="title class_">TreeNode</span>(nums[mid])</span><br><span class="line">        <span class="comment">// 左子树</span></span><br><span class="line">        cur.<span class="property">left</span> = <span class="title function_">buildBST</span>(startIndex, mid - <span class="number">1</span>)</span><br><span class="line">        <span class="comment">// 右子树</span></span><br><span class="line">        cur.<span class="property">right</span> = <span class="title function_">buildBST</span>(mid + <span class="number">1</span>, endIndex)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cur</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(sortedArrayToBST([-10, -3, 0, 5, 9]))</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二叉树 </tag>
            
            <tag> BFS </tag>
            
            <tag> DFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>留言板动态信封效果</title>
      <link href="/2021/02/05/theme-comments/"/>
      <url>/2021/02/05/theme-comments/</url>
      
        <content type="html"><![CDATA[<p>这里是参考的<a href="https://akilar.top/posts/e2d3c450/">糖果屋</a>留言板的效果，感谢大佬提供的教程。<br>顺便也为自己魔改主题留个记录，方便后期优化~😉</p><h3 id="新建留言板页面"><a href="#新建留言板页面" class="headerlink" title="新建留言板页面"></a>新建留言板页面</h3><blockquote><p>如果已经生成过留言板的童鞋可以直接跳过~</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page comments</span><br></pre></td></tr></table></figure><h3 id="修改留言板内容"><a href="#修改留言板内容" class="headerlink" title="修改留言板内容"></a>修改留言板内容</h3><blockquote><p>找到<code>source/comments/index.md</code>：</p></blockquote><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 留言板</span><br><span class="line"><span class="section">top<span class="emphasis">_img:</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br><span class="line"><span class="emphasis"><span class="section"></span></span></span><br><span class="line"><span class="emphasis"><span class="section"><span class="language-xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/commentsbar.css&quot;</span>/&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;computer&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;maincontent&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;form-wrap&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://fastly.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/before.png&quot;</span> <span class="attr">id</span>=<span class="string">&quot;beforeimg&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;envelope&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">            <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;formmain&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">              <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;headerimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg&quot;</span>/&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">              <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding: 5px 20px;&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                  <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">calss</span>=<span class="string">&quot;title3&quot;</span>&gt;</span></span>来自Akilar的留言:<span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;<span class="name">center</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                  有什么想问的？<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                  有什么想说的？<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                  有什么想吐槽的？<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                  哪怕是有什么想吃的，都可以告诉我哦~<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottomcontent&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;bottomimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot;</span>/&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">                <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bottomhr&quot;</span>&gt;</span></span>自动书记人偶竭诚为您服务！<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">              <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">            <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">        <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;afterimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://fastly.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/after.png&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">      <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">    <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">  <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">    <span class="language-xml"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;formmain&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;headerimg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U5bb04af32be544c4b41206d9a42fcacfd.jpg&quot;</span> /&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;padding: 5px 20px;&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">            <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;title3&quot;</span>&gt;</span></span>来自Akilar的留言:<span class="language-xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;<span class="name">center</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">            有什么想问的？<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">            有什么想说的？<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">            有什么想吐槽的？<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">            哪怕是有什么想吃的，都可以告诉我哦~<span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottomcontent&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bottomhr&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">          <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bottomhr&quot;</span>&quot;&gt;</span></span>自动书记人偶竭诚为您服务！<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">        <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">      <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">    <span class="language-xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="section">  <span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br></pre></td></tr></table></figure><h3 id="增加样式"><a href="#增加样式" class="headerlink" title="增加样式"></a>增加样式</h3><p>在<code>/butterfly/source/css/self.css</code>中增加如下样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滚动条隐藏 */</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 禁用图片点击,butterfly渲染后会给图片套上fancybox，点开后会造成信笺偏移*/</span></span><br><span class="line"><span class="selector-class">.fancybox</span>&#123;</span><br><span class="line">   <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* top-img隐藏 */</span></span><br><span class="line"><span class="selector-id">#page-header</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 宽度小于530px隐藏信封 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">530px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#computer</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">530px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#mobile</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#form-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">447px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">1s</span> ease-in-out .<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 调整信封划出高度，换信笺内容以后可在此设置height */</span></span><br><span class="line"><span class="selector-id">#form-wrap</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1050px</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#beforeimg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">126px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">530px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">317px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">100</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#afterimg</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">530px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">259px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#envelope</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">1s</span> ease-in-out .<span class="number">3s</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#maincontent</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">530px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> auto <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.headerimg</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.formmain</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto auto;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.12</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.18</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title3</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">246</span>, <span class="number">214</span>, <span class="number">175</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">15px</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">#ddd</span> <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Arial&quot;</span>, <span class="string">&quot;Microsoft YaHei&quot;</span>, <span class="string">&quot;黑体&quot;</span>, <span class="string">&quot;宋体&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bottomcontent</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bottomimg</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span> auto <span class="number">5px</span> auto;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bottomhr</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 夜间模式 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span></span><br><span class="line">  <span class="selector-class">.formmain</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span></span><br><span class="line">  <span class="selector-class">.comments</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">90</span>, <span class="number">90</span>, <span class="number">90</span>, <span class="number">0.8</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="将样式注入主题"><a href="#将样式注入主题" class="headerlink" title="将样式注入主题"></a>将样式注入主题</h3><p>在主题的<code>_config.yml</code>中,找到<code>inject</code>,<code>self.css</code>是自己创建用来魔改主题使的样式文件:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/self.css&quot;&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 留言板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给butterfly主题添加看板娘</title>
      <link href="/2021/02/03/theme_live2d/"/>
      <url>/2021/02/03/theme_live2d/</url>
      
        <content type="html"><![CDATA[<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="/images/live2d/live2d.gif" alt="小可爱"></p><h3 id="简单版（单一模型）"><a href="#简单版（单一模型）" class="headerlink" title="简单版（单一模型）"></a>简单版（单一模型）</h3><p><a href="https://github.com/EYHN/hexo-helper-live2d">传送门</a></p><h4 id="1，安装依赖"><a href="#1，安装依赖" class="headerlink" title="1，安装依赖"></a>1，安装依赖</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add  hexo-helper-live2d</span><br></pre></td></tr></table></figure><h4 id="2-在hexo根目录-config-yml中添加如下配置："><a href="#2-在hexo根目录-config-yml中添加如下配置：" class="headerlink" title="2.在hexo根目录_config.yml中添加如下配置："></a>2.在hexo根目录<code>_config.yml</code>中添加如下配置：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Live2D</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># https://github.com/EYHN/hexo-helper-live2d</span></span></span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="built_in">enable</span>: <span class="literal">false</span></span></span><br><span class="line">  scriptFrom: local # 默认</span><br><span class="line">  pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/ # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets/ # 模型文件相对与插件根目录路径</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">scriptFrom: jsdelivr <span class="comment"># jsdelivr CDN</span></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">scriptFrom: unpkg <span class="comment"># unpkg CDN</span></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">scriptFrom: https://www.unpkg.com/npm/live2d-widget@3.x/lib/L2Dwidget.min.js <span class="comment"># 你的自定义 url</span></span></span><br><span class="line">  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko # npm-module package name</span><br><span class="line">    # use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br><span class="line">    # use: ./wives/wanko # 相对于博客根目录的路径</span><br><span class="line">    # use: https://www.unpkg.com/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true # 手机中是否展示</span><br></pre></td></tr></table></figure><h4 id="3-模型下载"><a href="#3-模型下载" class="headerlink" title="3.模型下载"></a>3.模型下载</h4><p><a href="https://github.com/xiazeyu/live2d-widget-models">下载地址</a><br>推荐使用<code>yarn add &lt;package-name&gt;</code>的方式下载模型，下载完成后在上面第2步中找到 <code>model:</code> <code>use:</code> 后面写上你下载的模型的名字就好，重启一下hexo服务就ok啦。</p><h3 id="高级版（更换模型…）"><a href="#高级版（更换模型…）" class="headerlink" title="高级版（更换模型…）"></a>高级版（更换模型…）</h3><h4 id="1-去https-github-com-stevenjoezhang-live2d-widget把库clone下来"><a href="#1-去https-github-com-stevenjoezhang-live2d-widget把库clone下来" class="headerlink" title="1. 去https://github.com/stevenjoezhang/live2d-widget把库clone下来;"></a>1. 去<a href="https://github.com/stevenjoezhang/live2d-widget">https://github.com/stevenjoezhang/live2d-widget</a>把库clone下来;</h4><h4 id="2-放到-themes-butterfly-source-下，并改名为live2d-widget-修改项目中的-autoload-js-文件"><a href="#2-放到-themes-butterfly-source-下，并改名为live2d-widget-修改项目中的-autoload-js-文件" class="headerlink" title="2. 放到 /themes/butterfly/source/下，并改名为live2d-widget,修改项目中的 autoload.js 文件:"></a>2. 放到 <code>/themes/butterfly/source/</code>下，并改名为<code>live2d-widget</code>,修改项目中的 <code>autoload.js</code> 文件:</h4><p> 将：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">&quot;https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;</span>;</span><br></pre></td></tr></table></figure><p> 改为：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> live2d_path = <span class="string">&quot;/live2d-widget/&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="3-将autoload-js注入主题，在主题的-config-yml中找到inject"><a href="#3-将autoload-js注入主题，在主题的-config-yml中找到inject" class="headerlink" title="3. 将autoload.js注入主题，在主题的_config.yml中找到inject"></a>3. 将<code>autoload.js</code>注入主题，在主题的<code>_config.yml</code>中找到<code>inject</code></h4> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Inject</span><br><span class="line"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span><br><span class="line"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;  </span><br><span class="line">  bottom:</span><br></pre></td></tr></table></figure><h4 id="4-重启hexo服务"><a href="#4-重启hexo服务" class="headerlink" title="4. 重启hexo服务"></a>4. 重启hexo服务</h4><h4 id="5-注意"><a href="#5-注意" class="headerlink" title="5. 注意"></a>5. 注意</h4><p>从<code>stevenjoezhang</code>下载下来的库使用的是cdn过后的api，会导致换皮肤功能没有效果，只需要找到 <code>live2d-widget/autoload.js</code> 中将<code>cdnPath</code>注释，打开<code>apiPath</code>就好了：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载 waifu.css live2d.min.js waifu-tips.js</span></span><br><span class="line"><span class="keyword">if</span> (screen.<span class="property">width</span> &gt;= <span class="number">768</span>) &#123;</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">all</span>([</span><br><span class="line"><span class="title function_">loadExternalResource</span>(live2d_path + <span class="string">&quot;waifu.css&quot;</span>, <span class="string">&quot;css&quot;</span>),</span><br><span class="line"><span class="title function_">loadExternalResource</span>(live2d_path + <span class="string">&quot;live2d.min.js&quot;</span>, <span class="string">&quot;js&quot;</span>),</span><br><span class="line"><span class="title function_">loadExternalResource</span>(live2d_path + <span class="string">&quot;waifu-tips.js&quot;</span>, <span class="string">&quot;js&quot;</span>)</span><br><span class="line">]).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="title function_">initWidget</span>(&#123;</span><br><span class="line"><span class="attr">waifuPath</span>: live2d_path + <span class="string">&quot;waifu-tips.json&quot;</span>,</span><br><span class="line"><span class="attr">apiPath</span>: <span class="string">&quot;https://live2d.fghrsh.net/api/&quot;</span>,</span><br><span class="line"><span class="comment">// cdnPath: &quot;https://fastly.jsdelivr.net/gh/fghrsh/live2d_api/&quot; // 使用cdn会无法换皮肤</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>起伏</title>
      <link href="/2021/01/22/mood/"/>
      <url>/2021/01/22/mood/</url>
      
        <content type="html"><![CDATA[<p>我思故我在……</p><blockquote><p>Brain:All units function report!<br>Heart: Function loss 99%.<br>Liver: Function loss 99%.<br>Spleen: Function loss 99%.<br>Lung: Function loss 99%.<br>Brain:External support won’t reverse the situation.<br>How much adrenaline left?<br>Paranephros:Remaining 5%,unable to synthesize.<br>Brain:All remaining adrenaline allocates to nervous system and vocal muscles.<br>Prepare to send the last message to the outside world.<br>Brain:All other units,prepare to cease the function!<br>This instruction won’t repeat!<br>Thanks you for your tens of years sincere cooperation,farewell!</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 情绪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栈练习题(学习笔记)</title>
      <link href="/2021/01/22/stack/"/>
      <url>/2021/01/22/stack/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述：给定一个只包括-‘-‘，’-’，’-‘，’-’，’-‘，’-’-的字符串，判断字符串是否有效。"><a href="#题目描述：给定一个只包括-‘-‘，’-’，’-‘，’-’，’-‘，’-’-的字符串，判断字符串是否有效。" class="headerlink" title="题目描述：给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串，判断字符串是否有效。"></a>题目描述：给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串，判断字符串是否有效。</h3><ul><li>左括号必须用相同类型的右括号闭合。</li><li>左括号必须以正确的顺序闭合。</li><li>注意空字符串可被认为是有效字符串。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> strKey = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">strKey.<span class="title function_">set</span>(<span class="string">&quot;&#123;&quot;</span>, <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">strKey.<span class="title function_">set</span>(<span class="string">&quot;[&quot;</span>, <span class="string">&quot;]&quot;</span>);</span><br><span class="line">strKey.<span class="title function_">set</span>(<span class="string">&quot;(&quot;</span>, <span class="string">&quot;)&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 左括号集合</span></span><br><span class="line"><span class="keyword">const</span> left = [<span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;[&#x27;</span>, <span class="string">&#x27;(&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isValid = <span class="keyword">function</span> (<span class="params">str</span>) &#123;</span><br><span class="line">  <span class="comment">// 空字符串无条件判断为 true</span></span><br><span class="line">  <span class="keyword">if</span> (!str) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 模拟栈</span></span><br><span class="line">  <span class="keyword">const</span> stack = [];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> len = str.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> item = str[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是左括号，那把对应的右括号放进栈里面</span></span><br><span class="line">    <span class="keyword">if</span> (left.<span class="title function_">indexOf</span>(item) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">      stack.<span class="title function_">push</span>(strKey.<span class="title function_">get</span>(item));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 由于栈的后进先出原则，题中`左括号必须以正确的顺序闭合`,</span></span><br><span class="line">      <span class="comment">// 当item为右括号时，应该和栈顶的右括号相等，否则括号的闭合规则错误返回false</span></span><br><span class="line">      <span class="comment">// 如果栈里面已经没有数据了,字符串还没结束，直接 闭合规则 不成立，返回false</span></span><br><span class="line">      <span class="keyword">if</span> (!stack.<span class="property">length</span> || stack.<span class="title function_">pop</span>() !== item) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 校验结束，栈应该是空的</span></span><br><span class="line">  <span class="keyword">return</span> !stack.<span class="property">length</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> str1 = <span class="string">&quot;&#123;&#125;[]()&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> str2 = <span class="string">&quot;&#123;[()]&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> str3 = <span class="string">&quot;&#123;&#125;&#123;&#125;&#123;()&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> str4 = <span class="string">&quot;&#123;[()]&#125;&#125;&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> str5 = <span class="string">&quot;&#123;[)()]&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isValid</span>(str1)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isValid</span>(str2)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isValid</span>(str3)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isValid</span>(str4)) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isValid</span>(str5)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="题目描述-根据每日气温列表，请重新生成一个列表，对应位置的输出是需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用-0-来代替。"><a href="#题目描述-根据每日气温列表，请重新生成一个列表，对应位置的输出是需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用-0-来代替。" class="headerlink" title="题目描述: 根据每日气温列表，请重新生成一个列表，对应位置的输出是需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用 0 来代替。"></a>题目描述: 根据每日气温列表，请重新生成一个列表，对应位置的输出是需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用 0 来代替。</h3><ul><li><p>例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。</p></li><li><p>提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> temp = [<span class="number">73</span>, <span class="number">74</span>, <span class="number">75</span>, <span class="number">71</span>, <span class="number">69</span>, <span class="number">72</span>, <span class="number">76</span>, <span class="number">73</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dailyTemperatures = <span class="keyword">function</span> (<span class="params">arr</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> len = arr.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">let</span> resArr = (<span class="keyword">new</span> <span class="title class_">Array</span>(len)).<span class="title function_">fill</span>(<span class="number">0</span>); <span class="comment">// 结果数组，和温度数组等长，先占位为0</span></span><br><span class="line">  <span class="keyword">let</span> stack = []; <span class="comment">// 初始化栈</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> item = arr[i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对比 下一个值是否大于当前值</span></span><br><span class="line">    <span class="keyword">while</span> (stack.<span class="property">length</span> &amp;&amp; item &gt; arr[stack[stack.<span class="property">length</span> - <span class="number">1</span>]]) &#123;</span><br><span class="line">      <span class="comment">// 则找到了下一个比当前值大的数据，取出栈顶的数据</span></span><br><span class="line">      <span class="keyword">let</span> top = stack.<span class="title function_">pop</span>();</span><br><span class="line">      <span class="comment">// 两个index 相减，算出过了几天温度超过</span></span><br><span class="line">      resArr[top] = i - top</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    stack.<span class="title function_">push</span>(i) <span class="comment">// 像栈里push当前数据的index</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> resArr</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">dailyTemperatures</span>(temp))</span><br></pre></td></tr></table></figure><h3 id="题目描述：设计一个支持-push-，pop-，top-操作，并能在常数时间内检索到最小元素的栈。"><a href="#题目描述：设计一个支持-push-，pop-，top-操作，并能在常数时间内检索到最小元素的栈。" class="headerlink" title="题目描述：设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。"></a>题目描述：设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。</h3><blockquote><p>栈的设计——“最小栈”问题</p></blockquote><ul><li><p><code>push(x)</code>  —— 将元素 x 推入栈中。</p></li><li><p><code>pop()</code>    —— 删除栈顶的元素。</p></li><li><p><code>getTop()</code> —— 获取栈顶元素。</p></li><li><p><code>getMin()</code> —— 检索栈中的最小元素。</p></li><li><p><code>最小栈思路</code>：</p></li><li><p>创建一个<code>递减栈</code>！在操作栈push,pop时，这个栈的栈顶永远保持最小数据，这样取最小值只需要取一下这个栈的栈顶，跟<code>循环</code>栈然后找到最小值比，是空间换时间，<code>O(n) -&gt; O(1)</code></p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MinStack</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 初始化栈</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">stack</span> = [];</span><br><span class="line">  <span class="comment">// 递减栈</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">minStack</span> = [];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MinStack</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">  <span class="attr">constructor</span>: <span class="title class_">MinStack</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 入栈</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; data  入栈数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">push</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (data === <span class="literal">null</span> || data === <span class="literal">undefined</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">stack</span>.<span class="title function_">push</span>(data);</span><br><span class="line">    <span class="comment">// 当栈还是空和push的数据小于等于 minStack栈顶的值，就把这个更小的值push入minStack</span></span><br><span class="line">    <span class="comment">// 比栈顶还大的数据，就肯定不是最小值，不用入minStack栈</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">minStack</span>.<span class="property">length</span> || <span class="variable language_">this</span>.<span class="property">minStack</span>[<span class="variable language_">this</span>.<span class="property">minStack</span>.<span class="property">length</span> - <span class="number">1</span>] &gt;= data) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">minStack</span>.<span class="title function_">push</span>(data)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 出栈</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">pop</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">stack</span>.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 如果出栈的值等于最小栈顶的值，证明最小值出栈了，则minStack也需要把这个最小值出栈，确保栈最小值的正确性</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">stack</span>.<span class="title function_">pop</span>() === <span class="variable language_">this</span>.<span class="property">minStack</span>[<span class="variable language_">this</span>.<span class="property">minStack</span>.<span class="property">length</span> - <span class="number">1</span>]) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">minStack</span>.<span class="title function_">pop</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 取栈顶的数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">getTop</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">stack</span>.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">stack</span>[<span class="variable language_">this</span>.<span class="property">stack</span>.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取栈中最小值</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">getMin</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">minStack</span>.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">minStack</span>[<span class="variable language_">this</span>.<span class="property">minStack</span>.<span class="property">length</span> - <span class="number">1</span>]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Stack</span> = <span class="keyword">new</span> <span class="title class_">MinStack</span>();</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">push</span>(<span class="number">0</span>)</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">push</span>(<span class="number">1</span>)</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">push</span>(-<span class="number">1</span>)</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">push</span>(-<span class="number">3</span>)</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">push</span>(<span class="number">1</span>)</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">push</span>(<span class="number">7</span>)</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">pop</span>()</span><br><span class="line"><span class="title class_">Stack</span>.<span class="title function_">push</span>(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Stack</span>.<span class="property">stack</span>)    <span class="comment">// [ 0, 1, -1, -3, 1, 6 ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Stack</span>.<span class="property">minStack</span>) <span class="comment">// [ 0, -1, -3 ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Stack</span>.<span class="title function_">getMin</span>()) <span class="comment">// -3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Stack</span>.<span class="title function_">getTop</span>()) <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><h3 id="题目描述：使用栈实现队列的下列操作："><a href="#题目描述：使用栈实现队列的下列操作：" class="headerlink" title="题目描述：使用栈实现队列的下列操作："></a>题目描述：使用栈实现队列的下列操作：</h3><ul><li><code>push(x)</code>   – 将一个元素放入队列的尾部。</li><li><code>pop()</code>     – 从队列首部移除元素。</li><li><code>peek()</code>    – 返回队列首部的元素。</li><li><code>empty()</code>   – 返回队列是否为空。</li></ul><blockquote><p>示例:<br>MyQueue queue = new MyQueue();<br>queue.push(1);<br>queue.push(2);<br>queue.peek(); // 返回 1<br>queue.pop(); // 返回 1<br>queue.empty(); // 返回 false</p></blockquote><blockquote><p>说明:<br>你只能使用标准的栈操作 – 也就是只有 push to top, peek/pop from top, size, 和 is empty 操作是合法的。<br>你所使用的语言也许不支持栈。你可以使用 list 或者 deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。<br>假设所有操作都是有效的 （例如，一个空的队列不会调用 pop 或者 peek 操作）。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 思路: 栈：先进后出 ，队列：先进先出，</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MyQueue</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">stack1</span> = [];</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">stack2</span> = [];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  入队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span> = <span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="title function_">push</span>(x)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  出队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">pop</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 如果stack2为空，则把stack1出栈到stack2，达到翻转stack1的目的，这样由stack1入栈，stack2 出栈，实现了队列的先进先出；</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">stack2</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="comment">// 当 stack1 不为空时，出栈</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="comment">// 将 stack1 出栈的元素推入 stack2</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">stack2</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="title function_">pop</span>())</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// stack2 出栈</span></span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">stack2</span>.<span class="title function_">pop</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回队列首部的元素，跟pop比peek并没有将数据出栈</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">peek</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 如果stack2是空的，需要把stack1出栈到stack2</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">stack2</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">stack2</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="title function_">pop</span>());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> len = <span class="variable language_">this</span>.<span class="property">stack2</span>.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">stack2</span>[len - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否队列是否为空</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title class_">MyQueue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">empty</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> !<span class="variable language_">this</span>.<span class="property">stack1</span>.<span class="property">length</span> &amp;&amp; !<span class="variable language_">this</span>.<span class="property">stack2</span>.<span class="property">length</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Queue</span> = <span class="keyword">new</span> <span class="title class_">MyQueue</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Queue</span>.<span class="title function_">isEmpty</span>()) <span class="comment">// true</span></span><br><span class="line"><span class="title class_">Queue</span>.<span class="title function_">push</span>(<span class="number">1</span>)</span><br><span class="line"><span class="title class_">Queue</span>.<span class="title function_">push</span>(<span class="number">2</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Queue</span>.<span class="title function_">isEmpty</span>()) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Queue</span>.<span class="title function_">peek</span>())    <span class="comment">// 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Queue</span>.<span class="title function_">pop</span>())     <span class="comment">// 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Queue</span>.<span class="title function_">pop</span>())     <span class="comment">// 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Queue</span>.<span class="title function_">empty</span>())   <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表练习题(学习笔记)</title>
      <link href="/2021/01/15/linkedList/"/>
      <url>/2021/01/15/linkedList/</url>
      
        <content type="html"><![CDATA[<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="1-真题描述：将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有结点组成的。"><a href="#1-真题描述：将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有结点组成的。" class="headerlink" title="1. 真题描述：将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有结点组成的。"></a>1. 真题描述：将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有结点组成的。</h4><blockquote><p>示例 输入：1-&gt;2-&gt;4, 1-&gt;3-&gt;4 输出：1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = &#123;</span><br><span class="line">  <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">next</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">next</span>: <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> b = &#123;</span><br><span class="line">  <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">next</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">next</span>: <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链表构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ListNode</span>(<span class="params">val</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">val</span> = val || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mergeLists = <span class="keyword">function</span> (<span class="params">list1, list2</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> head = <span class="keyword">new</span> <span class="title class_">ListNode</span>();</span><br><span class="line">  <span class="keyword">let</span> cur = head;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 只要有一个结束了就结束</span></span><br><span class="line">  <span class="keyword">while</span> (list1 &amp;&amp; list2) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (list1.<span class="property">val</span> &lt;= list2.<span class="property">val</span>) &#123;</span><br><span class="line"></span><br><span class="line">      cur.<span class="property">next</span> = list1;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// list 向前一步</span></span><br><span class="line">      list1 = list1.<span class="property">next</span>;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list1.<span class="property">val</span> &gt; list2.<span class="property">val</span>) &#123;</span><br><span class="line"></span><br><span class="line">      cur.<span class="property">next</span> = list2;</span><br><span class="line">      <span class="comment">// list 向前一步</span></span><br><span class="line">      list2 = list2.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指针向前一步</span></span><br><span class="line">    cur = cur.<span class="property">next</span>;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 不等长情况</span></span><br><span class="line">  cur.<span class="property">next</span> === list1 === <span class="literal">null</span> ? list2 : list1</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> head.<span class="property">next</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(JSON.stringify(mergeLists(a, b)))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-真题描述：给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。"><a href="#2-真题描述：给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。" class="headerlink" title="2.真题描述：给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。"></a>2.真题描述：给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。</h4><blockquote><p>示例 1:输入: 1-&gt;1-&gt;2-&gt;3-&gt;3 输出: 1-&gt;2-&gt;3</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> c = &#123;</span><br><span class="line">  <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">next</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">next</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">next</span>: &#123;</span><br><span class="line">          <span class="attr">val</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="attr">next</span>: <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> filterList = <span class="keyword">function</span> (<span class="params">list</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> head = list; <span class="comment">// 指针</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (list.<span class="property">next</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (list.<span class="property">val</span> === list.<span class="property">next</span>.<span class="property">val</span>) &#123;</span><br><span class="line">      list.<span class="property">next</span> = list.<span class="property">next</span>.<span class="property">next</span>;</span><br><span class="line">      <span class="comment">// 先前走一步</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      list = list.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> head</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(JSON.stringify(filterList(c)))</span></span><br></pre></td></tr></table></figure><h3 id="快慢指针——删除链表的倒数第-N-个结点"><a href="#快慢指针——删除链表的倒数第-N-个结点" class="headerlink" title="快慢指针——删除链表的倒数第 N 个结点"></a>快慢指针——删除链表的倒数第 N 个结点</h3><h4 id="真题描述：给定一个链表，删除链表的倒数第-n-个结点，并且返回链表的头结点。"><a href="#真题描述：给定一个链表，删除链表的倒数第-n-个结点，并且返回链表的头结点。" class="headerlink" title="真题描述：给定一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。"></a>真题描述：给定一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。</h4><blockquote><p>下方链表删除倒数第2个节点</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> d = &#123;</span><br><span class="line">  <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">next</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">next</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">next</span>: &#123;</span><br><span class="line">          <span class="attr">val</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="attr">next</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">6</span>,</span><br><span class="line">            <span class="attr">next</span>: <span class="literal">null</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> removeList = <span class="keyword">function</span> (<span class="params">list, n</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> head = <span class="keyword">new</span> <span class="title class_">ListNode</span>;</span><br><span class="line">  head.<span class="property">next</span> = list</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> fast = head; <span class="comment">// 快指针</span></span><br><span class="line">  <span class="keyword">let</span> slow = head; <span class="comment">// 慢指针</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 快指针先走</span></span><br><span class="line">  <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    fast = fast.<span class="property">next</span></span><br><span class="line">    n--</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 开始走链表</span></span><br><span class="line">  <span class="keyword">while</span> (fast.<span class="property">next</span>) &#123;</span><br><span class="line">    <span class="comment">// 快慢指针同时走</span></span><br><span class="line">    fast = fast.<span class="property">next</span>;</span><br><span class="line">    slow = slow.<span class="property">next</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 此时慢指针就在倒数第N位上，删除该节点</span></span><br><span class="line">  slow.<span class="property">next</span> = slow.<span class="property">next</span>.<span class="property">next</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> head.<span class="property">next</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(JSON.stringify(removeList(d, 2)))</span></span><br></pre></td></tr></table></figure><h3 id="递归法—-链表的反转"><a href="#递归法—-链表的反转" class="headerlink" title="递归法—-链表的反转"></a>递归法—-链表的反转</h3><h4 id="真题描述：定义一个函数，输入一个链表的头结点，反转该链表并输出反转后链表的头结点。"><a href="#真题描述：定义一个函数，输入一个链表的头结点，反转该链表并输出反转后链表的头结点。" class="headerlink" title="真题描述：定义一个函数，输入一个链表的头结点，反转该链表并输出反转后链表的头结点。"></a>真题描述：定义一个函数，输入一个链表的头结点，反转该链表并输出反转后链表的头结点。</h4><blockquote><p>思路：翻转其实就是将next的指向翻转，后续节点的next指向前节点</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> e = &#123;</span><br><span class="line">  <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">next</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">next</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">next</span>: &#123;</span><br><span class="line">          <span class="attr">val</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="attr">next</span>: <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归法</span></span><br><span class="line"><span class="keyword">const</span> reverseList = <span class="keyword">function</span> (<span class="params">head, list</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (list &amp;&amp; head) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为了返回新链表，不改变原链表</span></span><br><span class="line">    list = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(list))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存链表原本的next</span></span><br><span class="line">    <span class="keyword">let</span> cur = list.<span class="property">next</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反向, 第一个节点next处理</span></span><br><span class="line">    list.<span class="property">next</span> = head.<span class="property">val</span> ? head : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">reverseList</span>(list, cur)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> head</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> head = <span class="keyword">new</span> <span class="title class_">ListNode</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="title function_">reverseList</span>(head, e))) <span class="comment">// &#123;&quot;val&quot;:5,&quot;next&quot;:&#123;&quot;val&quot;:4,&quot;next&quot;:&#123;&quot;val&quot;:3,&quot;next&quot;:&#123;&quot;val&quot;:2,&quot;next&quot;:&#123;&quot;val&quot;:1,&quot;next&quot;:null&#125;&#125;&#125;&#125;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(e)) <span class="comment">// &#123;&quot;val&quot;:1,&quot;next&quot;:&#123;&quot;val&quot;:2,&quot;next&quot;:&#123;&quot;val&quot;:3,&quot;next&quot;:&#123;&quot;val&quot;:4,&quot;next&quot;:&#123;&quot;val&quot;:5,&quot;next&quot;:null&#125;&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录在Linux中安装MongoDB</title>
      <link href="/2020/12/22/linux-mongod/"/>
      <url>/2020/12/22/linux-mongod/</url>
      
        <content type="html"><![CDATA[<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line"></span><br><span class="line">mkdir mongodb</span><br><span class="line"></span><br><span class="line">cd mongodb/</span><br><span class="line"></span><br><span class="line">wget  https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.7.tgz  下载</span><br><span class="line"> </span><br><span class="line">tar -zxvf  mongodb-linux-x86_64-4.0.7.tgz 解压</span><br></pre></td></tr></table></figure><h4 id="新建文件夹放数据库数据和log"><a href="#新建文件夹放数据库数据和log" class="headerlink" title="新建文件夹放数据库数据和log"></a>新建文件夹放数据库数据和log</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd mongodb-linux-x86_64-4.0.7/bin</span><br><span class="line"></span><br><span class="line">mkdir -p logs</span><br><span class="line">mkdir -p data/db</span><br></pre></td></tr></table></figure><h4 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod  777  logs</span><br><span class="line">chmod  777  data</span><br></pre></td></tr></table></figure><h4 id="新建mongodb-conf"><a href="#新建mongodb-conf" class="headerlink" title="新建mongodb.conf"></a>新建<code>mongodb.conf</code></h4><p>创建一个mongodb.conf  直接 vim mongodb.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dbpath = /usr/local/mongodb/mongodb-linux-x86_64-4.0.7/bin/data/db #数据文件</span><br><span class="line"></span><br><span class="line">logpath =/usr/local/mongodb/mongodb-linux-x86_64-4.0.7/bin/logs/mongodb.log #日记文件</span><br><span class="line"></span><br><span class="line">port = 27017 #端口号 默认</span><br><span class="line"></span><br><span class="line">fork = true  #后台启动</span><br><span class="line"></span><br><span class="line">bind_ip=0.0.0.0  #可外网访问</span><br><span class="line"></span><br><span class="line">auth = true #增加用户授权认证 创建用户后再加这个</span><br></pre></td></tr></table></figure><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><p>bin目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mongod -f mongodb.conf</span><br></pre></td></tr></table></figure><h4 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux |grep mongodb</span><br></pre></td></tr></table></figure><h4 id="杀死-mongodb-的进程"><a href="#杀死-mongodb-的进程" class="headerlink" title="杀死 mongodb 的进程"></a>杀死 mongodb 的进程</h4><p>尽量不要  kill -9 进程的 pid 58784<br>数据库直接关闭，数据丢失，数据文件损失，修复数据库（成本高，有风险）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -2 进程号</span><br></pre></td></tr></table></figure><h4 id="mongodb常用命令"><a href="#mongodb常用命令" class="headerlink" title="mongodb常用命令"></a>mongodb常用命令</h4><h5 id="开启用户验证"><a href="#开启用户验证" class="headerlink" title="开启用户验证"></a>开启用户验证</h5><p>为了安全性，链接数据库时最好开启用户验证，<code>mongodb.conf</code>中加上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth=true</span><br></pre></td></tr></table></figure><h5 id="新建账户"><a href="#新建账户" class="headerlink" title="新建账户"></a>新建账户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(&#123;user:”账号”,pwd:”密码”,roles:[&#123;“role”:”userAdmin”,”db”:”admin”&#125;,&#123;“role”:”root”,”db”:”admin”&#125;,&#123;“role”:”userAdminAnyDatabase”,”db”:”admin”&#125;]&#125;)</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">db.createUser(&#123;user:&quot;lili&quot;,pwd:&quot;password&quot;,roles:[&quot;userAdmin&quot;]&#125;)</span><br></pre></td></tr></table></figure><h5 id="roles"><a href="#roles" class="headerlink" title="roles"></a>roles</h5><ul><li><p><code>Read</code>：允许用户读取指定数据库</p></li><li><p><code>readWrite</code>：允许用户读写指定数据库</p></li><li><p><code>dbAdmin</code>：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</p></li><li><p><code>userAdmin</code>：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户</p></li><li><p><code>clusterAdmin</code>：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。</p></li><li><p><code>readAnyDatabase</code>：只在admin数据库中可用，赋予用户所有数据库的读权限</p></li><li><p><code>readWriteAnyDatabase</code>：只在admin数据库中可用，赋予用户所有数据库的读写权限</p></li><li><p><code>userAdminAnyDatabase</code>：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限</p></li><li><p><code>dbAdminAnyDatabase</code>：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。</p></li><li><p><code>root</code>：只在admin数据库中可用。超级账号，超级权限(本次创建的就是超级账号)</p></li></ul><h5 id="查看所有账户"><a href="#查看所有账户" class="headerlink" title="查看所有账户"></a>查看所有账户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.system.users.find()</span><br></pre></td></tr></table></figure><h5 id="删除账户"><a href="#删除账户" class="headerlink" title="删除账户"></a>删除账户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.dropUser(&quot;username&quot;)</span><br></pre></td></tr></table></figure><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.auth(&quot;admin&quot;,&quot;password&quot;)</span><br></pre></td></tr></table></figure><h5 id="查看所有的库"><a href="#查看所有的库" class="headerlink" title="查看所有的库"></a>查看所有的库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure><h5 id="切换库"><a href="#切换库" class="headerlink" title="切换库"></a>切换库</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br></pre></td></tr></table></figure><h5 id="查看所有的集合-表"><a href="#查看所有的集合-表" class="headerlink" title="查看所有的集合(表)"></a>查看所有的集合(表)</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show collections</span><br></pre></td></tr></table></figure><h5 id="查看表数据"><a href="#查看表数据" class="headerlink" title="查看表数据"></a>查看表数据</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.表名.find()</span><br><span class="line">db.表名.find().pretty()</span><br></pre></td></tr></table></figure><h4 id="本地链接"><a href="#本地链接" class="headerlink" title="本地链接"></a>本地链接</h4><p>mac使用图形化工具<code>mongoHub</code>, node中使用<code>mongooes</code>;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  链接规则</span></span><br><span class="line"><span class="comment">// mongodb://username:password@host:port/dbName?authSource=dbName</span></span><br><span class="line"><span class="comment">// eg:</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; dbName, host, port, user, password &#125; = <span class="built_in">require</span>(<span class="string">&#x27;../config/config&#x27;</span>).<span class="property">database</span>;</span><br><span class="line"><span class="keyword">const</span> db = <span class="string">`mongodb://<span class="subst">$&#123;user&#125;</span>:<span class="subst">$&#123;password&#125;</span>@<span class="subst">$&#123;host&#125;</span>:<span class="subst">$&#123;port&#125;</span>/<span class="subst">$&#123;dbName&#125;</span>?authSource=<span class="subst">$&#123;dbName&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">connect</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 连接数据库</span></span><br><span class="line">  mongoose.<span class="title function_">connect</span>(db, &#123; <span class="attr">useNewUrlParser</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> maxConnectTimes = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">//监听事件</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&#x27;disconnected&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;disconnected&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (maxConnectTimes &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">      maxConnectTimes++;</span><br><span class="line">      mongoose.<span class="title function_">connect</span>(db);</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;db error&#x27;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (maxConnectTimes &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">      maxConnectTimes++;</span><br><span class="line">      mongoose.<span class="title function_">connect</span>(db);</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;db error:&#x27;</span> + err);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&#x27;connected&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mongo connect success&#x27;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongod </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pdfjs-dist + react 使用记录</title>
      <link href="/2020/12/21/pdfJs-React-js/"/>
      <url>/2020/12/21/pdfJs-React-js/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote><p>本片文章仅为笔记，不做具体讲解。<br>文档地址：<a href="https://github.com/mozilla/pdf.js">https://github.com/mozilla/pdf.js</a><br>参考例子： pdf.js/examples/mobile-viewer/</p></blockquote><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="/images/react/pdfjs.jpg" alt="效果"></p><h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br></pre></td><td class="code"><pre><span class="line">import * as React from &#x27;react&#x27;;</span><br><span class="line">import * as PDFJS from &#x27;pdfjs-dist&#x27;</span><br><span class="line">import * as PDFViewer from &#x27;pdfjs-dist/web/pdf_viewer&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default class PDF extends React.Component&lt;any, any&gt;&#123;</span><br><span class="line">  pageRenderRef: React.RefObject&lt;any&gt;;</span><br><span class="line">  errorWrapper: React.RefObject&lt;any&gt;;</span><br><span class="line">  pageRenders: []</span><br><span class="line">  pdfViewer: any  // 不知道pdfjs导出的数据是什么类型，统一使用any</span><br><span class="line">  eventBus: any</span><br><span class="line">  pdfLinkService: any</span><br><span class="line">  l10n: any</span><br><span class="line">  pdfHistory: any</span><br><span class="line">  pdfLoadingTask: any</span><br><span class="line">  pdfDocument: any</span><br><span class="line">  // loadingBar: any</span><br><span class="line"></span><br><span class="line">  constructor(props: any) &#123;</span><br><span class="line">    super(props)</span><br><span class="line">    this.pageRenders = [];   // 存放每页pdf形成的canvas</span><br><span class="line">    this.pageRenderRef = React.createRef();  // 渲染pdf的容器</span><br><span class="line">    this.errorWrapper = React.createRef();</span><br><span class="line">    this.pdfViewer = null</span><br><span class="line">    this.eventBus = null</span><br><span class="line">    this.pdfLinkService = null</span><br><span class="line">    this.l10n = null</span><br><span class="line">    this.pdfHistory = null</span><br><span class="line">    this.pdfLoadingTask = null</span><br><span class="line">    this.pdfDocument = null</span><br><span class="line"></span><br><span class="line">    this.state = &#123;</span><br><span class="line">      USE_ONLY_CSS_ZOOM: true,</span><br><span class="line">      TEXT_LAYER_MODE: 0, // DISABLE</span><br><span class="line">      MAX_IMAGE_SIZE: 1024 * 1024,</span><br><span class="line">      CMAP_URL: &quot;https://unpkg.com/pdfjs-dist@2.2.228/cmaps/&quot;, // 引入pdf.js的字体</span><br><span class="line">      CMAP_PACKED: true,</span><br><span class="line">      // DEFAULT_URL: &quot;./compressed.tracemonkey-pldi-09.pdf&quot;,</span><br><span class="line">      DEFAULT_URL: &#x27;http://localhost:8082/pdfLocal/compressed.tracemonkey-pldi-09.pdf&#x27;,  // 本地预览 需要代理</span><br><span class="line">      DEFAULT_SCALE_DELTA: 1.1,</span><br><span class="line">      MIN_SCALE: 0.25,</span><br><span class="line">      MAX_SCALE: 10.0,</span><br><span class="line">      DEFAULT_SCALE_VALUE: &quot;auto&quot;,</span><br><span class="line">      pdfLoadingTask: null,</span><br><span class="line">      toPageNumber: &#x27;1&#x27;,</span><br><span class="line">      preDisabled: false,</span><br><span class="line">      nextDisabled: false,</span><br><span class="line">      errorWrapperHide: true,</span><br><span class="line">      errorMoreInfoHide: true,</span><br><span class="line">      title: &#x27;&#x27;,</span><br><span class="line">      url: &#x27;&#x27;,</span><br><span class="line">      errorMessage: &#x27;&#x27;,</span><br><span class="line">      errorMoreInfo: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    this.init()</span><br><span class="line">    this.animationStartedPromise().then(res =&gt; &#123;</span><br><span class="line">      this.open(&#123;</span><br><span class="line">        url: this.state.DEFAULT_URL</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  animationStartedPromise = () =&gt; &#123;</span><br><span class="line">    return new Promise((resolve) =&gt; &#123;</span><br><span class="line">      window.requestAnimationFrame(resolve);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  getloadingBar = () =&gt; &#123;</span><br><span class="line">    let bar = new PDFViewer.ProgressBar(&quot;#loadingBar&quot;, &#123;&#125;);</span><br><span class="line">    return PDFJS.shadow(this, &quot;loadingBar&quot;, bar);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 渲染pdf</span><br><span class="line">   */</span><br><span class="line">  open = (params: any) =&gt; &#123;</span><br><span class="line">    if (this.pdfLoadingTask) &#123;</span><br><span class="line">      // We need to destroy already opened document</span><br><span class="line">      return this.close().then(</span><br><span class="line">        () =&gt; &#123;</span><br><span class="line">          // ... and repeat the open() call.</span><br><span class="line">          return this.open(params);</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    let url: string = params.url;</span><br><span class="line">    let self = this;</span><br><span class="line">    this.setTitleUsingUrl(url);</span><br><span class="line">    // Loading document.</span><br><span class="line">    const loadingTask = PDFJS.getDocument(&#123;</span><br><span class="line">      url: url,</span><br><span class="line">      maxImageSize: this.state.MAX_IMAGE_SIZE,</span><br><span class="line">      cMapUrl: this.state.CMAP_URL,</span><br><span class="line">      cMapPacked: this.state.CMAP_PACKED,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    this.pdfLoadingTask = loadingTask;</span><br><span class="line"></span><br><span class="line">    // 进度条</span><br><span class="line">    loadingTask.onProgress = (progressData: any) =&gt; &#123;</span><br><span class="line">      self.progress(progressData.loaded / progressData.total);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return loadingTask.promise.then(</span><br><span class="line">      (pdfDocument: any) =&gt; &#123;</span><br><span class="line">        console.log(&#x27;pdfDocument&#x27;, pdfDocument)</span><br><span class="line">        // Document loaded, specifying document for the viewer.</span><br><span class="line">        self.pdfDocument = pdfDocument;</span><br><span class="line">        self.pdfViewer.setDocument(pdfDocument);</span><br><span class="line">        self.pdfLinkService.setDocument(pdfDocument);</span><br><span class="line">        self.pdfHistory.initialize(&#123; fingerprint: pdfDocument.fingerprint &#125;);</span><br><span class="line"></span><br><span class="line">        self.getloadingBar().hide();</span><br><span class="line">        // self.setTitleUsingMetadata(pdfDocument);</span><br><span class="line">      &#125;,</span><br><span class="line">      (exception: any) =&gt; &#123;</span><br><span class="line">        console.log(&#x27;exception&#x27;, exception)</span><br><span class="line">        let message = exception &amp;&amp; exception.message;</span><br><span class="line">        let l10n = self.l10n;</span><br><span class="line">        let loadingErrorMessage;</span><br><span class="line"></span><br><span class="line">        if (exception instanceof PDFJS.InvalidPDFException) &#123;</span><br><span class="line">          // change error message also for other builds</span><br><span class="line">          loadingErrorMessage = l10n.get(</span><br><span class="line">            &quot;invalid_file_error&quot;,</span><br><span class="line">            null,</span><br><span class="line">            &quot;Invalid or corrupted PDF file.&quot;</span><br><span class="line">          );</span><br><span class="line">        &#125; else if (exception instanceof PDFJS.MissingPDFException) &#123;</span><br><span class="line">          // special message for missing PDFs</span><br><span class="line">          loadingErrorMessage = l10n.get(</span><br><span class="line">            &quot;missing_file_error&quot;,</span><br><span class="line">            null,</span><br><span class="line">            &quot;Missing PDF file.&quot;</span><br><span class="line">          );</span><br><span class="line">        &#125; else if (exception instanceof PDFJS.UnexpectedResponseException) &#123;</span><br><span class="line">          loadingErrorMessage = l10n.get(</span><br><span class="line">            &quot;unexpected_response_error&quot;,</span><br><span class="line">            null,</span><br><span class="line">            &quot;Unexpected server response.&quot;</span><br><span class="line">          );</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          loadingErrorMessage = l10n.get(</span><br><span class="line">            &quot;loading_error&quot;,</span><br><span class="line">            null,</span><br><span class="line">            &quot;An error occurred while loading the PDF.&quot;</span><br><span class="line">          );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        loadingErrorMessage.then((msg: any) =&gt; &#123;</span><br><span class="line">          self.error(msg, &#123; message: message &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        self.getloadingBar().hide();</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  close = () =&gt; &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      errorWrapperHide: true</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    if (!this.pdfLoadingTask) &#123;</span><br><span class="line">      return Promise.resolve();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    let promise = this.pdfLoadingTask.destroy();</span><br><span class="line">    this.pdfLoadingTask = null;</span><br><span class="line"></span><br><span class="line">    if (this.pdfDocument) &#123;</span><br><span class="line">      this.pdfDocument = null;</span><br><span class="line"></span><br><span class="line">      this.pdfViewer.setDocument(null);</span><br><span class="line">      this.pdfLinkService.setDocument(null, null);</span><br><span class="line"></span><br><span class="line">      if (this.pdfHistory) &#123;</span><br><span class="line">        this.pdfHistory.reset();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return promise;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  progress = (level: any) =&gt; &#123;</span><br><span class="line">    let percent = Math.round(level * 100);</span><br><span class="line">    // Updating the bar if value increases.</span><br><span class="line">    if (percent &gt; this.getloadingBar().percent || isNaN(percent)) &#123;</span><br><span class="line">      this.getloadingBar().percent = percent;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  error = (message: any, moreInfo: any) =&gt; &#123;</span><br><span class="line">    let l10n = this.l10n;</span><br><span class="line">    let moreInfoText = [</span><br><span class="line">      l10n.get(</span><br><span class="line">        &quot;error_version_info&quot;,</span><br><span class="line">        &#123; version: PDFJS.version || &quot;?&quot;, build: PDFJS.build || &quot;?&quot; &#125;,</span><br><span class="line">        &quot;PDF.js v&#123;&#123;version&#125;&#125; (build: &#123;&#123;build&#125;&#125;)&quot;</span><br><span class="line">      ),</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    if (moreInfo) &#123;</span><br><span class="line">      moreInfoText.push(</span><br><span class="line">        l10n.get(</span><br><span class="line">          &quot;error_message&quot;,</span><br><span class="line">          &#123; message: moreInfo.message &#125;,</span><br><span class="line">          &quot;Message: &#123;&#123;message&#125;&#125;&quot;</span><br><span class="line">        )</span><br><span class="line">      );</span><br><span class="line">      if (moreInfo.stack) &#123;</span><br><span class="line">        moreInfoText.push(</span><br><span class="line">          l10n.get(&quot;error_stack&quot;, &#123; stack: moreInfo.stack &#125;, &quot;Stack: &#123;&#123;stack&#125;&#125;&quot;)</span><br><span class="line">        );</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        if (moreInfo.filename) &#123;</span><br><span class="line">          moreInfoText.push(</span><br><span class="line">            l10n.get(</span><br><span class="line">              &quot;error_file&quot;,</span><br><span class="line">              &#123; file: moreInfo.filename &#125;,</span><br><span class="line">              &quot;File: &#123;&#123;file&#125;&#125;&quot;</span><br><span class="line">            )</span><br><span class="line">          );</span><br><span class="line">        &#125;</span><br><span class="line">        if (moreInfo.lineNumber) &#123;</span><br><span class="line">          moreInfoText.push(</span><br><span class="line">            l10n.get(</span><br><span class="line">              &quot;error_line&quot;,</span><br><span class="line">              &#123; line: moreInfo.lineNumber &#125;,</span><br><span class="line">              &quot;Line: &#123;&#123;line&#125;&#125;&quot;</span><br><span class="line">            )</span><br><span class="line">          );</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      errorWrapperHide: false,</span><br><span class="line">      errorMessage: message</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    Promise.all(moreInfoText).then((parts) =&gt; &#123;</span><br><span class="line">      this.setState(&#123;</span><br><span class="line">        errorMoreInfo: parts.join(&quot;\n&quot;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  errorClose = () =&gt; &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      errorWrapperHide: true,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  errorShowMore = () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      errorMoreInfoHide: false,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  errorShowLess = () =&gt; &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      errorMoreInfoHide: true,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 获取pdf名称</span><br><span class="line">   * @param url </span><br><span class="line">   */</span><br><span class="line">  setTitleUsingUrl = (url: string) =&gt; &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      url: url</span><br><span class="line">    &#125;)</span><br><span class="line">    let title = PDFJS.getFilenameFromUrl(url) || url;</span><br><span class="line">    try &#123;</span><br><span class="line">      title = decodeURIComponent(title);</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">      // decodeURIComponent may throw URIError,</span><br><span class="line">      // fall back to using the unprocessed url in that case</span><br><span class="line">    &#125;</span><br><span class="line">    this.setTitle(title);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 设置title</span><br><span class="line">   * @param title pdf名字</span><br><span class="line">   */</span><br><span class="line">  setTitle = (title: string) =&gt; &#123;</span><br><span class="line">    document.title = title;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      title: title</span><br><span class="line">    &#125;)</span><br><span class="line">    // 传给父级</span><br><span class="line">    this.props.getTitle(title)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init = () =&gt; &#123;</span><br><span class="line">    console.log(&#x27;PDF init&#x27;)</span><br><span class="line">    PDFJS.GlobalWorkerOptions.workerSrc = import(&#x27;pdfjs-dist/build/pdf.worker&#x27;)</span><br><span class="line"></span><br><span class="line">    // 跳页初始化</span><br><span class="line">    const eventBus = new PDFViewer.EventBus();</span><br><span class="line">    this.eventBus = eventBus;</span><br><span class="line"></span><br><span class="line">    let linkService = new PDFViewer.PDFLinkService(&#123;</span><br><span class="line">      eventBus: eventBus,</span><br><span class="line">    &#125;);</span><br><span class="line">    this.pdfLinkService = linkService;</span><br><span class="line"></span><br><span class="line">    let pdfViewer = new PDFViewer.PDFViewer(&#123;</span><br><span class="line">      container: this.pageRenderRef?.current,</span><br><span class="line">      eventBus: eventBus,</span><br><span class="line">      linkService: linkService,</span><br><span class="line">      l10n: this.state.l10n,</span><br><span class="line">      useOnlyCssZoom: this.state.USE_ONLY_CSS_ZOOM,</span><br><span class="line">      textLayerMode: this.state.TEXT_LAYER_MODE,</span><br><span class="line">    &#125;);</span><br><span class="line">    this.pdfViewer = pdfViewer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    linkService.setViewer(pdfViewer);</span><br><span class="line"></span><br><span class="line">    this.l10n = PDFViewer.NullL10n;</span><br><span class="line"></span><br><span class="line">    this.pdfHistory = new PDFViewer.PDFHistory(&#123;</span><br><span class="line">      eventBus: eventBus,</span><br><span class="line">      linkService: linkService,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    linkService.setHistory(this.pdfHistory);</span><br><span class="line"></span><br><span class="line">    eventBus.on(&quot;pagesinit&quot;, () =&gt; &#123;</span><br><span class="line">      // We can use pdfViewer now, e.g. let&#x27;s change default scale.</span><br><span class="line">      pdfViewer.currentScaleValue = this.state.DEFAULT_SCALE_VALUE;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    eventBus.on(</span><br><span class="line">      &quot;pagechanging&quot;,</span><br><span class="line">      (evt: any) =&gt; &#123;</span><br><span class="line">        let page: number = evt.pageNumber; // 当前页数</span><br><span class="line">        let numPages: number = this.pdfDocument.numPages;  // 总页数</span><br><span class="line">        this.setState(&#123;</span><br><span class="line">          toPageNumber: page,</span><br><span class="line">          preDisabled: page &lt;= 1,</span><br><span class="line">          nextDisabled: page &gt;= numPages</span><br><span class="line">        &#125;)</span><br><span class="line">        // 返回给父级</span><br><span class="line">        this.props.getPageNumber(page, numPages)</span><br><span class="line">      &#125;,</span><br><span class="line">      true</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /** </span><br><span class="line">  * 前一页</span><br><span class="line">  */</span><br><span class="line">  previous = () =&gt; &#123;</span><br><span class="line">    if (this.state.preDisabled) return;</span><br><span class="line">    this.pdfViewer.currentPageNumber--;</span><br><span class="line">    console.log(this.pdfViewer)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /** </span><br><span class="line">  * 后一页</span><br><span class="line">  */</span><br><span class="line">  next = () =&gt; &#123;</span><br><span class="line">    if (this.state.nextDisabled) return;</span><br><span class="line">    this.pdfViewer.currentPageNumber++;</span><br><span class="line">    console.log(this.pdfViewer)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 缩小</span><br><span class="line">   */</span><br><span class="line">  zoomOut = (ticks: any) =&gt; &#123;</span><br><span class="line">    let newScale = this.pdfViewer.currentScale;</span><br><span class="line">    do &#123;</span><br><span class="line">      newScale = (newScale / this.state.DEFAULT_SCALE_DELTA).toFixed(2);</span><br><span class="line">      newScale = Math.floor(newScale * 10) / 10;</span><br><span class="line">      newScale = Math.max(this.state.MIN_SCALE, newScale);</span><br><span class="line">    &#125; while (--ticks &amp;&amp; newScale &gt; this.state.MIN_SCALE);</span><br><span class="line">    this.pdfViewer.currentScaleValue = newScale;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">    * 放大</span><br><span class="line">    */</span><br><span class="line">  zoomIn = (ticks: any) =&gt; &#123;</span><br><span class="line">    let newScale = this.pdfViewer.currentScale;</span><br><span class="line">    do &#123;</span><br><span class="line">      newScale = (newScale * this.state.DEFAULT_SCALE_DELTA).toFixed(2);</span><br><span class="line">      newScale = Math.ceil(newScale * 10) / 10;</span><br><span class="line">      newScale = Math.min(this.state.MAX_SCALE, newScale);</span><br><span class="line">    &#125; while (--ticks &amp;&amp; newScale &lt; this.state.MAX_SCALE);</span><br><span class="line">    this.pdfViewer.currentScaleValue = newScale;</span><br><span class="line">    console.log(this.pdfViewer.currentScaleValue)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 跳转页数</span><br><span class="line">   */</span><br><span class="line">  toPage = (page: string | number) =&gt; &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      toPageNumber: page</span><br><span class="line">    &#125;)</span><br><span class="line">    if (page) &#123;</span><br><span class="line">      this.pdfViewer.currentPageNumber = Number(page)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;React.Fragment&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id=&quot;viewerContainer&quot; ref=&#123;this.pageRenderRef&#125;&gt;</span><br><span class="line">          &lt;div id=&quot;viewer&quot; className=&quot;pdfViewer&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id=&quot;loadingBar&quot;&gt;</span><br><span class="line">          &lt;div className=&quot;progress&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div className=&quot;glimmer&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div id=&quot;errorWrapper&quot; ref=&#123;this.errorWrapper&#125; hidden=&#123;this.state.errorWrapperHide&#125;&gt;</span><br><span class="line">          &lt;div id=&quot;errorMessageLeft&quot;&gt;</span><br><span class="line">            &lt;span id=&quot;errorMessage&quot;&gt;&#123;this.state.errorMessage&#125;&lt;/span&gt;</span><br><span class="line">            &lt;button id=&quot;errorShowMore&quot; onClick=&#123;this.errorShowMore&#125;&gt;More Information&lt;/button&gt;</span><br><span class="line">            &lt;button id=&quot;errorShowLess&quot; onClick=&#123;this.errorShowLess&#125;&gt;Less Information&lt;/button&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div id=&quot;errorMessageRight&quot;&gt;</span><br><span class="line">            &lt;button id=&quot;errorClose&quot; onClick=&#123;this.errorClose&#125;&gt;Close&lt;/button&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div className=&quot;clearBoth&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;textarea id=&quot;errorMoreInfo&quot; disabled hidden=&#123;this.state.errorMoreInfoHide&#125; value=&#123;this.state.errorMoreInfo&#125;&gt;&lt;/textarea&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;footer&gt;</span><br><span class="line">          &lt;button className=&quot;toolbarButton pageUp&quot; title=&quot;Previous Page&quot; id=&quot;previous&quot; onClick=&#123;this.previous&#125;&gt;&lt;/button&gt;</span><br><span class="line">          &lt;button className=&quot;toolbarButton pageDown&quot; title=&quot;Next Page&quot; id=&quot;next&quot; onClick=&#123;this.next&#125;&gt;&lt;/button&gt;</span><br><span class="line">          &lt;input type=&#x27;text&#x27; id=&quot;pageNumber&quot; className=&quot;toolbarField pageNumber&quot; value=&#123;this.state.toPageNumber&#125; onChange=&#123;e =&gt; this.toPage(e?.target?.value)&#125; size=&#123;4&#125; min=&quot;1&quot; /&gt;</span><br><span class="line">          &lt;button className=&quot;toolbarButton zoomOut&quot; title=&quot;Zoom Out&quot; id=&quot;zoomOut&quot; onClick=&#123;this.zoomOut&#125;&gt;&lt;/button&gt;</span><br><span class="line">          &lt;button className=&quot;toolbarButton zoomIn&quot; title=&quot;Zoom In&quot; id=&quot;zoomIn&quot; onClick=&#123;this.zoomIn&#125;&gt;&lt;/button&gt;</span><br><span class="line">        &lt;/footer&gt;</span><br><span class="line">      &lt;/React.Fragment&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">../images/document_bg.png</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../images/toolbar_background.png</span>);</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> -<span class="number">0.2rem</span> <span class="number">0.5rem</span> <span class="built_in">rgba</span>(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>, <span class="number">0.75</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toolbarButton</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-position</span>: center center;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toolbarButton</span><span class="selector-class">.pageUp</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../images/icon_previous_page.png</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: .<span class="number">4rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toolbarButton</span><span class="selector-class">.pageDown</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">18%</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../images/icon_next_page.png</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: .<span class="number">4rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#pageNumber</span> &#123;</span><br><span class="line">  -moz-appearance: textfield; <span class="comment">/* hides the spinner in moz */</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">28%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">36%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">4rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../images/div_line_left.png</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">../images/div_line_right.png</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: left, right;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">0.2rem</span>, <span class="number">0.2rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toolbarButton</span><span class="selector-class">.zoomOut</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">64%</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../images/icon_zoom_out.png</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: .<span class="number">5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toolbarButton</span><span class="selector-class">.zoomIn</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">82%</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../images/icon_zoom_in.png</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: .<span class="number">5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.toolbarButton</span><span class="selector-attr">[disabled]</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hidden</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#viewerContainer</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  // <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">canvas</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loadingBar</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0.6rem</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loadingBar</span> <span class="selector-class">.progress</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">221</span>, <span class="number">221</span>, <span class="number">221</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">transition</span>: width <span class="number">200ms</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> progressIndeterminate &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loadingBar</span> <span class="selector-class">.progress</span><span class="selector-class">.indeterminate</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">153</span>, <span class="number">153</span>, <span class="number">153</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">transition</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#loadingBar</span> <span class="selector-class">.indeterminate</span> <span class="selector-class">.glimmer</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5rem</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    to right,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">153</span>, <span class="number">153</span>, <span class="number">153</span>, <span class="number">1</span>) <span class="number">0%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>) <span class="number">50%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">153</span>, <span class="number">153</span>, <span class="number">153</span>, <span class="number">1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">animation</span>: progressIndeterminate <span class="number">2s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#errorWrapper</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: none repeat scroll <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">85</span>, <span class="number">85</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">3.2rem</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1000</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.3rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.8em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#errorMessageLeft</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#errorMessageRight</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#errorMoreInfo</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.3rem</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.3rem</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">98%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pdf-wrap</span>&#123;</span><br><span class="line">  <span class="selector-class">.page-title</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pdfjs-dist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写Promise，代码记录</title>
      <link href="/2020/12/15/promiseJs/"/>
      <url>/2020/12/15/promiseJs/</url>
      
        <content type="html"><![CDATA[<h4 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h4><p> 1.1 “promise”是一个具有then方法的对象或函数，其行为符合此规范。也就是说Promise是一个对象或者函数。<br> 1.2 “thenable”是一个定义then方法的对象或函数，说句人话也就是这个对象必须要拥有then方法。<br> 1.3 “value”是任何合法的JavaScript值（包括undefined、或者promise）。<br> 1.4 promise中的异常需要使用throw语句抛出。<br> 1.5 当promise失败的时候需要给出失败的原因。</p><h4 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h4><p> 1.1 promise必须要拥有三个状态: pending, fulfilled 和 rejected。<br> 1.2 当promise的状态是pending时，他可以变为成功fulfilled或者失败rejected。<br> 1.3 如果promise是成功状态，则他不能转换成任何状态，而且需要一个成功的值，并且这个值不能被改变。<br> 1.4 如果promise是失败状态，则他不能转换成任何状态，而且需要一个失败的原因，并且这个值不能被改变。</p><h4 id="then方法说明"><a href="#then方法说明" class="headerlink" title="then方法说明"></a>then方法说明</h4><p> 1.1 一个promise必须要有一个then方法，而且可以访问promise最终的结果，成功的值。<br> 1.2 then方法需要接收两个参数，onFulfilled 和 onRejected这两个参数是可选参数。</p><h4 id="catch方法说明"><a href="#catch方法说明" class="headerlink" title="catch方法说明"></a>catch方法说明</h4><p> 1.1 一个promise必须要有一个catch方法，而且可以访问promise最终的结果，失败的值。</p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">Promise</span>(<span class="params">executor</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> _self = <span class="variable language_">this</span>;</span><br><span class="line">    _self.<span class="property">status</span> = <span class="string">&#x27;pending&#x27;</span>       <span class="comment">// 三个状态 pending / resolved / rejected</span></span><br><span class="line">    _self.<span class="property">result</span>                   <span class="comment">// 存放成功resolve的数据</span></span><br><span class="line">    _self.<span class="property">error</span>                    <span class="comment">// 存放失败reject的数据</span></span><br><span class="line">    _self.<span class="property">onResolvedCallbacks</span> = [] <span class="comment">// 存放所有成功的回调</span></span><br><span class="line">    _self.<span class="property">onRejectedCallbacks</span> = [] <span class="comment">// 存放所有失败的回调</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// resolve reject 接受返回给then函数的 数据、</span></span><br><span class="line">    <span class="comment">// resolve 和reject只会触发一次，且只会触发一个，要么成功resolve，要么失败reject</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (_self.<span class="property">status</span> !== <span class="string">&#x27;pending&#x27;</span>) <span class="keyword">return</span></span><br><span class="line">      <span class="comment">// 更改状态</span></span><br><span class="line">      _self.<span class="property">status</span> = <span class="string">&#x27;fulfilled&#x27;</span></span><br><span class="line">      <span class="comment">// 缓存结果给then函数使用</span></span><br><span class="line">      _self.<span class="property">result</span> = res</span><br><span class="line"></span><br><span class="line">      _self.<span class="property">onResolvedCallbacks</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">fn</span>) &#123;</span><br><span class="line">        <span class="title function_">fn</span>();</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">reject</span>(<span class="params">error</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (_self.<span class="property">status</span> !== <span class="string">&#x27;pending&#x27;</span>) <span class="keyword">return</span></span><br><span class="line">      _self.<span class="property">status</span> = <span class="string">&#x27;rejected&#x27;</span></span><br><span class="line">      _self.<span class="property">error</span> = error</span><br><span class="line">      _self.<span class="property">onRejectedCallbacks</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">fn</span>) &#123;</span><br><span class="line">        <span class="title function_">fn</span>(_self.<span class="property">error</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. promise 传入的函数立即执行，并接受两个参数 resolve reject</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="title function_">executor</span>(resolve, reject)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="title function_">reject</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// then 方法 接受成功的回调onFulfilled 失败的回调onRejected</span></span><br><span class="line">  <span class="title class_">Promise</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">then</span> = <span class="keyword">function</span> (<span class="params">onFulfilled, onRejected</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> _self = <span class="variable language_">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// then值穿透， eg: p.then().then(data =&gt; &#123;console.log(&#x27;then2:&#x27;, data)&#125;)</span></span><br><span class="line">    <span class="comment">// 第一个then没有传值，需要把数据传入下一个</span></span><br><span class="line">    onFulfilled = <span class="keyword">typeof</span> onFulfilled === <span class="string">&#x27;function&#x27;</span> ? onFulfilled : <span class="keyword">function</span> (<span class="params">data</span>) &#123; <span class="keyword">return</span> data; &#125;;</span><br><span class="line">    onRejected = <span class="keyword">typeof</span> onRejected === <span class="string">&#x27;function&#x27;</span> ? onRejected : <span class="keyword">function</span> (<span class="params">err</span>) &#123; <span class="keyword">throw</span> err; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> nextPromise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (_self.<span class="property">status</span> === <span class="string">&#x27;fulfilled&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> thenFnRes = <span class="title function_">onFulfilled</span>(_self.<span class="property">result</span>);</span><br><span class="line">          <span class="comment">// 前一个then入参函数如果return了数据，需要把数据传给下一个then</span></span><br><span class="line">          <span class="title function_">resolvePromise</span>(nextPromise, thenFnRes, resolve, reject);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">          <span class="title function_">reject</span>(e)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// promise是可以多个then函数</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (_self.<span class="property">status</span> === <span class="string">&#x27;rejected&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> thenFnRes = <span class="title function_">onRejected</span>(_self.<span class="property">error</span>);</span><br><span class="line">          <span class="title function_">resolvePromise</span>(nextPromise, thenFnRes, resolve, reject);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">          <span class="title function_">reject</span>(e)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 当异步还处于pending状态收集callback</span></span><br><span class="line">      <span class="keyword">if</span> (_self.<span class="property">status</span> === <span class="string">&#x27;pending&#x27;</span>) &#123;</span><br><span class="line">        _self.<span class="property">onResolvedCallbacks</span>.<span class="title function_">push</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> thenFnRes = <span class="title function_">onFulfilled</span>(_self.<span class="property">result</span>);</span><br><span class="line">            <span class="comment">// 这里需要把 onFulfilled执行的结果作为result resolve给下一个then</span></span><br><span class="line">            <span class="title function_">resolvePromise</span>(nextPromise, thenFnRes, resolve, reject);</span><br><span class="line">          &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="title function_">reject</span>(e)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        _self.<span class="property">onRejectedCallbacks</span>.<span class="title function_">push</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> catchFnRes = <span class="title function_">onRejected</span>(_self.<span class="property">error</span>);</span><br><span class="line">            <span class="title function_">resolvePromise</span>(nextPromise, thenFnRes, resolve, reject);</span><br><span class="line">            <span class="title function_">resolve</span>(catchFnRes)</span><br><span class="line">          &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="title function_">reject</span>(e)</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// return promise 保证可以链式调用</span></span><br><span class="line">    <span class="keyword">return</span> nextPromise</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Promise</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">catch</span> = <span class="keyword">function</span> (<span class="params">errorhandler</span>) &#123;</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">then</span>(<span class="literal">null</span>, errorhandler)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理then入参函数</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; nextPromise then执行后return的Promise，保证链式调用</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; thenFnRes then传入函数执行的结果</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; resolve  nextPromise 的 resolve</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; reject nextPromise 的 reject</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">resolvePromise</span>(<span class="params">nextPromise, thenFnRes, resolve, reject</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// then函数的入参函数没有return数据</span></span><br><span class="line">    <span class="keyword">if</span> (!thenFnRes) &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(thenFnRes)</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 我们的Promise可能会和别人的Promise嵌套使用，官方文档要求，Promise中要书写判断，避免对方Promise不规范产生的影响。</span></span><br><span class="line">    <span class="comment">// 比如对方的Promise成功和失败都调用了，或者多次调用了成功。需要使用一个called的变量来表示Promise有没有被调用过。</span></span><br><span class="line">    <span class="keyword">let</span> called; <span class="comment">// 表示Promise有没有被调用过</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// then函数返回一个promise，提供链式调用</span></span><br><span class="line">    <span class="comment">// 防止then入参函数return返回的这个promise给promise, 这样会重复调用同一个promise</span></span><br><span class="line">    <span class="keyword">if</span> (nextPromise === thenFnRes) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">TypeError</span>(<span class="string">&#x27;循环引用了，请检查then函数return数据是否正确！&#x27;</span>))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果返回的是object类型，需要判断是否是promise,还是普通的数据</span></span><br><span class="line">    <span class="comment">// 如果是promise需要执行这个promise并拿到resolve的结果返回给下一个then函数</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> thenFnRes === <span class="string">&#x27;object&#x27;</span> || <span class="keyword">typeof</span> thenFnRes === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// then 存在是promise </span></span><br><span class="line">        <span class="keyword">let</span> then = thenFnRes.<span class="property">then</span>;</span><br><span class="line">        <span class="comment">// 调用then, 这个then函数的this应该指向 thenFnRes</span></span><br><span class="line">        then.<span class="title function_">call</span>(thenFnRes, <span class="keyword">function</span> (<span class="params">y</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (called) &#123; <span class="comment">// 是否调用过</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          called = <span class="literal">true</span>;</span><br><span class="line">          <span class="comment">// 成功的结果，让nextPromise变为成功状态</span></span><br><span class="line">          <span class="comment">// y也有可能是promise，需要递归调用 resolvePromise</span></span><br><span class="line">          <span class="title function_">resolvePromise</span>(nextPromise, y, resolve, reject)</span><br><span class="line">        &#125;, <span class="keyword">function</span> (<span class="params">r</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (called) &#123; <span class="comment">// 是否调用过</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          called = <span class="literal">true</span>;</span><br><span class="line">          <span class="title function_">reject</span>(r);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (called) &#123; <span class="comment">// 是否调用过</span></span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        called = <span class="literal">true</span>;</span><br><span class="line">        <span class="title function_">reject</span>(e);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (called) &#123; <span class="comment">// 是否调用过</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      called = <span class="literal">true</span>;</span><br><span class="line">      <span class="title function_">resolve</span>(thenFnRes)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">resolve</span>(thenFnRes)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;then1:&#x27;</span>, res)</span><br><span class="line">  <span class="keyword">return</span> res + <span class="number">1</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>()</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;then3:&#x27;</span>, res)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">new</span> <span class="title class_">Error</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;catch:&#x27;</span>, res)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// then1: 1</span></span><br><span class="line"><span class="comment">// then3: 2</span></span><br><span class="line"><span class="comment">// catch: TypeError: (intermediate value) is not a constructor</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EventLoop事件循环练习题</title>
      <link href="/2020/12/10/taskdemo/"/>
      <url>/2020/12/10/taskdemo/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timeout&#x27;</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;then&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// start =&gt; then =&gt; timeout</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timeout1&#x27;</span>);</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;then1&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;then2&#x27;</span>);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;timeout2&#x27;</span>);</span><br><span class="line">    &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// then2 =&gt; timeout1 =&gt; then1 =&gt; timeout2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>)&#123;</span><br><span class="line">    <span class="title function_">reject</span>();</span><br><span class="line">    <span class="title function_">resolve</span>();</span><br><span class="line">&#125;);</span><br><span class="line">p.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;成功&#x27;</span>);</span><br><span class="line">&#125;, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;失败&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 失败</span></span><br><span class="line"><span class="comment">// 只会打印失败，因为Promise的状态只会变化一次。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="title function_">resolve</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1， 2， 3</span></span><br><span class="line"><span class="comment">// new Promise传入的函数是同步代码，立刻就会被执行，所以会打印出1和2，</span></span><br><span class="line"><span class="comment">// Promise.then是微任务，当代码自行结束，会清空微任务队列，打印出3.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="number">2</span>)</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="number">3</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(res));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function">(<span class="params">x</span>) =&gt;</span> x + <span class="number">1</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">x</span> =&gt;</span> &#123; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;My Error&#x27;</span>)&#125;)</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function">() =&gt;</span> <span class="number">1</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">x</span> =&gt;</span> x + <span class="number">1</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">x</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(x))</span><br><span class="line">.<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> <span class="title function_">executor</span>(<span class="params">resolve</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>;j&lt;<span class="number">100</span>;j++)&#123;</span><br><span class="line">    j=<span class="number">99</span>&amp;&amp;<span class="title function_">resolve</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2 3 5 4 1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 start&#x27;</span>); <span class="comment">// 2</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">async2</span>(); </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async2&#x27;</span>); <span class="comment">// 3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script start&#x27;</span>); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;setTimeout&#x27;</span>); <span class="comment">// 7</span></span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">async1</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>); <span class="comment">// 4</span></span><br><span class="line">    <span class="title function_">resolve</span>();</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise2&#x27;</span>); <span class="comment">// 6</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script end2&#x27;</span>); <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 start&#x27;</span>)  <span class="comment">// 2</span></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">async2</span>()               <span class="comment">// await后面的函数，相当于new Promise传入的函数是立即执行的</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async1 end&#x27;</span>)    <span class="comment">// 5 await下面的代码在await成功之后执行，相当于Promise.then，是一个微任务，不过是语法糖让这行代码看起来是同步的，其实不是的</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">async2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;async2&#x27;</span>) <span class="comment">// 3</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;script start&#x27;</span>) <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;setTimeout&#x27;</span>) <span class="comment">// 7</span></span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="title function_">async1</span>(); </span><br><span class="line">   </span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>( <span class="keyword">function</span>(<span class="params"> resolve </span>) &#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise1&#x27;</span>) <span class="comment">// 4</span></span><br><span class="line"> <span class="title function_">resolve</span>();</span><br><span class="line">&#125;).<span class="title function_">then</span>( <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;promise2&#x27;</span>)  <span class="comment">// 6</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EventLoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli2 / vue-cli3 / vite+vue3.0 打包环境区分</title>
      <link href="/2020/12/07/vue-bulid-env/"/>
      <url>/2020/12/07/vue-bulid-env/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>刚好最近把 vue-cli2 / vue-cli3 / vite+vue3.0 的环境区分都来了一遍，特此记录。下文的方法都是自己使用亲测有效的，不过也不是唯一的方法。</p><h3 id="vue-cli2"><a href="#vue-cli2" class="headerlink" title="vue-cli2"></a>vue-cli2</h3><p>vue-cli2生成的项目目录下有<code>build</code>、<code>config</code>这两个目录，项目的<code>webpack配置</code>和<code>运行环境的区分</code>就是在这两个文件夹下去处理的；</p><h4 id="1-下载cross-env"><a href="#1-下载cross-env" class="headerlink" title="1.下载cross-env"></a>1.下载cross-env</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cross-env --save-dev</span><br></pre></td></tr></table></figure><h4 id="2-修改pageage-json中script"><a href="#2-修改pageage-json中script" class="headerlink" title="2.修改pageage.json中script"></a>2.修改pageage.json中script</h4><blockquote><p>增加<code>build:test</code>、<code>build:uat</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;build&quot;: &quot;node build/build.js&quot;,</span><br><span class="line">  &quot;build:test&quot;: &quot;cross-env NODE_ENV=production ENV_CONFIG=test node build/build.js&quot;,</span><br><span class="line">  &quot;build:uat&quot;: &quot;cross-env NODE_ENV=production ENV_CONFIG=uat node build/build.js&quot;,</span><br><span class="line">  ...</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-更改各种环境下的baseUrl"><a href="#3-更改各种环境下的baseUrl" class="headerlink" title="3.更改各种环境下的baseUrl"></a>3.更改各种环境下的baseUrl</h4><p>在<code>config -&gt; dev.env.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"><span class="keyword">const</span> merge = <span class="built_in">require</span>(<span class="string">&#x27;webpack-merge&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> prodEnv = <span class="built_in">require</span>(<span class="string">&#x27;./prod.env&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">merge</span>(prodEnv, &#123;</span><br><span class="line">    <span class="attr">NODE_ENV</span>: <span class="string">&#x27;&quot;development&quot;&#x27;</span>,</span><br><span class="line">    <span class="attr">API</span>: <span class="string">&#x27;&quot;http://localhost:8083&quot;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>config -&gt; prod.env.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">API</span> = <span class="string">&#x27;&quot;https://prod/&quot;&#x27;</span> <span class="comment">// prod </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">ENV_CONFIG</span> === <span class="string">&#x27;test&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable constant_">API</span> = <span class="string">&#x27;&quot;https://test/&quot;&#x27;</span> <span class="comment">// test</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">ENV_CONFIG</span> === <span class="string">&#x27;uat&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable constant_">API</span> = <span class="string">&#x27;&quot;https://UAT/&quot;&#x27;</span>  <span class="comment">// uat</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">NODE_ENV</span>: <span class="string">&#x27;&quot;production&quot;&#x27;</span>,</span><br><span class="line">    <span class="attr">API</span>: <span class="variable constant_">API</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>定义<code>axios</code>的 <code>baseUrl</code></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// create an axios instance</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>: process.<span class="property">env</span>.<span class="property">API</span>, <span class="comment">// api的base_url</span></span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">500000</span>, <span class="comment">// request timeout</span></span><br><span class="line">    <span class="attr">withCredentials</span>: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="vue-cli3"><a href="#vue-cli3" class="headerlink" title="vue-cli3"></a>vue-cli3</h3><p>vue-cli3生的项目webpack的配置文件都是影藏起来的，提供了<code>vue.config.js</code>去配置一些webpack。</p><h4 id="1-修改pageage-json中script"><a href="#1-修改pageage-json中script" class="headerlink" title="1.修改pageage.json中script"></a>1.修改pageage.json中script</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;build&quot;: &quot;vue-cli-service build&quot;, </span><br><span class="line">  &quot;build:test&quot;: &quot;vue-cli-service build --mode test&quot;,</span><br><span class="line">  &quot;build:uat&quot;: &quot;vue-cli-service build --mode uat&quot;,</span><br><span class="line">  ...</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="2-新建-env文件"><a href="#2-新建-env文件" class="headerlink" title="2.新建.env文件"></a>2.新建<code>.env</code>文件</h4><p>在根目录下建 <code>.env.test</code>、<code>.env.uat</code> 两个文件, 用<code>VUE_APP_</code>来增加环境区分标识</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// .env.test</span><br><span class="line"></span><br><span class="line">NODE_ENV = &#x27;production&#x27;</span><br><span class="line">VUE_APP_TITLE  = &#x27;test&#x27;</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// .env.uat</span><br><span class="line"></span><br><span class="line">NODE_ENV = &#x27;production&#x27;</span><br><span class="line">VUE_APP_TITLE  = &#x27;uat&#x27;</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-设置baseUrl"><a href="#3-设置baseUrl" class="headerlink" title="3.设置baseUrl"></a>3.设置baseUrl</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// base.url.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">BASE_URL</span> = (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> baseUrl = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">switch</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;development&#x27;</span>:</span><br><span class="line">      <span class="comment">// 本地的请求url</span></span><br><span class="line">      baseUrl = <span class="string">&#x27;http://localhost:8080/api&#x27;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;production&#x27;</span>:</span><br><span class="line">      <span class="comment">// 生产环境url</span></span><br><span class="line">      baseUrl = <span class="string">&#x27;https://prod/api&#x27;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">VUE_APP_TITLE</span> === <span class="string">&#x27;test&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// 测试环境地址</span></span><br><span class="line">        baseUrl = <span class="string">&#x27;https://test/api&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">VUE_APP_TITLE</span> === <span class="string">&#x27;uat&#x27;</span>) &#123;</span><br><span class="line">        <span class="comment">// uat 环境地址</span></span><br><span class="line">        baseUrl = <span class="string">&#x27;https://uat/api&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> baseUrl;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="variable constant_">BASE_URL</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> <span class="variable constant_">BASE_URL</span> <span class="keyword">from</span> <span class="string">&#x27;./base.url&#x27;</span>;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> &#123; baseUrl &#125; = <span class="variable constant_">BASE_URL</span>;</span><br><span class="line"></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">timeout</span> = <span class="number">500000</span>;</span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = baseUrl;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="vite-vue3-0"><a href="#vite-vue3-0" class="headerlink" title="vite+vue3.0"></a>vite+vue3.0</h3><p>vite+vue3.0做环境区分是最简单的。</p><h4 id="1-修改pageage-json中script-1"><a href="#1-修改pageage-json中script-1" class="headerlink" title="1.修改pageage.json中script"></a>1.修改pageage.json中script</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;build&quot;: &quot;vite build --mode dev&quot;,</span><br><span class="line">&quot;build:test&quot;: &quot;vite build --mode test&quot;,</span><br><span class="line">&quot;build:uat&quot;: &quot;vite build --mode uat&quot;</span><br></pre></td></tr></table></figure><h4 id="2-新建环境文件"><a href="#2-新建环境文件" class="headerlink" title="2.新建环境文件"></a>2.新建环境文件</h4><p>在根目录下建 <code>.env.[环境名]</code>，然后打开文件写入以<code>VITE_</code>为开头的key</p><ul><li><code>.env.dev</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VITE_ENV=&#x27;dev&#x27;</span><br><span class="line">VITE_BASE_URL=&#x27;http://localhost:3001/api&#x27;</span><br></pre></td></tr></table></figure><ul><li><code>.env.prod</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VITE_ENV=&#x27;prod&#x27;</span><br><span class="line">VITE_BASE_URL=&#x27;http://prod/api&#x27;</span><br></pre></td></tr></table></figure><ul><li><code>.env.test</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VITE_ENV=&#x27;test&#x27;</span><br><span class="line">VITE_BASE_URL=&#x27;http://test/api&#x27;</span><br></pre></td></tr></table></figure><h4 id="3-设置baseUrl-1"><a href="#3-设置baseUrl-1" class="headerlink" title="3.设置baseUrl"></a>3.设置baseUrl</h4><p><code>vite</code>这里不再是从<code>process.env</code>获取环境变量了；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_URL</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue项目环境区分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0 + less/sass</title>
      <link href="/2020/12/03/less/"/>
      <url>/2020/12/03/less/</url>
      
        <content type="html"><![CDATA[<h3 id="vue3-0项目增加less-sass"><a href="#vue3-0项目增加less-sass" class="headerlink" title="vue3.0项目增加less/sass"></a>vue3.0项目增加less/sass</h3><blockquote><p>先安装less less-loader / scss  scss-loader  / style-loader</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yarn add less less-loader style-loader -DEV</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">yarn add scss scss-loader style-loader -DEV</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue add style-resources-loader</span><br></pre></td></tr></table></figure><p><img src="/images/vue/vue3.0+less.jpg"></p><blockquote><p>然后会在根目录下自动建一个<code>vue.config.js</code></p></blockquote><p><img src="/images/vue/vue3.0+less1.jpg"></p><h3 id="更改一下配置就OK了"><a href="#更改一下配置就OK了" class="headerlink" title="更改一下配置就OK了"></a>更改一下配置就OK了</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">pluginOptions</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;style-resources-loader&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">preProcessor</span>: <span class="string">&#x27;less&#x27;</span>,</span><br><span class="line">      <span class="attr">patterns</span>: [</span><br><span class="line">        path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./src/assets/style/*.less&#x27;</span>)</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>H5兼容问题记录</title>
      <link href="/2020/11/26/compatibility/"/>
      <url>/2020/11/26/compatibility/</url>
      
        <content type="html"><![CDATA[<h4 id="准备作妖"><a href="#准备作妖" class="headerlink" title="准备作妖"></a>准备作妖</h4><h6 id="1-移动端h5页面软键盘弹出后-背景图片被顶上去-高频"><a href="#1-移动端h5页面软键盘弹出后-背景图片被顶上去-高频" class="headerlink" title="1.移动端h5页面软键盘弹出后 背景图片被顶上去(高频)"></a>1.移动端h5页面软键盘弹出后 背景图片被顶上去(高频)</h6><blockquote><p>移动端h5页面在软键盘弹出后body的高度会被压缩，就导致原本高度100%的背景图被顶上去一截，需要把div的高度强行设回100%才能解决这个问题</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;app&quot; :style=&quot;&#123; height: bodyHeight + &#x27;px&#x27; &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">mounted()&#123;</span><br><span class="line"> this.bodyHeight=document.documentElement.clientHeight</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-ios手机input、textarea等元素的placeholder如果有多行，软键盘输入数据然后再删除，placeholder就只能显示一行了，不能全部展示-高频-；"><a href="#2-ios手机input、textarea等元素的placeholder如果有多行，软键盘输入数据然后再删除，placeholder就只能显示一行了，不能全部展示-高频-；" class="headerlink" title="2. ios手机input、textarea等元素的placeholder如果有多行，软键盘输入数据然后再删除，placeholder就只能显示一行了，不能全部展示(高频)；"></a>2. ios手机input、textarea等元素的placeholder如果有多行，软键盘输入数据然后再删除，placeholder就只能显示一行了，不能全部展示(高频)；</h6><blockquote><p>这个bug 只有ios手机才有；<br>解决思路：在input输入的有值得时候给元素<code>position:relative</code>,没数据的时候<code>position:static</code>,通过改变css让元素重新渲染。这里不一定就要用<code>position</code>，其他样式都可以，主要是要让元素重新渲染；</p></blockquote><h6 id="3-ios-软键盘将页面顶到上面，页面软键盘关掉之后页面下部分空白，需要手动把页面滚动到底部的问题"><a href="#3-ios-软键盘将页面顶到上面，页面软键盘关掉之后页面下部分空白，需要手动把页面滚动到底部的问题" class="headerlink" title="3. ios 软键盘将页面顶到上面，页面软键盘关掉之后页面下部分空白，需要手动把页面滚动到底部的问题"></a>3. ios 软键盘将页面顶到上面，页面软键盘关掉之后页面下部分空白，需要手动把页面滚动到底部的问题</h6><blockquote><p>让input在失去焦点的时候，滚动到页面最顶部</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">//页面滚动到顶部</span></span><br></pre></td></tr></table></figure><p>长期更新。。。</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0创建项目初体验</title>
      <link href="/2020/09/27/vue3-0init/"/>
      <url>/2020/09/27/vue3-0init/</url>
      
        <content type="html"><![CDATA[<h3 id="vue3-0已经发布啦"><a href="#vue3-0已经发布啦" class="headerlink" title="vue3.0已经发布啦~"></a>vue3.0已经发布啦~</h3><p>记录一下自己创建vue3.0项目的学习过程。</p><h3 id="更新的一些东西"><a href="#更新的一些东西" class="headerlink" title="更新的一些东西"></a>更新的一些东西</h3><blockquote><ol><li>Object.defineProperty =&gt; Proxy</li><li>vdom 静态标记更加强大</li><li>Composition API</li><li>vite</li></ol></blockquote><h3 id="初始项目"><a href="#初始项目" class="headerlink" title="初始项目"></a>初始项目</h3><p>一改vue2.x使用vue-cli, vue3.0基于vite去创建项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm init vite-app &lt;project-name&gt;</span><br><span class="line">cd &lt;project-name&gt;</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">├── index.html</span><br><span class="line">├── package.json</span><br><span class="line">├── public</span><br><span class="line">│   └── favicon.ico</span><br><span class="line">└── src</span><br><span class="line">    ├── App.vue</span><br><span class="line">    ├── assets</span><br><span class="line">    │   └── logo.png</span><br><span class="line">    ├── components</span><br><span class="line">    │   └── HelloWorld.vue</span><br><span class="line">    ├── index.css</span><br><span class="line">    └── main.js</span><br></pre></td></tr></table></figure><h3 id="index-html-main-js"><a href="#index-html-main-js" class="headerlink" title="index.html/main.js"></a>index.html/main.js</h3><p>可以看到 main.js的引用写了<code>type=&quot;module&quot;</code>,利用浏览器的自带的import机制；</p><blockquote><p>index.html</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;link rel=&quot;icon&quot; href=&quot;/favicon.ico&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;title&gt;Vite App&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;script type=&quot;module&quot; src=&quot;/src/main.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>main.js 初始实例不再是 <code>new vue(option)</code>，改为了<code>createApp(App)</code></li><li><code>Vue.prototype</code>扩展方法改为了<code>app.config.globalProperties</code></li><li>还有一个需要注意的地方，vue3.0 setup内部不支持this，像vue2.x里可以 Vue.prototype扩展一些全局方法，在页面使用直接this就可以访问，在<code>Composition API</code>里面已经不能这么玩了😂。</li></ul><blockquote><p>main.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./assets/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> config <span class="keyword">from</span> <span class="string">&#x27;./utils/config_globalProperties.ts&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// app.config: 全局配置的对象 </span></span><br><span class="line"><span class="comment">// app.config.globalProperties代替Vue 2.x Vue.prototype 扩展</span></span><br><span class="line"><span class="comment">// vue3.0 setup内部不支持this, 一些公共方法挂载vue也是访问不到的</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(config).<span class="title function_">forEach</span>(<span class="function"><span class="params">ele</span> =&gt;</span> &#123;</span><br><span class="line">  app.<span class="property">config</span>.<span class="property">globalProperties</span>[ele] = config[ele]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用挂载</span></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Composition-API"><a href="#Composition-API" class="headerlink" title="Composition API"></a>Composition API</h3><h4 id="1-setup"><a href="#1-setup" class="headerlink" title="1.setup"></a>1.setup</h4><p>组件选项创建后在组件创建之前执行的组件选项，它用作组合API的入口点,相当于<code>beforCreated()</code>、<code>created()</code>；<br>vue2.x 在写页面的时候，<code>script</code>里面，是写的<code>option Api</code>导出一个对象，对象里面就是<code>data</code>、<code>methods</code>、<code>mounted</code>…..<br>现在直接一个<code>setup</code>函数，在<code>setup</code>里面把数据return给template；<br>下面是官网的例子，非常清晰：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- MyBook.vue --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; readersNumber &#125;&#125; &#123;&#123; book.title &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; ref, reactive &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    setup() &#123;</span><br><span class="line">      const readersNumber = ref(0)</span><br><span class="line">      const book = reactive(&#123; title: &#x27;Vue 3 Guide&#x27; &#125;)</span><br><span class="line"></span><br><span class="line">      // expose to template</span><br><span class="line">      return &#123;</span><br><span class="line">        readersNumber,</span><br><span class="line">        book</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="2-ref"><a href="#2-ref" class="headerlink" title="2.ref"></a>2.ref</h4><p>是对基础数据进行双向绑定的Api，经过ref过的数据，需要通过value属性拿到值；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="property">value</span>) <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h4 id="3-reactive"><a href="#3-reactive" class="headerlink" title="3.reactive"></a>3.reactive</h4><p>引用类型的数据结构使用<code>reactive</code>,使用<code>reactive</code>有一个要注意的点，最好不要对reactive过的对象做结构操作，会使reactive过的对象里面的基本数据类型失去双向绑定，对解构的数据做更改是不会再去更新reactive的这个对象了。建议对reactive的数据慎用解构，直接操作reactive的对象，免得导致一些不必要的坑;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> obj = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="string">&quot;b&quot;</span>,</span><br><span class="line">    <span class="attr">c</span>: &#123;</span><br><span class="line">      <span class="attr">c1</span>: <span class="string">&quot;c1&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 数据更新</span></span><br><span class="line">  obj.<span class="property">a</span> = <span class="string">&quot;我是a呀&quot;</span>;</span><br><span class="line">  obj.<span class="property">b</span> = <span class="string">&quot;我是b呀&quot;</span>;</span><br><span class="line">  obj.<span class="property">c</span>.<span class="property">c1</span> = <span class="string">&quot;我是c1呀&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注意：对reactive的数据解构会导致 基础数据类型 失去reactive</span></span><br><span class="line">  <span class="keyword">let</span> &#123; a, c &#125; = obj;</span><br><span class="line">  a = <span class="string">&quot;我是被解构的a&quot;</span>;     <span class="comment">// 已经脱离reactive</span></span><br><span class="line">  c.<span class="property">c1</span> = <span class="string">&quot;我是被解构的c1&quot;</span>; <span class="comment">// 还是可以更改到obj</span></span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(obj); <span class="comment">// &#123;a: &quot;我是a呀&quot;,b: &quot;我是b呀&quot;,c: &#123;c1: &quot;我是被解构的c1&quot;&#125;&#125;</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a);   <span class="comment">// 我是被解构的a</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(c);   <span class="comment">// &#123;c1: &quot;我是被解构的c1&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-Lifecycle-Hooks-生命周期"><a href="#4-Lifecycle-Hooks-生命周期" class="headerlink" title="4.Lifecycle Hooks 生命周期"></a>4.Lifecycle Hooks 生命周期</h4><p><code>composition Api</code>里面生命周期也有所变化，<code>beforeCreate</code>、<code>created</code>被setup替代，其他生命周期均多了<code>on</code>:</p><ul><li><del><code>beforeCreate</code></del> -&gt; <code>use setup()</code></li><li><del><code>created</code></del> -&gt; <code>use setup()</code></li><li><code>beforeMount</code> -&gt; <code>onBeforeMount</code></li><li><code>mounted</code> -&gt; <code>onMounted</code></li><li><code>beforeUpdate</code> -&gt; <code>onBeforeUpdate</code></li><li><code>updated</code> -&gt; <code>onUpdated</code></li><li><code>beforeUnmount</code> -&gt; <code>onBeforeUnmount</code></li><li><code>unmounted</code> -&gt; <code>onUnmounted</code></li><li><code>errorCaptured</code> -&gt; <code>onErrorCaptured</code></li><li><code>renderTracked</code> -&gt; <code>onRenderTracked</code></li><li><code>renderTriggered</code> -&gt; <code>onRenderTriggered</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted, onUpdated, onUnmounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MyComponent</span> = &#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mounted!&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">onUpdated</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;updated!&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">onUnmounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;unmounted!&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-Provide-Inject"><a href="#5-Provide-Inject" class="headerlink" title="5.Provide / Inject"></a>5.Provide / Inject</h4><p>其实这个跟<code>React.context</code>很类似，都是为了解决组件嵌套多层props传值的问题(避免数据多层传递的繁琐性)，在父级把需要传递的数据通过<code>Provide</code>包裹，在需要用到数据的子组件使用<code>Inject</code>注入即可使用，在子级修改<code>Inject</code>后的值父级的值是动态改变的。</p><blockquote><p>app.vue 父级</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; /&gt;</span><br><span class="line">  &lt;HelloWorld /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &quot;./components/HelloWorld.vue&quot;;</span><br><span class="line">import &#123; provide, ref &#125; from &quot;vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld,</span><br><span class="line">  &#125;,</span><br><span class="line">  setup() &#123;</span><br><span class="line">    let msg = ref(&quot;Hello Vue 3.0 + Vite&quot;);</span><br><span class="line"></span><br><span class="line">    // 提供数据 provide inject</span><br><span class="line">    // vue3.0 一改组件</span><br><span class="line">    // 类似于 React.context(), myContext.provider myCcontent.consumer</span><br><span class="line">    provide(&quot;msg&quot;, msg);</span><br><span class="line"></span><br><span class="line">    return &#123; msg &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>helloworld.vue 子级中使用</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 接收 父组件传来的数据</span></span><br><span class="line">  <span class="keyword">const</span> msg = <span class="title function_">inject</span>(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123; msg &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="6-自己搭建的小项目里暂时只使用到了："><a href="#6-自己搭建的小项目里暂时只使用到了：" class="headerlink" title="6.自己搭建的小项目里暂时只使用到了："></a>6.自己搭建的小项目里暂时只使用到了：</h4><ul><li>ref</li><li>reactive</li><li>provide inject</li></ul><blockquote><p>helloword.vue</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; obj.a &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; obj.b &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; obj.c &amp;&amp; obj.c.c1 &#125;&#125;、&#123;&#123; obj.c &amp;&amp; obj.c.c2 &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;button @click=&quot;addCount&quot;&gt;count is: &#123;&#123; count &#125;&#125;&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import helloworld from &quot;./helloworld&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    // helloworld() 为逻辑代码，可以单独拎出去，这也是composition Api的一大好处，逻辑代码可以高度解耦，可复用性更强！</span><br><span class="line">    return Object.assign(&#123;&#125;, helloworld());</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>helloworld.ts </p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, reactive, inject &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; $log, $info, $test &#125; <span class="keyword">from</span> <span class="string">&quot;../modules-index&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> helloworld = ():<span class="function"><span class="params">object</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 接收 父组件传来的数据</span></span><br><span class="line">  <span class="keyword">const</span> msg = <span class="title function_">inject</span>(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. ref</span></span><br><span class="line">  <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">const</span> addCount = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    count.<span class="property">value</span>++;</span><br><span class="line">    $log(count.<span class="property">value</span>, <span class="string">&quot;count:&quot;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. reactive</span></span><br><span class="line">  <span class="keyword">const</span> obj = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="string">&quot;b&quot;</span>,</span><br><span class="line">    <span class="attr">c</span>: &#123;</span><br><span class="line">      <span class="attr">c1</span>: <span class="string">&quot;c1&quot;</span>,</span><br><span class="line">      <span class="attr">c2</span>: <span class="string">&quot;c2&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  obj.<span class="property">a</span> = <span class="string">&quot;我是a呀&quot;</span>;</span><br><span class="line">  obj.<span class="property">b</span> = <span class="string">&quot;我是b呀&quot;</span>;</span><br><span class="line">  obj.<span class="property">c</span>.<span class="property">c1</span> = <span class="string">&quot;我是c1呀&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注意：对reactive的数据解构会导致 基础数据类型 失去reactive</span></span><br><span class="line">  <span class="keyword">let</span> &#123; a, c &#125; = obj;</span><br><span class="line">  a = <span class="string">&quot;我是被解构的a&quot;</span>;</span><br><span class="line">  c.<span class="property">c1</span> = <span class="string">&quot;我是被解构的c1&quot;</span>;</span><br><span class="line"></span><br><span class="line">  $log(obj);     <span class="comment">// &#123;a: &quot;我是a呀&quot;,b: &quot;我是b呀&quot;,c: &#123;c1: &quot;我是被解构的c1&quot;,c2: &quot;c2&quot;,&#125;,&#125;</span></span><br><span class="line">  $log(a, <span class="string">&#x27;a:&#x27;</span>); <span class="comment">// 我是被解构的a </span></span><br><span class="line">  $log(c, <span class="string">&#x27;c:&#x27;</span>); <span class="comment">// &#123;c1: &quot;我是被解构的c1&quot;, c2: &quot;c2&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 测试引用</span></span><br><span class="line">  $log($info, <span class="string">&quot;测试引用:&quot;</span>);</span><br><span class="line">  $test();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过return把数据暴露给template</span></span><br><span class="line">  <span class="keyword">return</span> &#123; msg, count, addCount, obj &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> helloworld;</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>以上示例的代码放在了GitHub上： <a href="https://github.com/LLDLLY/vue3.0-init.git">https://github.com/LLDLLY/vue3.0-init.git</a></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composition API 和 React Hook区别 (学习笔记)</title>
      <link href="/2020/09/18/compositionApi/"/>
      <url>/2020/09/18/compositionApi/</url>
      
        <content type="html"><![CDATA[<p><code>Composition API</code>与<code>React Hook</code>很像，说说区别？</p><h4 id="React-Hook"><a href="#React-Hook" class="headerlink" title="React Hook"></a>React Hook</h4><blockquote><p>从React Hook的实现角度看，React Hook是根据<code>useState</code>调用的顺序来确定下一次重渲染时的state是来源于哪个<code>useState</code>，所以出现了以下限制：</p></blockquote><p>1.不能在循环、条件、嵌套函数中调用Hook；<br>2.必须确保总是在你的React函数的顶层调用Hook；<br>3.<code>useEffect</code>、<code>useMemo</code>等函数必须手动确定依赖关系；</p><h4 id="Composition-API"><a href="#Composition-API" class="headerlink" title="Composition API"></a>Composition API</h4><blockquote><p>而Composition API是基于Vue的响应式系统实现的，与React Hook的相比声明在<code>setup</code>函数内，一次组件实例化只调用一次<code>setup</code>，<br>而React Hook每次重渲染都需要调用Hook，使得React的GC( 垃圾回收 )比Vue更有压力，性能也相对于Vue来说也较慢,<br>Compositon API的调用不需要顾虑调用顺序，也可以在循环、条件、嵌套函数中使用,<br>响应式系统自动实现了依赖收集，进而组件的部分的性能优化由Vue内部自己完成，<br>而React Hook需要手动传入依赖，而且必须必须保证依赖的顺序，让<code>useEffect</code>、<code>useMemo</code>等函数正确的捕获依赖变量，否则会由于依赖不正确使得组件性能下降。</p></blockquote><p>虽然Compositon API看起来比React Hook好用，但是其设计思想也是借鉴React Hook的。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小工具记录</title>
      <link href="/2020/08/10/utils/"/>
      <url>/2020/08/10/utils/</url>
      
        <content type="html"><![CDATA[<h3 id="node-热更新工具nodemon"><a href="#node-热更新工具nodemon" class="headerlink" title="node 热更新工具nodemon"></a>node 热更新工具nodemon</h3><p><a href="https://www.npmjs.com/package/nodemon">https://www.npmjs.com/package/nodemon</a></p><h3 id="node版本管理工具"><a href="#node版本管理工具" class="headerlink" title="node版本管理工具"></a>node版本管理工具</h3><p><a href="https://github.com/nvm-sh/nvm">https://github.com/nvm-sh/nvm</a><br><a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a><br><a href="https://github.com/tj/n">https://github.com/tj/n</a></p><h3 id="npm-源管理工具-nrm"><a href="#npm-源管理工具-nrm" class="headerlink" title="npm 源管理工具 nrm"></a>npm 源管理工具 nrm</h3><p><a href="https://github.com/Pana/nrm">https://github.com/Pana/nrm</a></p><h3 id="yarn-resolutions"><a href="#yarn-resolutions" class="headerlink" title="yarn resolutions"></a>yarn resolutions</h3><p><a href="https://classic.yarnpkg.com/en/docs/selective-version-resolutions/">https://classic.yarnpkg.com/en/docs/selective-version-resolutions/</a><br><a href="https://blog.csdn.net/qq_21567385/article/details/112644629">https://blog.csdn.net/qq_21567385/article/details/112644629</a><br><a href="https://blog.csdn.net/qq_21567385/article/details/113066012">https://blog.csdn.net/qq_21567385/article/details/113066012</a></p><h3 id="把png-jpg转svg-的网站"><a href="#把png-jpg转svg-的网站" class="headerlink" title="把png/jpg转svg 的网站"></a>把png/jpg转svg 的网站</h3><p><a href="https://www.vectorizer.io/images/upload.html">https://www.vectorizer.io/images/upload.html</a></p><h3 id="把svg转iconfont"><a href="#把svg转iconfont" class="headerlink" title="把svg转iconfont"></a>把svg转iconfont</h3><p><a href="https://icomoon.io/app/#/select/font">https://icomoon.io/app/#/select/font</a></p><h3 id="打开-ttf-文件工具"><a href="#打开-ttf-文件工具" class="headerlink" title="打开 .ttf 文件工具"></a>打开 .ttf 文件工具</h3><p><a href="http://fontstore.baidu.com/static/editor/">http://fontstore.baidu.com/static/editor/</a></p><h3 id="背景大图地址"><a href="#背景大图地址" class="headerlink" title="背景大图地址"></a>背景大图地址</h3><p><a href="https://picsum.photos/">https://picsum.photos/</a></p><h3 id="H5手写签名插件"><a href="#H5手写签名插件" class="headerlink" title="H5手写签名插件"></a>H5手写签名插件</h3><p><a href="https://www.npmjs.com/package/signature_pad">https://www.npmjs.com/package/signature_pad</a></p><h3 id="H5预览-docx-excel-xlsx-ppt"><a href="#H5预览-docx-excel-xlsx-ppt" class="headerlink" title="H5预览 docx excel xlsx ppt"></a>H5预览 docx excel xlsx ppt</h3><p><a href="https://view.officeapps.live.com/op/view.aspx?src=">https://view.officeapps.live.com/op/view.aspx?src=</a></p><h3 id="网站可以使用的优美句子-api"><a href="#网站可以使用的优美句子-api" class="headerlink" title="网站可以使用的优美句子 api"></a>网站可以使用的优美句子 api</h3><p><a href="https://hitokoto.cn/#">https://hitokoto.cn/#</a></p><h3 id="GitHub-JsDeliver-静态资源加速"><a href="#GitHub-JsDeliver-静态资源加速" class="headerlink" title="GitHub+JsDeliver 静态资源加速"></a>GitHub+JsDeliver 静态资源加速</h3><p>JSD 的链接是什么？</p><p>直接引用</p><p>格式为：<a href="https://fastly.jsdelivr.net/gh/">https://fastly.jsdelivr.net/gh/</a>&lt;用户名&gt;/&lt;仓库名&gt;/&lt;文件及路径&gt;</p><p>例如：<a href="https://fastly.jsdelivr.net/gh/blogimg/HexoStaticFile2/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png">https://fastly.jsdelivr.net/gh/blogimg/HexoStaticFile2/2020/05/28/911db4c3b95ed896b066b6e9aabae311.png</a> 代表用户名 blogimg 下的 HexoStaticFlle2 仓库中文件夹 /2020/05/28/ 里的 911db4c3b95ed896b066b6e9aabae311.png 文件。</p><p>分支及版本号</p><p>分支与版本号加到仓库后变，用 @符链接。格式为：<a href="https://fastly.jsdelivr.net/gh/">https://fastly.jsdelivr.net/gh/</a>&lt;用户名&gt;/&lt;仓库名&gt;@[分支/版本号]/&lt;文件及路径&gt;</p><h3 id="图片压缩工具"><a href="#图片压缩工具" class="headerlink" title="图片压缩工具"></a>图片压缩工具</h3><p>可以批量压缩<br>imagine</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 更改账户和密码</title>
      <link href="/2020/08/03/gitRename/"/>
      <url>/2020/08/03/gitRename/</url>
      
        <content type="html"><![CDATA[<p>git报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: Authentication failed for &#x27;http://--.--.--.--:---/-/-.git/&#x27;</span><br></pre></td></tr></table></figure><p>解决办法：执行如下命令，重置权限验证信息。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --system --unset credential.helper</span><br></pre></td></tr></table></figure><p>之后再输入clone的命令，git会弹出输入的账户和密码的窗口，重新输入一下就好啦~</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uni-app 踩坑</title>
      <link href="/2020/07/30/uni-app/"/>
      <url>/2020/07/30/uni-app/</url>
      
        <content type="html"><![CDATA[<h3 id="H5端-uni-load-more-触底不刷新问题"><a href="#H5端-uni-load-more-触底不刷新问题" class="headerlink" title="H5端 uni-load-more 触底不刷新问题"></a>H5端 uni-load-more 触底不刷新问题</h3><blockquote><p><code>uni-page</code>标签 <code>height</code>不能写成<code>100%</code>，要写<code>height: auto;</code>.</p></blockquote><h3 id="微信小程序更改CheckBox样式"><a href="#微信小程序更改CheckBox样式" class="headerlink" title="微信小程序更改CheckBox样式"></a>微信小程序更改CheckBox样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* #ifdef APP-PLUS || MP-WEIXIN */</span></span><br><span class="line">checkbox <span class="selector-class">.wx-checkbox-input</span>&#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">30</span>rpx;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line">checkbox  <span class="selector-class">.wx-checkbox-input</span><span class="selector-class">.wx-checkbox-input-checked</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: @theme;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#FFFFFF</span> <span class="meta">!important</span>;</span><br><span class="line"><span class="attribute">border-color</span>: @theme;</span><br><span class="line">&#125;</span><br><span class="line">checkbox  <span class="selector-class">.wx-checkbox-input</span><span class="selector-class">.wx-checkbox-input-checked</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>) <span class="built_in">scale</span>(.<span class="number">45</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* #endif */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="微信小程序更改radio样式"><a href="#微信小程序更改radio样式" class="headerlink" title="微信小程序更改radio样式"></a>微信小程序更改radio样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* #ifdef APP-PLUS || MP-WEIXIN */</span></span><br><span class="line">    radio <span class="selector-class">.wx-radio-input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30</span>rpx;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30</span>rpx;</span><br><span class="line">    &#125;</span><br><span class="line">    radio <span class="selector-class">.wx-radio-input</span><span class="selector-class">.wx-radio-input-checked</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">30</span>rpx;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">30</span>rpx;</span><br><span class="line">        <span class="attribute">background</span>:@theme <span class="meta">!important</span>;</span><br><span class="line">        <span class="attribute">border-color</span>: @theme <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    radio <span class="selector-class">.wx-radio-input</span><span class="selector-class">.wx-radio-input-checked</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>) <span class="built_in">scale</span>(.<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/* #endif */</span></span><br></pre></td></tr></table></figure><h3 id="微信小程序修改switch样式"><a href="#微信小程序修改switch样式" class="headerlink" title="微信小程序修改switch样式"></a>微信小程序修改switch样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* #ifdef APP-PLUS || MP-WEIXIN  */</span></span><br><span class="line">switch <span class="selector-class">.wx-switch-input</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">56</span>rpx ;</span><br><span class="line"><span class="attribute">background</span>: @theme <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#ccc</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*白色样式（false的样式）*/</span></span><br><span class="line">switch <span class="selector-class">.wx-switch-input</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">52</span>rpx ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*（true的样式）*/</span></span><br><span class="line">switch <span class="selector-class">.wx-switch-input</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">52</span>rpx;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">52</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* #endif */</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="动态修改导航栏的icon"><a href="#动态修改导航栏的icon" class="headerlink" title="动态修改导航栏的icon"></a>动态修改导航栏的icon</h3><p>此方案改了icon样式后，onNavigationBarButtonTap将不再触发，坑！还是用自定义导航栏吧；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">flag</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">...<span class="title function_">mapState</span>(&#123;</span><br><span class="line"><span class="attr">list</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">home</span>.<span class="property">list</span>,</span><br><span class="line"><span class="attr">theme</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">common</span>.<span class="property">theme</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">onNavigationBarButtonTap</span>(<span class="params">btn</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(btn)</span><br><span class="line"><span class="comment">// 分享</span></span><br><span class="line"><span class="keyword">if</span> (btn.<span class="property">index</span> === <span class="number">0</span>) &#123;</span><br><span class="line">uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line"><span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line"><span class="attr">title</span>:<span class="string">&#x27;分享&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 爱心</span></span><br><span class="line"><span class="keyword">if</span> (btn.<span class="property">index</span> === <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> pages = <span class="title function_">getCurrentPages</span>();</span><br><span class="line"><span class="keyword">let</span> page = pages[pages.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line"><span class="comment">// #ifdef APP-PLUS </span></span><br><span class="line"><span class="keyword">let</span> currentWebview = page.$getAppWebview();</span><br><span class="line"><span class="keyword">let</span> titleObj = currentWebview.<span class="title function_">getStyle</span>().<span class="property">titleNView</span>;</span><br><span class="line"><span class="keyword">if</span> (!titleObj.<span class="property">buttons</span>) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">flag</span>) &#123;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">fontSrc</span> = <span class="string">&quot;/static/style/fonts/font.ttf&quot;</span>;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">text</span> = <span class="string">&quot;\ue645&quot;</span>;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">fontSize</span> = <span class="number">24</span>;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">color</span> = <span class="variable language_">this</span>.<span class="property">theme</span> == <span class="string">&#x27;theme-deep-pink&#x27;</span>? <span class="string">&#x27;#FC6BC0&#x27;</span>:<span class="string">&#x27;#ffb1a7&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">text</span> = <span class="string">&quot;/static/style/fonts/other.ttf&quot;</span>;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">text</span> = <span class="string">&quot;\ue900&quot;</span>;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">fontSize</span> = <span class="number">18</span>;</span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">color</span> = <span class="string">&#x27;#333333&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">flag</span> = !<span class="variable language_">this</span>.<span class="property">flag</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(this.flag);</span></span><br><span class="line"></span><br><span class="line">titleObj.<span class="property">buttons</span>[<span class="number">1</span>].<span class="property">width</span> = <span class="string">&#x27;40px&#x27;</span>;</span><br><span class="line">currentWebview.<span class="title function_">setStyle</span>(&#123;</span><br><span class="line"><span class="attr">titleNView</span>: titleObj</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// #endif</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="页面展示base64图片不显示的坑"><a href="#页面展示base64图片不显示的坑" class="headerlink" title="页面展示base64图片不显示的坑"></a>页面展示base64图片不显示的坑</h3><p>这个是字符串太长传输中加入回车导致, 需要把回车和换行都去掉</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> url = base64Data.<span class="title function_">replace</span>(<span class="regexp">/[\r\n]/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> uni-app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uni-app踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表删除(学习笔记)</title>
      <link href="/2020/07/27/exercise1/"/>
      <url>/2020/07/27/exercise1/</url>
      
        <content type="html"><![CDATA[<h4 id="给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。"><a href="#给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。" class="headerlink" title="给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。"></a>给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ListNode</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = val;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> node = &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">next</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">next</span>: &#123;</span><br><span class="line">                <span class="attr">val</span>: <span class="number">3</span>,</span><br><span class="line">                <span class="attr">next</span>: &#123;</span><br><span class="line">                    <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">                    <span class="attr">next</span>: <span class="literal">null</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fn = <span class="keyword">function</span> (<span class="params">node</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> cur = node;</span><br><span class="line">    <span class="keyword">while</span> (cur &amp;&amp; cur.<span class="property">next</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(cur.<span class="property">val</span> === cur.<span class="property">next</span>.<span class="property">val</span>)&#123;</span><br><span class="line">            cur.<span class="property">next</span> = cur.<span class="property">next</span>.<span class="property">next</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cur = cur.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="title function_">fn</span>(node))); <span class="comment">// &#123;&quot;val&quot;:1,&quot;next&quot;:&#123;&quot;val&quot;:2,&quot;next&quot;:&#123;&quot;val&quot;:3,&quot;next&quot;:&#123;&quot;val&quot;:4,&quot;next&quot;:null&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><h4 id="给定一个排序链表，删除所有含有重复数字的结点，只保留原始链表中-没有重复出现的数字。"><a href="#给定一个排序链表，删除所有含有重复数字的结点，只保留原始链表中-没有重复出现的数字。" class="headerlink" title="给定一个排序链表，删除所有含有重复数字的结点，只保留原始链表中 没有重复出现的数字。"></a>给定一个排序链表，删除所有含有重复数字的结点，只保留原始链表中 没有重复出现的数字。</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 链表构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ListNode</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = val;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> node = &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">next</span>: &#123;</span><br><span class="line">            <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">next</span>: &#123;</span><br><span class="line">                <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">                <span class="attr">next</span>: &#123;</span><br><span class="line">                    <span class="attr">val</span>: <span class="number">4</span>,</span><br><span class="line">                    <span class="attr">next</span>: <span class="literal">null</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fn2 = <span class="keyword">function</span> (<span class="params">head</span>) &#123;</span><br><span class="line">    <span class="comment">// 特殊情况，没有结点，只有一个结点，直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (!head &amp;&amp; !head.<span class="property">next</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新建一个空节点，保证链表可以访问</span></span><br><span class="line">    <span class="keyword">let</span> dummy = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    dummy.<span class="property">next</span> = head;</span><br><span class="line">    <span class="comment">// 可以理解为指针，记录循环到那一步</span></span><br><span class="line">    <span class="keyword">let</span> cur = dummy;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (cur.<span class="property">next</span> &amp;&amp; cur.<span class="property">next</span>.<span class="property">next</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (cur.<span class="property">next</span>.<span class="property">val</span> === cur.<span class="property">next</span>.<span class="property">next</span>.<span class="property">val</span>) &#123;</span><br><span class="line">            <span class="comment">// 记录重复的值</span></span><br><span class="line">            <span class="keyword">let</span> value = cur.<span class="property">next</span>.<span class="property">val</span>;</span><br><span class="line">            <span class="comment">// 判断后续结点是否还有重复</span></span><br><span class="line">            <span class="keyword">while</span> (cur.<span class="property">next</span> &amp;&amp; cur.<span class="property">next</span>.<span class="property">val</span> === value) &#123;</span><br><span class="line">                <span class="comment">// 重复就删除该结点</span></span><br><span class="line">                cur.<span class="property">next</span> = cur.<span class="property">next</span>.<span class="property">next</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = cur.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dummy.<span class="property">next</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn2</span>(node));  <span class="comment">// &#123; val: 1, next: &#123; val: 2, next: null &#125; &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>less、sass换肤方案记录</title>
      <link href="/2020/07/16/lessSass/"/>
      <url>/2020/07/16/lessSass/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>现在换肤的场景越来越多，特此总结一下自己使用过切实可行的两种换肤方案，less和sass各一种，less配合的vue项目，sass配合的react项目；大体的思路都是一样的：</p><blockquote><p>1.将主题会用到的颜色都使用变量定义；<br>2.使用<code>less/sass</code>mixin和函数实现不同主题的颜色选取；<br>3.在body上放一个用于区别主题的类名或者属性，通过动态更换这个类名，实现主题的切换；</p></blockquote><h3 id="Less"><a href="#Less" class="headerlink" title="Less"></a>Less</h3><h4 id="1-效果"><a href="#1-效果" class="headerlink" title="1.效果"></a>1.效果</h4><p>定义了两套主题：蓝色和橙色<br>先看效果吧，把类名改为<code>theme_blue</code>切换为<code>theme_orange</code>主题直接就换掉啦~<br> <img src="/images/css/2.jpg" alt="蓝色主题"><br> <img src="/images/css/1.jpg" alt="橙色主题"></p><h4 id="2-定义变量"><a href="#2-定义变量" class="headerlink" title="2.定义变量"></a>2.定义变量</h4><ol><li>定义变量;</li><li>定义了一个叫theme的mixin，把定义的变量传入mixin内部;</li></ol><p><code>theme.blue.less</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//主题颜色 蓝</span></span><br><span class="line"><span class="variable">@theme:</span> <span class="number">#1989fa</span>;</span><br><span class="line"><span class="variable">@theme_to:</span> <span class="number">#1989fa</span>;</span><br><span class="line"><span class="variable">@theme_black:</span> <span class="number">#272b2e</span>;             <span class="comment">// 官网黑</span></span><br><span class="line"><span class="comment">// 渐变</span></span><br><span class="line"><span class="variable">@linear:</span> <span class="number">#1989fa</span>;</span><br><span class="line"><span class="variable">@linear_to:</span> <span class="number">#1989fa</span>;</span><br><span class="line"><span class="comment">//常用颜色</span></span><br><span class="line"><span class="variable">@Black:</span> <span class="number">#000000</span>;                   <span class="comment">// 白底的须知</span></span><br><span class="line"><span class="variable">@White:</span> <span class="number">#ffffff</span>;                   <span class="comment">// 白色底或文字</span></span><br><span class="line"><span class="variable">@GeneralGray:</span> <span class="number">#999999</span>;             <span class="comment">// 正常灰色字体，多用于值的显示</span></span><br><span class="line"><span class="variable">@DeepGray:</span> <span class="number">#333333</span>;                <span class="comment">// 深灰色字体，多用于表单页面的参数名和标题</span></span><br><span class="line"><span class="variable">@AuxiliaryGray:</span> <span class="number">#dcdcdc</span>;           <span class="comment">// 常用于分割线</span></span><br><span class="line"><span class="variable">@WhiteGray:</span> <span class="number">#f8f8f8</span>;               <span class="comment">// 页面最底层灰色背景</span></span><br><span class="line"><span class="variable">@borderGray:</span> <span class="number">#ebedf0</span>;              <span class="comment">// border</span></span><br><span class="line"><span class="variable">@Divider:</span> <span class="number">#dcdcdc</span>;</span><br><span class="line"><span class="variable">@backgroundAlert:</span> <span class="number">#f1f3f4</span>;         <span class="comment">// alert背景色</span></span><br><span class="line"><span class="variable">@buttonShadowColor:</span> <span class="number">#1989fa</span>;       <span class="comment">// button shadow</span></span><br><span class="line"><span class="variable">@LightGrey:</span> rgba(<span class="number">77</span>, <span class="number">85</span>, <span class="number">93</span>, <span class="number">0.2</span>); <span class="comment">// 淡灰色, 一般用于按钮等</span></span><br><span class="line"><span class="variable">@border:</span> <span class="number">1px</span> solid <span class="number">#ebedf0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// theme mixin把变量传入</span></span><br><span class="line"><span class="selector-class">.theme</span>(</span><br><span class="line">  <span class="variable">@theme</span>,</span><br><span class="line">  <span class="variable">@theme_to</span>,</span><br><span class="line">  <span class="variable">@Black</span>,</span><br><span class="line">  <span class="variable">@White</span>,</span><br><span class="line">  <span class="variable">@GeneralGray</span>,</span><br><span class="line">  <span class="variable">@DeepGray</span>,</span><br><span class="line">  <span class="variable">@AuxiliaryGray</span>,</span><br><span class="line">  <span class="variable">@WhiteGray</span>,</span><br><span class="line">  <span class="variable">@backgroundAlert</span>,</span><br><span class="line">  <span class="variable">@borderGray</span>,</span><br><span class="line">  <span class="variable">@Divider</span>,</span><br><span class="line">  <span class="variable">@buttonShadowColor</span>,</span><br><span class="line">  <span class="variable">@LightGrey</span>,</span><br><span class="line">  <span class="variable">@linear</span>,</span><br><span class="line">  <span class="variable">@linear_to</span>,</span><br><span class="line">  <span class="variable">@theme_black</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>theme.orange.less</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//主题颜色 橙</span></span><br><span class="line"><span class="variable">@theme:</span> <span class="number">#f87f24</span>;                  <span class="comment">// 橙色选中高亮 #ee4a02</span></span><br><span class="line"><span class="variable">@theme_to:</span> <span class="number">#ff8917</span>;               <span class="comment">// 选中高亮 #ff8917</span></span><br><span class="line"><span class="variable">@theme_black:</span> <span class="number">#272b2e</span>;            <span class="comment">// 官网黑</span></span><br><span class="line"><span class="comment">// 渐变</span></span><br><span class="line"><span class="variable">@linear:</span> <span class="number">#ff8700</span>;</span><br><span class="line"><span class="variable">@linear_to:</span> <span class="number">#ffbd37</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//常用颜色</span></span><br><span class="line"><span class="variable">@Black:</span> <span class="number">#000000</span>;                  <span class="comment">// 白底的须知</span></span><br><span class="line"><span class="variable">@White:</span> <span class="number">#ffffff</span>;                  <span class="comment">// 白色底或文字</span></span><br><span class="line"><span class="variable">@GeneralGray:</span> <span class="number">#999999</span>;            <span class="comment">// 正常灰色字体，多用于值的显示</span></span><br><span class="line"><span class="variable">@DeepGray:</span> <span class="number">#333333</span>;               <span class="comment">// 深灰色字体，多用于表单页面的参数名和标题</span></span><br><span class="line"><span class="variable">@AuxiliaryGray:</span> <span class="number">#dcdcdc</span>;          <span class="comment">// 常用于分割线</span></span><br><span class="line"><span class="variable">@WhiteGray:</span> <span class="number">#f5f5f5</span>;              <span class="comment">// 页面最底层灰色背景</span></span><br><span class="line"><span class="variable">@borderGray:</span> <span class="number">#ebedf0</span>;             <span class="comment">// border</span></span><br><span class="line"><span class="variable">@Divider:</span> <span class="number">#dcdcdc</span>;</span><br><span class="line"><span class="variable">@backgroundAlert:</span> rgba(<span class="number">255</span>, <span class="number">108</span>, <span class="number">108</span>, <span class="number">0.2</span>);</span><br><span class="line"><span class="variable">@buttonShadowColor:</span> rgba(<span class="number">255</span>, <span class="number">134</span>, <span class="number">0</span>, <span class="number">0.51</span>);   <span class="comment">// button shadow</span></span><br><span class="line"><span class="variable">@LightGrey:</span> rgba(<span class="number">211</span>, <span class="number">211</span>, <span class="number">211</span>, <span class="number">0.4</span>);          <span class="comment">// 淡灰色, 一般用于按钮等</span></span><br><span class="line"><span class="variable">@border:</span> <span class="number">1px</span> solid <span class="number">#ebedf0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// theme mixin把变量传入</span></span><br><span class="line"><span class="selector-class">.theme</span>(</span><br><span class="line">  <span class="variable">@theme</span>,</span><br><span class="line">  <span class="variable">@theme_to</span>,</span><br><span class="line">  <span class="variable">@Black</span>,</span><br><span class="line">  <span class="variable">@White</span>,</span><br><span class="line">  <span class="variable">@GeneralGray</span>,</span><br><span class="line">  <span class="variable">@DeepGray</span>,</span><br><span class="line">  <span class="variable">@AuxiliaryGray</span>,</span><br><span class="line">  <span class="variable">@WhiteGray</span>,</span><br><span class="line">  <span class="variable">@backgroundAlert</span>,</span><br><span class="line">  <span class="variable">@borderGray</span>,</span><br><span class="line">  <span class="variable">@Divider</span>,</span><br><span class="line">  <span class="variable">@buttonShadowColor</span>,</span><br><span class="line">  <span class="variable">@LightGrey</span>,</span><br><span class="line">  <span class="variable">@linear</span>,</span><br><span class="line">  <span class="variable">@linear_to</span>,</span><br><span class="line">  <span class="variable">@theme_black</span></span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-在less中使用"><a href="#3-在less中使用" class="headerlink" title="3.在less中使用"></a>3.在less中使用</h4><p><code>index.less</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 公共样式</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;../common.less&#x27;</span>;</span><br><span class="line"><span class="comment">// 页面样式入口</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;../main.less&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// theme_blue、theme_orange是用来切换主题的类名，类名不同应用不同的主题变量</span></span><br><span class="line"><span class="selector-class">.theme_blue</span> &#123;</span><br><span class="line">  <span class="comment">// 引入定义的theme函数和变量</span></span><br><span class="line">  <span class="keyword">@import</span> <span class="string">&#x27;./theme.blue.less&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.theme_orange</span> &#123;</span><br><span class="line">  <span class="keyword">@import</span> <span class="string">&#x27;./theme.orange.less&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可扩展其他主题 ...</span></span><br></pre></td></tr></table></figure><blockquote><p>把有主题变动的元素写在<code>mixin</code>内部，颜色都要使用<code>mixin</code>传进来的变量，这样当主题类名更换了之后，<code>mixin</code>传入的变量值就随之更换，从而更换了主题；</p></blockquote><p><code>main.less</code></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// mixin调用</span></span><br><span class="line"><span class="selector-class">.theme</span>(</span><br><span class="line">  <span class="variable">@theme</span>,</span><br><span class="line">  <span class="variable">@theme_to</span>,</span><br><span class="line">  <span class="variable">@Black</span>,</span><br><span class="line">  <span class="variable">@White</span>,</span><br><span class="line">  <span class="variable">@GeneralGray</span>,</span><br><span class="line">  <span class="variable">@DeepGray</span>,</span><br><span class="line">  <span class="variable">@AuxiliaryGray</span>,</span><br><span class="line">  <span class="variable">@WhiteGray</span>,</span><br><span class="line">  <span class="variable">@backgroundAlert</span>,</span><br><span class="line">  <span class="variable">@borderGray</span>,</span><br><span class="line">  <span class="variable">@Divider</span>,</span><br><span class="line">  <span class="variable">@buttonShadowColor</span>,</span><br><span class="line">  <span class="variable">@LightGrey</span>,</span><br><span class="line">  <span class="variable">@linear</span>,</span><br><span class="line">  <span class="variable">@linear_to</span>,</span><br><span class="line">  <span class="variable">@theme_black</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.text_width_limit</span>() &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.bgc_Gray</span>() &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">@WhiteGray</span>; </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//背景渐变颜色 Gradual change</span></span><br><span class="line">  <span class="selector-class">.theme_linear</span>() &#123;</span><br><span class="line">    <span class="attribute">background</span>: linear-gradient(<span class="number">90deg</span>, <span class="variable">@linear</span> <span class="number">25%</span>, <span class="variable">@linear_to</span> <span class="number">100%</span>) <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.theme_shadow</span>() &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="variable">@theme</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在这里引入具体的模块的样式文件</span></span><br><span class="line">  <span class="keyword">@import</span> <span class="string">&#x27;./a.less&#x27;</span>;</span><br><span class="line">  <span class="keyword">@import</span> <span class="string">&#x27;./b.less&#x27;</span>;</span><br><span class="line">  <span class="comment">// more ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="sass"><a href="#sass" class="headerlink" title="sass"></a>sass</h3><h4 id="1-效果-1"><a href="#1-效果-1" class="headerlink" title="1.效果"></a>1.效果</h4><blockquote><p>这里使用了React16的<code>context</code>配合做的主题的切换；具体代码可以查看 <a href="https://lldlly.github.io/2020/07/08/reactcreatcontext/">上一篇博客</a>；在这里我们只关注切换代码的css部分如何去实现；</p></blockquote><p><img src="/images/context/1.jpg"><br><img src="/images/context/2.png"><br><img src="/images/context/3.png"></p><h4 id="2-定义变量-1"><a href="#2-定义变量-1" class="headerlink" title="2.定义变量"></a>2.定义变量</h4><p><code>_variable.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line"><span class="variable">$white</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line"><span class="variable">$grayTheme</span>:<span class="number">#262D33</span>;</span><br><span class="line"><span class="variable">$gray</span>:<span class="number">#b5b5b5</span>;</span><br><span class="line"><span class="variable">$blue</span>:<span class="number">#2173dc</span>;</span><br><span class="line"><span class="variable">$deepBlue</span>:<span class="number">#3f51b5</span>;</span><br><span class="line"><span class="variable">$purple</span>: <span class="number">#673ab7</span>;</span><br><span class="line"><span class="variable">$mask</span>:rgba(<span class="number">55</span>, <span class="number">55</span>, <span class="number">55</span>, .<span class="number">5</span>);</span><br><span class="line"><span class="variable">$defaultFontColor</span>:<span class="number">#515a6e</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 主题 [&#x27;theme-gray&#x27;, &quot;theme-blue&quot;, &quot;theme-deepBlue&quot;, &#x27;theme-purple&#x27;]</span></span><br><span class="line"><span class="comment">// 主题定义</span></span><br><span class="line"><span class="variable">$themes</span>:(</span><br><span class="line">    gray:(</span><br><span class="line">        theme: <span class="number">#262D33</span>,</span><br><span class="line">        deep-theme: <span class="number">#131619</span>,</span><br><span class="line">        bg-color: <span class="variable">$white</span>,</span><br><span class="line">        font-color: <span class="number">#b5b5b5</span>,</span><br><span class="line">        deep-font-color: <span class="variable">$defaultFontColor</span>,</span><br><span class="line">        header-font: <span class="number">#515a6e</span>,</span><br><span class="line">        header-bgc: <span class="variable">$white</span>,</span><br><span class="line">        menu-bgc: <span class="number">#262D33</span>,</span><br><span class="line">        menu-hover: <span class="variable">$white</span>,</span><br><span class="line">        menu-hover-bgc: <span class="number">#414d58</span>,</span><br><span class="line">        menu-active: <span class="variable">$white</span>,</span><br><span class="line">        menu-active-bgc: <span class="variable">$blue</span></span><br><span class="line">    ),</span><br><span class="line">    blue:(</span><br><span class="line">        theme: <span class="variable">$blue</span>,</span><br><span class="line">        deep-theme: <span class="variable">$blue</span>,</span><br><span class="line">        bg-color: <span class="variable">$white</span>,</span><br><span class="line">        font-color: <span class="variable">$defaultFontColor</span>,</span><br><span class="line">        deep-font-color: <span class="variable">$defaultFontColor</span>,</span><br><span class="line">        header-font: <span class="variable">$white</span>,</span><br><span class="line">        header-bgc: <span class="variable">$blue</span>,</span><br><span class="line">        menu-bgc: <span class="variable">$white</span>,</span><br><span class="line">        menu-hover: <span class="variable">$blue</span>,</span><br><span class="line">        menu-hover-bgc: <span class="number">#f0faff</span>,</span><br><span class="line">        menu-active: <span class="variable">$white</span>,</span><br><span class="line">        menu-active-bgc: <span class="variable">$blue</span>,</span><br><span class="line">    ),</span><br><span class="line">    deepBlue:(</span><br><span class="line">        theme: <span class="variable">$deepBlue</span>,</span><br><span class="line">        deep-theme: <span class="variable">$deepBlue</span>,</span><br><span class="line">        bg-color: <span class="variable">$white</span>,</span><br><span class="line">        font-color: <span class="variable">$defaultFontColor</span>,</span><br><span class="line">        deep-font-color: <span class="variable">$defaultFontColor</span>,</span><br><span class="line">        header-font: <span class="variable">$white</span>,</span><br><span class="line">        header-bgc: <span class="variable">$deepBlue</span>,</span><br><span class="line">        menu-bgc: <span class="variable">$white</span>,</span><br><span class="line">        menu-hover: <span class="variable">$deepBlue</span>,</span><br><span class="line">        menu-hover-bgc: <span class="number">#f0faff</span>,</span><br><span class="line">        menu-active: <span class="variable">$white</span>,</span><br><span class="line">        menu-active-bgc: <span class="variable">$deepBlue</span>,</span><br><span class="line">    ),</span><br><span class="line">    purple:(</span><br><span class="line">        theme: <span class="variable">$purple</span>,</span><br><span class="line">        deep-theme:<span class="variable">$purple</span>,</span><br><span class="line">        bg-color: <span class="variable">$white</span>,</span><br><span class="line">        font-color: <span class="variable">$defaultFontColor</span>,</span><br><span class="line">        deep-font-color: <span class="variable">$defaultFontColor</span>,</span><br><span class="line">        header-font: <span class="variable">$white</span>,</span><br><span class="line">        header-bgc: <span class="variable">$purple</span>,</span><br><span class="line">        menu-bgc: <span class="variable">$white</span>,</span><br><span class="line">        menu-hover: <span class="variable">$purple</span>,</span><br><span class="line">        menu-hover-bgc: <span class="number">#eee6fb</span>,</span><br><span class="line">        menu-active: <span class="variable">$white</span>,</span><br><span class="line">        menu-active-bgc: <span class="variable">$purple</span>,</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-定义mixin"><a href="#3-定义mixin" class="headerlink" title="3.定义mixin"></a>3.定义mixin</h4><p><code>_theme.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入变量</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;./_variable.scss&#x27;</span>;</span><br><span class="line"><span class="comment">// 主题 [&#x27;theme-gray&#x27;, &quot;theme-blue&quot;, &quot;theme-deepBlue&quot;, &#x27;theme-purple&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历主题map 取当前主题下的变量；$theme-map就是对应主题的配置</span></span><br><span class="line"><span class="keyword">@mixin</span> themeify &#123;</span><br><span class="line">    <span class="keyword">@each</span> <span class="variable">$theme-name</span>, <span class="variable">$theme-map</span> in <span class="variable">$themes</span> &#123;</span><br><span class="line">        <span class="comment">// !global 把局部变量强升为全局变量</span></span><br><span class="line">        <span class="variable">$theme-map</span>: <span class="variable">$theme-map</span> !global;</span><br><span class="line">        <span class="comment">// 判断html的data-theme的属性值  #&#123;&#125;是sass的插值表达式</span></span><br><span class="line">        <span class="comment">// &amp; sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot</span></span><br><span class="line">        <span class="selector-attr">[data-theme=<span class="string">&quot;theme-#&#123;$theme-name&#125;&quot;</span>]</span> &amp; &#123;</span><br><span class="line">            <span class="keyword">@content</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明一个根据Key获取颜色的function</span></span><br><span class="line"><span class="keyword">@function</span> themed(<span class="variable">$key</span>) &#123;</span><br><span class="line">    <span class="comment">// map-get 根据对应的key值返回map中对应的值</span></span><br><span class="line">    <span class="comment">// map-get($map, $key)</span></span><br><span class="line">    <span class="keyword">@return</span> map-get(<span class="variable">$theme-map</span>, <span class="variable">$key</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主题背景颜色</span></span><br><span class="line"><span class="keyword">@mixin</span> background_<span class="attribute">color</span>(<span class="variable">$color</span>) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: themed(<span class="variable">$color</span>) <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取字体颜色</span></span><br><span class="line"><span class="keyword">@mixin</span> font_<span class="attribute">color</span>(<span class="variable">$color</span>) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        <span class="attribute">color</span>: themed(<span class="variable">$color</span>) <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取边框颜色</span></span><br><span class="line"><span class="keyword">@mixin</span> border_<span class="attribute">color</span>(<span class="variable">$color</span>) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        <span class="attribute">border-color</span>: themed(<span class="variable">$color</span>) <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改svg颜色</span></span><br><span class="line"><span class="keyword">@mixin</span> svg_<span class="attribute">color</span>(<span class="variable">$color</span>) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        fill: themed(<span class="variable">$color</span>) <span class="meta">!important</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-在sass中使用mixin"><a href="#4-在sass中使用mixin" class="headerlink" title="4.在sass中使用mixin"></a>4.在sass中使用mixin</h4><p><code>layout.scss</code></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入mixin</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;./theme/_theme.scss&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 1 header &amp; header elements */</span></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">    svg&#123;</span><br><span class="line">        <span class="keyword">@include</span> svg_<span class="attribute">color</span>(<span class="string">&quot;header-font&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&quot;header-font&quot;</span>);</span><br><span class="line">    <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&quot;header-bgc&quot;</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2 menu */</span></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&quot;menu-bgc&quot;</span>);</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">transition</span>: width .<span class="number">3s</span> ease;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.logo</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">55px</span>;</span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#f5f4f4</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.nav-item</span> &#123;</span><br><span class="line">        <span class="attribute">cursor</span>: pointer;</span><br><span class="line">        <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">transition</span>: height .<span class="number">5s</span> ease;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">p</span> &#123;</span><br><span class="line">            <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;font-color&#x27;</span>);</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">            <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">            <span class="attribute">text-decoration</span>: none;</span><br><span class="line"></span><br><span class="line">            <span class="selector-tag">i</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">                <span class="attribute">margin-right</span>: <span class="number">12px</span>;</span><br><span class="line">                <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;font-color&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2.2 menu normal */</span></span><br><span class="line"><span class="selector-class">.sidebar_normal</span> &#123;</span><br><span class="line">    <span class="selector-class">.nav-item</span> &#123;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">p</span> &#123;</span><br><span class="line">            &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">                <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;menu-hover&#x27;</span>);</span><br><span class="line">                <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&#x27;menu-bg-hover&#x27;</span>);</span><br><span class="line">                <span class="attribute">border-right</span>: <span class="number">2px</span> solid;</span><br><span class="line">                <span class="keyword">@include</span> border_<span class="attribute">color</span>(<span class="string">&#x27;theme&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &amp;<span class="selector-class">.active</span> &#123;</span><br><span class="line">                <span class="selector-tag">i</span> &#123;</span><br><span class="line">                    <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;menu-active&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;menu-active&#x27;</span>);</span><br><span class="line">                <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&#x27;menu-active-bgc&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2.2 menu mini */</span></span><br><span class="line"><span class="selector-class">.sidebar-mini</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: width .<span class="number">3s</span> ease;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.child-item</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.nav-item</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">p</span> &#123;</span><br><span class="line">            <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;deep-font-color&#x27;</span>);</span><br><span class="line">            <span class="selector-tag">i</span> &#123;</span><br><span class="line">                <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;menu-hover&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">                <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;menu-hover&#x27;</span>);</span><br><span class="line">                <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&#x27;menu-bg-hover&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &amp;<span class="selector-class">.active</span> &#123;</span><br><span class="line">                <span class="selector-tag">i</span> &#123;</span><br><span class="line">                    <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;menu-active&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&#x27;menu-active&#x27;</span>);</span><br><span class="line">                <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&#x27;menu-active-bgc&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">            <span class="selector-class">.child-item</span> &#123;</span><br><span class="line">                <span class="attribute">display</span>: block;</span><br><span class="line">                <span class="attribute">position</span>: absolute;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&#x27;bg-color&#x27;</span>);</span><br><span class="line">                <span class="attribute">left</span>: <span class="number">68px</span>;</span><br><span class="line">                <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">                <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">3px</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.fa-angle-down</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">2s</span> ease;</span><br><span class="line">        <span class="attribute">transform</span>: rotate(-<span class="number">90deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 换肤 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React.createContext( )</title>
      <link href="/2020/07/08/reactcreatcontext/"/>
      <url>/2020/07/08/reactcreatcontext/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前自己写demo项目的时候用到了React16新出的<code>Context</code>方法，确实是个好东西！避免忘记特此记录。<br>其实官网上对<a href="https://react.docschina.org/docs/context.html#when-to-use-context">Context</a>的讲解已经很详细了，接下来就记录一下我自己对Context的理解和使用；<br>好记性不如烂笔头，我相信这是一个好习惯~</p><h3 id="产生"><a href="#产生" class="headerlink" title="产生"></a>产生</h3><p>react组件之间(父传子)使用<code>props</code>来传递数据，子组件里面通过<code>this.props</code>就能拿到父级传来的值。一旦组件深度嵌套，数据又在顶级父级的身上，最末级组件用这些数据就要传递很多层，而且还有可能这些数据中间组件是完全用不到的。项目复杂度一上来，需要传的数据量也会越来越大，可想而知是多么的繁琐，子组件在调试数据时，找数据的来源也是个麻烦事！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// page 把 user avatarSize 传给PageLayout</span><br><span class="line">&lt;Page user=&#123;user&#125; avatarSize=&#123;avatarSize&#125; /&gt;</span><br><span class="line"></span><br><span class="line">// PageLayout 再把 user avatarSize 传给NavigationBar</span><br><span class="line">&lt;PageLayout user=&#123;user&#125; avatarSize=&#123;avatarSize&#125; /&gt;</span><br><span class="line"></span><br><span class="line">// NavigationBar 再传给 内部Avatar组件</span><br><span class="line">&lt;NavigationBar user=&#123;user&#125; avatarSize=&#123;avatarSize&#125; /&gt;</span><br><span class="line"></span><br><span class="line">// Avatar 组件里面才真正使用 user avatarSize ！</span><br><span class="line">&lt;Link href=&#123;user.permalink&#125;&gt;</span><br><span class="line">  &lt;Avatar user=&#123;user&#125; size=&#123;avatarSize&#125; /&gt;</span><br><span class="line">&lt;/Link&gt;</span><br></pre></td></tr></table></figure><p>为了避免这种繁琐的手动传递数据，<code>Context</code>方法应运而生。此处引用官方文档原话：“<code>Context 提供了一个无需为每层组件手动添加 props，就能在组件树间进行数据传递的方法。</code>”。</p><h3 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h3><p><code>React.createContext</code>创建出一个Context对象，这个对象提供了四个api：</p><ul><li>Context.Provider</li><li>Context.Consumer</li><li>Class.contextType</li><li>Context.displayName</li></ul><h4 id="React-createContext-创建"><a href="#React-createContext-创建" class="headerlink" title="React.createContext 创建"></a>React.createContext 创建</h4><blockquote><p>创建一个上下文的对象<code>Context</code>，包含两个组件：生产者（Provider）消费者（Consumer）; defaultValue可以设置共享的默认数据</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">MyContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>(defaultValue);</span><br></pre></td></tr></table></figure><h4 id="Context-Provider-生产者"><a href="#Context-Provider-生产者" class="headerlink" title="Context.Provider 生产者"></a>Context.Provider 生产者</h4><blockquote><p>Provider将数据通过value提供给<code>Consumer</code>(消费者);</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;MyContext.Provider value=&#123;/* 需要提供给子组件的数据 */&#125;&gt;</span><br><span class="line">     &#123;/* 这里放消费组件 */&#125;</span><br><span class="line">&lt;/MyContext.Provider&gt;</span><br></pre></td></tr></table></figure><h4 id="Context-Consumer-消费者"><a href="#Context-Consumer-消费者" class="headerlink" title="Context.Consumer 消费者"></a>Context.Consumer 消费者</h4><blockquote><p>用消费者组件包裹子组件，通过函数传参的方式，把共享的数据提供给子组件；value就是共享的数据；</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;MyContext.Consumer&gt;</span><br><span class="line">    &#123;value =&gt; /* 子组件*/&#125;</span><br><span class="line">&lt;/MyContext.Consumer&gt;</span><br></pre></td></tr></table></figure><h4 id="Class-contextType"><a href="#Class-contextType" class="headerlink" title="Class.contextType"></a>Class.contextType</h4><blockquote><p>子组件被消费者包裹后，就可以把 MyContext 通过contextType方法，将数据注入组件进行使用了，而且数据是动态改变的，父级的数据改变会自动通知使用过数据的子组件更新数据；</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line">  <span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> value = <span class="variable language_">this</span>.<span class="property">context</span>;</span><br><span class="line">    <span class="comment">/* 在组件挂载完成后，使用 MyContext 组件的值来执行一些有副作用的操作 */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">componentDidUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> value = <span class="variable language_">this</span>.<span class="property">context</span>;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">componentWillUnmount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> value = <span class="variable language_">this</span>.<span class="property">context</span>;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> value = <span class="variable language_">this</span>.<span class="property">context</span>;</span><br><span class="line">    <span class="comment">/* 基于 MyContext 组件的值进行渲染 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">MyClass</span>.<span class="property">contextType</span> = <span class="title class_">MyContext</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意：官方提供了两个在子组件拿到数据的方法；<br>（1）创建MyContext，父级用MyContext.Provider包裹，子组件通过<code>Component.contextType = MyContext</code>注入数据。 但是经过自己实际测试，这样拿到的数据是死了，如果父级把数据改变了是不会通知子组件更新数据的；<br>（2）想要数据更新，需要Provider套Consumer，然后在子组件使用<code>Component.contextType = MyContext</code>才能在组件内部拿到<code>this.context</code>且数据是动态更新的。</p><h4 id="Context-displayName"><a href="#Context-displayName" class="headerlink" title="Context.displayName"></a>Context.displayName</h4><p>这个可以理解为给context 在 React DevTools 中改名字用的，没有什么实际的作用；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">MyContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>(<span class="comment">/* some value */</span>);</span><br><span class="line"><span class="title class_">MyContext</span>.<span class="property">displayName</span> = <span class="string">&#x27;MyDisplayName&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&lt;<span class="title class_">MyContext</span>.<span class="property">Provider</span>&gt; <span class="comment">// &quot;MyDisplayName.Provider&quot; 在 DevTools 中</span></span><br><span class="line">&lt;<span class="title class_">MyContext</span>.<span class="property">Consumer</span>&gt; <span class="comment">// &quot;MyDisplayName.Consumer&quot; 在 DevTools 中</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><ul><li>区别于props一层一层传参，Context可以支持跨层级组件通信；</li><li>Context API的使用基于生产者消费者模式；</li><li>开发时需要考虑可控可复用性，在不破坏组件树依赖关系、影响范围小的情况可以使用Context，影响范围大还是需要借助<code>redux</code>、<code>mobx</code>等工具；</li></ul></blockquote><h3 id="在demo项目中的使用记录"><a href="#在demo项目中的使用记录" class="headerlink" title="在demo项目中的使用记录"></a>在demo项目中的使用记录</h3><p>为了练习<code>ConText</code>， 用来做了项目的换肤功能，配色有点丑(毕竟不是专业UI😅)，咱暂且就看功能点，先看一下效果：<br><img src="/images/context/1.jpg"><br><img src="/images/context/2.png"><br><img src="/images/context/3.png"></p><h4 id="theme-context-tsx（Create）"><a href="#theme-context-tsx（Create）" class="headerlink" title="theme.context.tsx（Create）"></a>theme.context.tsx（Create）</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  ThemeContext 为 Context对象，theme-gray是defaultValue用来共享的默认数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">ThemeContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>(<span class="string">&#x27;theme-gray&#x27;</span>);</span><br></pre></td></tr></table></figure><p><code>ThemeContext.Provider</code> 把Layout组件包裹起来，把需要共享的数据通过<code>value</code>属性提供进Layout组件中；</p><h4 id="theme-tsx-Provider"><a href="#theme-tsx-Provider" class="headerlink" title="theme.tsx (Provider)"></a>theme.tsx (Provider)</h4><p>项目使用了<code>mobx</code>，数据存在store中；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import * as React from &quot;react&quot;;</span><br><span class="line">import &#123; inject, observer &#125; from &quot;mobx-react&quot;;</span><br><span class="line">import &#123; withRouter &#125; from &quot;react-router&quot;;</span><br><span class="line">import &#123; ThemeContext &#125; from &#x27;./theme.context&#x27;;</span><br><span class="line">import Layout from &#x27;../layout&#x27;;</span><br><span class="line"></span><br><span class="line">@inject(&#x27;LayoutStore&#x27;)</span><br><span class="line">@observer</span><br><span class="line">class Theme extends React.PureComponent&lt;IProps, any&gt; &#123;</span><br><span class="line">    readonly store: any = null;</span><br><span class="line"></span><br><span class="line">    constructor(props: any) &#123;</span><br><span class="line">        super(props);</span><br><span class="line">        this.store = this.props.LayoutStore;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        // currentTheme 为主题名</span><br><span class="line">        const &#123; currentTheme &#125; = this.store;</span><br><span class="line">        return (</span><br><span class="line">            &lt;ThemeContext.Provider value=&#123;currentTheme&#125;&gt;</span><br><span class="line">                &lt;Layout /&gt;</span><br><span class="line">            &lt;/ThemeContext.Provider&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default withRouter(Theme);</span><br></pre></td></tr></table></figure><h4 id="layout-tsx-Consumer"><a href="#layout-tsx-Consumer" class="headerlink" title="layout.tsx (Consumer)"></a>layout.tsx (Consumer)</h4><p>Layout组件里调用<code>Consumer</code>来使用context中共享的数据；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import &#123; ThemeContext &#125; from &#x27;./theme/theme.context&#x27;;</span><br><span class="line"></span><br><span class="line">class Layout extends React.Component&lt;any, any&gt;&#123;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        return (</span><br><span class="line">            &lt;ThemeContext.Consumer&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    theme =&gt; (</span><br><span class="line">                        &lt;div className=&#123;theme&#125;&gt;</span><br><span class="line">                            &#123;()=&gt; console.log(theme) /* 主题名 */&#125;  </span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    )</span><br><span class="line">                &#125;</span><br><span class="line">            &lt;/ThemeContext.Consumer&gt;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Context </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reduce 与 reduceRight 与 compose</title>
      <link href="/2020/07/07/compose/"/>
      <url>/2020/07/07/compose/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>reduce这个方法真的已经学习过很多次了，学了之后也很少用，又不记得了~ :joy:再来复习一遍。</p></blockquote><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p>arr.reduce(fn)的返回值是处理的结果；<br>reduce 函数接收4个参数:</p><ul><li>Accumulator (acc) (累计器) </li><li>Current Value (cur) (当前值)</li><li>Current Index (idx) (当前索引)</li><li>Source Array (src) (源数组)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对数据进行累加</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; acc 累计的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; item 数组的每一项数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span> (<span class="params">acc, item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> acc + item</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = arr.<span class="title function_">reduce</span>(fn);      <span class="comment">// 运行过程 1 + 2 + 3 + 4 + 5 + 6</span></span><br><span class="line"><span class="keyword">let</span> result_1 = arr.<span class="title function_">reduce</span>(fn, <span class="number">0</span>); <span class="comment">// 运行过程 0 + 1 + 2 + 3 + 4 + 5 + 6</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);   <span class="comment">// 21</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result_1); <span class="comment">// 21</span></span><br></pre></td></tr></table></figure><h3 id="reduceRight"><a href="#reduceRight" class="headerlink" title="reduceRight"></a>reduceRight</h3><p><code>reduceRight</code>方法接受一个函数作为累加器（accumulator）和数组的每个值（从右到左）将其减少为单个值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [[<span class="number">1</span>, <span class="number">2</span>],[<span class="number">3</span>, <span class="number">4</span>],[<span class="number">5</span>, <span class="number">6</span>]];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span> (<span class="params">acc, item</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> acc.<span class="title function_">concat</span>(item)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> result = arr.<span class="title function_">reduce</span>(fn); </span><br><span class="line"><span class="keyword">let</span> result_1 = arr.<span class="title function_">reduceRight</span>(fn); </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);         <span class="comment">// [ 1, 2, 3, 4, 5, 6 ]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result_1);       <span class="comment">// [ 5, 6, 3, 4, 1, 2 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="compose"><a href="#compose" class="headerlink" title="compose"></a>compose</h3><p>返回值是一个函数, 入参也是函数, 执行的结果作为下一个执行函数的入参.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">compose</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> args = [].<span class="property">slice</span>.<span class="title function_">call</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">initArg</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> args.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">init, current</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">current</span>(init);</span><br><span class="line">        &#125;,initArg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">      </span><br><span class="line"><span class="comment">// 使用例子</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">g</span> = (<span class="params">y</span>) =&gt; y + <span class="number">1</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">f</span> = (<span class="params">x</span>) =&gt; <span class="number">2</span> * x</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> w = <span class="title function_">compose</span>(g, f);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">w</span>(<span class="number">1</span>)) <span class="comment">// 4</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">w</span>(<span class="number">2</span>)) <span class="comment">// 6</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">w</span>(<span class="number">3</span>)) <span class="comment">// 8</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>create-react-app 创建项目更改webpack配置</title>
      <link href="/2020/07/07/react/"/>
      <url>/2020/07/07/react/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>使用<code>create-react-app</code>创建的项目<code>webpack</code>配置文件是隐藏起来的，如果想要把配置暴露出来更改，需要运行 <code>npm run eject </code>命令。<br>不过这种方法有两个缺点：</p><ul><li>npm run eject命名不可逆，一旦配置文件暴露后就不可再隐藏；</li><li>扩展的配置和create-react-app内建的webpack配置混合在了一起，不利于配置出现问题后的排查。</li></ul><p>注意：还有craco也可做create-react-app 项目的webpack配置扩展，但是craco启动项目太慢了，放弃了~</p><h3 id="react-app-rewired介绍"><a href="#react-app-rewired介绍" class="headerlink" title="react-app-rewired介绍"></a>react-app-rewired介绍</h3><p> 使用<a href="https://github.com/timarney/react-app-rewired/blob/HEAD/README_zh.md">react-app-rewired</a>这个npm包可以让我们在不改<code>create-react-app</code>本身的配置基础上去扩展配置，是个非常nice的工具。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h5 id="1）安装"><a href="#1）安装" class="headerlink" title="1）安装"></a>1）安装</h5><p>npm安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install customize-cra react-app-rewired --save-dev</span><br></pre></td></tr></table></figure><p>yarn安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add customize-cra react-app-rewired -D</span><br></pre></td></tr></table></figure><h5 id="2）在根目录中创建一个-config-overrides-js-文件"><a href="#2）在根目录中创建一个-config-overrides-js-文件" class="headerlink" title="2）在根目录中创建一个 config-overrides.js 文件"></a>2）在<code>根目录</code>中创建一个 <code>config-overrides.js</code> 文件</h5><h5 id="3-修改-package-json-里的启动配置"><a href="#3-修改-package-json-里的启动配置" class="headerlink" title="3) 修改 package.json 里的启动配置"></a>3) 修改 package.json 里的启动配置</h5><blockquote><p>注意：不用替换 eject 部分。工具中没有针对 eject 的配置替换，执行了 eject 命令会让工具失去作用。</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/* package.json */</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">-   <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-scripts start&quot;</span><span class="punctuation">,</span></span><br><span class="line">+   <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired start&quot;</span><span class="punctuation">,</span></span><br><span class="line">-   <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-scripts build&quot;</span><span class="punctuation">,</span></span><br><span class="line">+   <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired build&quot;</span><span class="punctuation">,</span></span><br><span class="line">-   <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-scripts test --env=jsdom&quot;</span><span class="punctuation">,</span></span><br><span class="line">+   <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-app-rewired test --env=jsdom&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-scripts eject&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="4-配置config-overrides-js"><a href="#4-配置config-overrides-js" class="headerlink" title="4) 配置config-overrides.js"></a>4) 配置config-overrides.js</h5><ul><li>启用ES7的修改器语法（babel 7）</li><li>配置别名</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @babel/plugin-proposal-decorators  // 修饰器</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* config-overrides.js */</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; override, addDecoratorsLegacy, addWebpackAlias &#125; = <span class="built_in">require</span>(<span class="string">&#x27;customize-cra&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resolve</span>(<span class="params">dir</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;.&#x27;</span>, dir)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">override</span>(</span><br><span class="line">  <span class="comment">// 装饰器</span></span><br><span class="line">  <span class="title function_">addDecoratorsLegacy</span>(),</span><br><span class="line">  <span class="title function_">addWebpackAlias</span>(&#123;</span><br><span class="line">    <span class="string">&#x27;@&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@comps&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/components&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@style&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/style&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@images&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/assets/images&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;@pages&#x27;</span>: <span class="title function_">resolve</span>(<span class="string">&#x27;src/pages&#x27;</span>),</span><br><span class="line">  &#125;)</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run start </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-app-rewired </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表（学习记录）</title>
      <link href="/2020/06/30/ListNode/"/>
      <url>/2020/06/30/ListNode/</url>
      
        <content type="html"><![CDATA[<h3 id="链表是什么"><a href="#链表是什么" class="headerlink" title="链表是什么"></a>链表是什么</h3><ol><li>链表和数组相似，都是有序的列表，都是线性结构。</li><li>不同的是，数组在内存中是一段<code>连续的内存空间</code>，由此遍历数组是可以通过下标直接定位元素的，而链表是<code>离散</code>的内存，可能散播在内存的各个角落，所以链表之间需要通过一个<code>关联</code>把前后节点连接起来，就像用线串珠子一样，需要把珠子一个一个的串起来；</li><li>在链表中一个元素称为<code>结点</code>，结点中包括<code>数据域</code>(珠子)和<code>指针域</code>（线）；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 数据域</span></span><br><span class="line">    <span class="attr">val</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// 指针域，指向下一个结点</span></span><br><span class="line">    <span class="attr">next</span>: &#123;</span><br><span class="line">        <span class="attr">val</span>:<span class="number">2</span>,</span><br><span class="line">        <span class="attr">next</span>: ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p><code>数据域</code>存着这个结点的数据值，而<code>指针域</code>则代表着下一个结点的引用，这样就知道下一个结点是谁啦！</p><h3 id="创建链表"><a href="#创建链表" class="headerlink" title="创建链表"></a>创建链表</h3><p>创建链表需要借助一个构造函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ListNode</span>(<span class="params">val</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = val;   <span class="comment">// 数据域</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span>; <span class="comment">// 指针域</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> node = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">1</span>);</span><br><span class="line">node.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>通过ListNode去创建结点，入参<code>val</code>为<code>数据域</code>,<code>next</code>为<code>指针域</code>；<br><img src="/images/listNode/1_2.png"><br>想要访问链表中的任意一个数据，都需要从起始结点开始，逐个访问next到目标结点为止。为了保证起始结点可访问性，我们一般会创建一个头结点指向起始结点;<br><img src="/images/listNode/1.png"></p><h3 id="链表添加、删除"><a href="#链表添加、删除" class="headerlink" title="链表添加、删除"></a>链表添加、删除</h3><p>链表的添加和删除主要是对指针域next的操作。</p><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><h5 id="尾部添加"><a href="#尾部添加" class="headerlink" title="尾部添加"></a>尾部添加</h5><p> 在尾部添加结点相对简单，只需要吧尾部结点的next指向要添加的结点就行；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> node1 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> node2 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> node3 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将node2添加在node1后面</span></span><br><span class="line">node1.<span class="property">next</span> = node2;</span><br><span class="line"><span class="comment">// 将node3添加在node2后面</span></span><br><span class="line">node2.<span class="property">next</span> = node3;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node1);  <span class="comment">//  &#123; val: 1, next: &#123; val: 2, next: &#123; val: 3, next: null &#125; &#125;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="任意两节点中添加"><a href="#任意两节点中添加" class="headerlink" title="任意两节点中添加"></a>任意两节点中添加</h5><p> 在node1和node2中间插入node3；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> node1 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> node2 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> node3 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">node1.<span class="property">next</span> = node2;  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node1)  <span class="comment">// &#123;val: 1, next: &#123; val: 2, next: null&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 中间插入node3</span></span><br><span class="line">node3.<span class="property">next</span> = node1.<span class="property">next</span>;</span><br><span class="line">node1.<span class="property">next</span> = node3;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node1) <span class="comment">//  &#123; val: 1, next: &#123; val: 3, next: &#123; val: 2, next: null &#125; &#125;&#125;</span></span><br><span class="line">     </span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> node1 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> node2 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> node3 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将node2添加在node1后面</span></span><br><span class="line">node1.<span class="property">next</span> = node2;</span><br><span class="line"><span class="comment">// 将node3添加在node2后面</span></span><br><span class="line">node2.<span class="property">next</span> = node3;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node1); <span class="comment">// &#123; val: 1, next: &#123; val: 2, next: &#123; val: 3, next: null &#125; &#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除node2</span></span><br><span class="line">node1.<span class="property">next</span> = node2.<span class="property">next</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node1); <span class="comment">// &#123; val: 1, next: &#123; val: 3, next: null &#125; &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>删除的node2就变成了一个完全不能到达的结点，这里它就会被垃圾回收机制回收。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>includes与indexOf</title>
      <link href="/2020/06/22/includes/"/>
      <url>/2020/06/22/includes/</url>
      
        <content type="html"><![CDATA[<blockquote><p><code>includes</code>和<code>indexOf</code>都是用来检测数组或者字符串中是否包含某元素的方法，includes是ES6的。</p></blockquote><h3 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h3><ol><li>indexOf 这个方法对大小写敏感，不能是indexof；</li><li>入参有两个：要查找的<code>元素</code>、开始查找的<code>下标</code>(可以不传)；</li><li>查找的元素存在，返回<code>第一个</code>满足条件的索引，后面的就不会管了；</li><li>查找的元素不存在，返回 <code>-1</code>;</li><li>特殊点：对数组中查询 <code>NaN</code> 是无效的；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;as&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;ab&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arrRes = arr.<span class="title function_">indexOf</span>(<span class="string">&#x27;ab&#x27;</span>, <span class="number">0</span>);     <span class="comment">// 从下标0开始查找，是否含有&#x27;as&#x27;,有则返回找到第一个匹配元素的索引</span></span><br><span class="line"><span class="keyword">let</span> arrRes1 = arr.<span class="title function_">indexOf</span>(<span class="string">&#x27;lala&#x27;</span>, <span class="number">0</span>);  <span class="comment">// 从下标0开始查找，是否含有&#x27;lala&#x27;，没有返回 -1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arrRes, arrRes1);          <span class="comment">// 1  -1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;abcdefghi&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> strRes = str.<span class="title function_">indexOf</span>(<span class="string">&#x27;b&#x27;</span>, <span class="number">0</span>);     <span class="comment">// 从下标0开始查找，是否含有&#x27;b&#x27;,有则返回找到第一个匹配元素的索引</span></span><br><span class="line"><span class="keyword">let</span> strRes1 = str.<span class="title function_">indexOf</span>(<span class="string">&#x27;a&#x27;</span>, <span class="number">3</span>);    <span class="comment">// 从下标3开始查找，是否含有&#x27;a&#x27;，没有返回 -1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(strRes, strRes1);         <span class="comment">// 1  -1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> special = [<span class="literal">undefined</span>, <span class="literal">null</span>, <span class="title class_">NaN</span>, <span class="string">&#x27;NaN&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(special.<span class="title function_">indexOf</span>(<span class="literal">undefined</span>));    <span class="comment">// 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(special.<span class="title function_">indexOf</span>(<span class="literal">null</span>));         <span class="comment">// 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(special.<span class="title function_">indexOf</span>(<span class="title class_">NaN</span>));          <span class="comment">// -1 查不到</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(special.<span class="title function_">indexOf</span>(<span class="string">`NaN`</span>));        <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h3 id="includes"><a href="#includes" class="headerlink" title="includes"></a>includes</h3><ol><li>入参、用法方面和indexOf是一样的；</li><li>查找的元素存在，返回 true;</li><li>查找的元素不存在，返回 false;</li><li>解决了indexOf查<code>NaN</code>无效的问题；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;as&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arrRes = arr.<span class="title function_">includes</span>(<span class="string">&#x27;ab&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">let</span> arrRes1 = arr.<span class="title function_">includes</span>(<span class="string">&#x27;lala&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arrRes, arrRes1); <span class="comment">// true false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;abcdefghi&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> strRes = str.<span class="title function_">includes</span>(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> strRes1 = str.<span class="title function_">includes</span>(<span class="string">&#x27;a&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(strRes, strRes1); <span class="comment">// true false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> special = [<span class="literal">undefined</span>, <span class="literal">null</span>, <span class="title class_">NaN</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(special.<span class="title function_">includes</span>(<span class="literal">undefined</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(special.<span class="title function_">includes</span>(<span class="literal">null</span>));      <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(special.<span class="title function_">includes</span>(<span class="title class_">NaN</span>));       <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h3><p>为了让程序执行时间数据更容易区分，准备了一个长度1000000位的数组，分别使用<code>indexOf</code>和<code>includes</code>去查询，看看他们各自使用的时间：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成随机字符串</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randomString</span>(<span class="params">len</span>) &#123;</span><br><span class="line">    len = len || <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">let</span> $chars = <span class="string">&#x27;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#x27;</span>; <span class="comment">/****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/</span></span><br><span class="line">    <span class="keyword">let</span> maxPos = $chars.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        res += $chars.<span class="title function_">charAt</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * maxPos));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 组装一个长度1000000位的数组</span></span><br><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++) &#123;</span><br><span class="line">    arr.<span class="title function_">push</span>(<span class="title function_">randomString</span>(<span class="number">4</span>));</span><br><span class="line">&#125;</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&#x27;indexOf耗时&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;索引：&#x27;</span>, arr.<span class="title function_">indexOf</span>(<span class="string">&#x27;test&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&#x27;indexOf耗时&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&#x27;includes耗时&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;是否存在：&#x27;</span>, arr.<span class="title function_">includes</span>(<span class="string">&#x27;test&#x27;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&#x27;includes耗时&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为了提高数据的准确性，运行了很多次，打印结果罗列在下方，根据数据可以明显的看出<code>includes</code>性能优于<code>indexOf</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">索引： 1000000</span><br><span class="line">indexOf耗时: 13.363ms</span><br><span class="line">是否存在： true</span><br><span class="line">includes耗时: 8.925ms</span><br><span class="line"></span><br><span class="line">索引： 1000000</span><br><span class="line">indexOf耗时: 13.729ms</span><br><span class="line">是否存在： true</span><br><span class="line">includes耗时: 14.973ms</span><br><span class="line"></span><br><span class="line">索引： 1000000</span><br><span class="line">indexOf耗时: 12.111ms</span><br><span class="line">是否存在： true</span><br><span class="line">includes耗时: 9.591ms</span><br><span class="line"></span><br><span class="line">索引： 1000000</span><br><span class="line">indexOf耗时: 13.745ms</span><br><span class="line">是否存在： true</span><br><span class="line">includes耗时: 10.403ms</span><br><span class="line"></span><br><span class="line">索引： 1000000</span><br><span class="line">indexOf耗时: 11.771ms</span><br><span class="line">是否存在： true</span><br><span class="line">includes耗时: 8.912ms</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p> 在必须要知道元素的索引情况下，只能用<code>indexOf</code>，其他情况都可以用includes代替。</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回文字符串(学习笔记)</title>
      <link href="/2020/06/17/string/"/>
      <url>/2020/06/17/string/</url>
      
        <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>回文字符串，就是正着读和倒着读都一样的字符串，比如说这样：<code>&#39;abccba&#39;</code>，回文字符串还有一个特性，单个字符串肯定回文，也就是说<code>&#39;aba&#39;</code>也是回文字符串；</p><p>根据这个定义，我们不难写出判断回文字符串的代码： :smiley:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isPalindrome</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="comment">// 先反转字符串</span></span><br><span class="line">    <span class="keyword">const</span> reversedStr = str.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="comment">// 判断反转前后是否相等</span></span><br><span class="line">    <span class="keyword">return</span> reversedStr === str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以从回文字符串的<code>对称性</code>考虑（记住这个<code>对称性</code>，很重要）还可以这样写:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isPalindrome</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!str) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> len = str.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> k = len - <span class="number">1</span>;    <span class="comment">// 指针</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= k &amp;&amp; str[i] !== str[k]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        k--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="高频题"><a href="#高频题" class="headerlink" title="高频题"></a>高频题</h3><h4 id="1-给定一个非空字符串-s，最多删除一个字符。判断是否能成为回文字符串。"><a href="#1-给定一个非空字符串-s，最多删除一个字符。判断是否能成为回文字符串。" class="headerlink" title="1.给定一个非空字符串 s，最多删除一个字符。判断是否能成为回文字符串。"></a>1.给定一个非空字符串 s，最多删除一个字符。判断是否能成为回文字符串。</h4><blockquote><p>一般看到回文字符串就要想起他的<code>对称性</code>，<code>对称性</code>要对应的想到<code>双指针</code>。</p></blockquote><p>思路：</p><ol><li>通过左右指针所指的元素是否相等来判断是否回文；</li><li>如果不等，分别左右指针先后跳过一位，对比是否相等；</li><li>如果还不等，那不满足回文字符串对称性，肯定就不是了；</li><li>如果相等，继续进行指针对比，如果接下来都对称了，且跳过次数不大于1则满足<code>最多删除一个字符，能成为回文字符串</code>；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">validPalindrome</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!str) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> len = str.<span class="property">length</span>;</span><br><span class="line">    <span class="comment">// j，k左右指针、count 记录跳过的次数、 flag是否回文</span></span><br><span class="line">    <span class="keyword">let</span> j = <span class="number">0</span>,</span><br><span class="line">        k = len - <span class="number">1</span>,</span><br><span class="line">        count = <span class="number">0</span>,</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &gt; k) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (str[j] === str[k]) &#123;</span><br><span class="line">            j++;</span><br><span class="line">            k--;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str[j + <span class="number">1</span>] === str[k]) &#123;</span><br><span class="line">            <span class="comment">// 左指针跳过一个</span></span><br><span class="line">            j = j + <span class="number">2</span>;</span><br><span class="line">            k--;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str[j] === str[k - <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="comment">// 右指针跳过一个</span></span><br><span class="line">            k = k - <span class="number">2</span>;</span><br><span class="line">            j++;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 非回文字符串,直接跳出循环</span></span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">validPalindrome</span>(<span class="string">&#x27;abcdefgfedcba&#x27;</span>));     <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">validPalindrome</span>(<span class="string">&#x27;a1bcdefgfedcba&#x27;</span>));    <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">validPalindrome</span>(<span class="string">&#x27;a1bcdefgfe2dcba~&#x27;</span>));  <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>性能优化：<br>在上面思路的第4条，如果有一次不等进行了跳过，就已经达到<code>最多删除一个字符</code>条件上限了，直接把还未对比的字符串当成一个整字符串判断是否是回文就行，如果回文则可以满足条件，不回文则不满足，没必要再做多余的循环：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">validPalindrome</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="comment">// 缓存字符串的长度</span></span><br><span class="line">    <span class="keyword">const</span> len = s.<span class="property">length</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// i、j分别为左右指针</span></span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span>,</span><br><span class="line">        j = len - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当左右指针均满足对称时，一起向中间前进</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; j &amp;&amp; s[i] === s[j]) &#123;</span><br><span class="line">        i++</span><br><span class="line">        j--</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尝试判断跳过左指针元素后字符串是否回文</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">isPalindrome</span>(i + <span class="number">1</span>, j)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 尝试判断跳过右指针元素后字符串是否回文</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">isPalindrome</span>(i, j - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 工具方法，用于判断字符串是否回文</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">isPalindrome</span>(<span class="params">st, ed</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (st &lt; ed) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[st] !== s[ed]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">            st++</span><br><span class="line">            ed--</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认返回 false</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">validPalindrome</span>(<span class="string">&#x27;abcdefgfedcba&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">validPalindrome</span>(<span class="string">&#x27;a1bcdefgfedcba&#x27;</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">validPalindrome</span>(<span class="string">&#x27;a1bcdefgfe2dcba~&#x27;</span>)); <span class="comment">// false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-字符串匹配问题"><a href="#2-字符串匹配问题" class="headerlink" title="2.字符串匹配问题"></a>2.字符串匹配问题</h4><p>设计一个支持以下两种操作的数据结构：</p><blockquote><p>void addWord(word)<br> bool search(word)<br> search(word) 可以搜索文字或正则表达式字符串，字符串只包含字母 . 或 a-z 。<br>. 可以表示任何一个字母。</p></blockquote><blockquote><p>示例: addWord(“bad”)<br>addWord(“dad”)<br>addWord(“mad”)<br>search(“pad”) -&gt; false<br>search(“bad”) -&gt; true<br>search(“.ad”) -&gt; true<br>search(“b..”) -&gt; true<br>说明:<br>你可以假设所有单词都是由小写字母 a-z 组成的。</p></blockquote><p>思路：</p><ol><li>要求既能添加，还能对添加的数据进行搜索，那肯定是要把添加的数组存起来，且最好是键值对存储，减少检索成本，这里我们使用Map;</li><li>这里为了降低查找时的复杂度，我们可以考虑以字符串的长度为 key，相同长度的字符串存在一个数组中，这样可以提高我们后续定位的效率。</li><li>还有一点是，search方法，既能完全匹配，还要能正则匹配，所以入参需要判断是普通字符串还是正则表达式；</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">WordDictionary</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">words</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">WordDictionary</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">addWord</span> = <span class="keyword">function</span> (<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!str) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> len = str.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> val = <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">get</span>(len);</span><br><span class="line">    <span class="keyword">if</span> (val) &#123;</span><br><span class="line">        val.<span class="title function_">push</span>(str);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">set</span>(len, val);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">set</span>(len, [str]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">WordDictionary</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">search</span> = <span class="keyword">function</span> (<span class="params">str</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!str) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传入的字符串的长度找不到记录，则查询的字符串不存在</span></span><br><span class="line">    <span class="keyword">let</span> len = str.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">get</span>(len)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">let</span> val = <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">get</span>(len);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断传入的是字符串还是正则</span></span><br><span class="line">    <span class="keyword">if</span> (!str.<span class="title function_">includes</span>(<span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> val.<span class="title function_">includes</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 正则</span></span><br><span class="line">    <span class="keyword">let</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只要有一项满足就为true,</span></span><br><span class="line">    <span class="comment">// some方法，有一项满足条件的返回为true， </span></span><br><span class="line">    <span class="comment">// every方法，每一项都要满足条件才返回true</span></span><br><span class="line">    <span class="keyword">return</span> val.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> reg.<span class="title function_">test</span>(item));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Words</span> = <span class="keyword">new</span> <span class="title class_">WordDictionary</span>();</span><br><span class="line"></span><br><span class="line"><span class="title class_">Words</span>.<span class="title function_">addWord</span>(<span class="string">&#x27;dad&#x27;</span>);</span><br><span class="line"><span class="title class_">Words</span>.<span class="title function_">addWord</span>(<span class="string">&#x27;lala&#x27;</span>);</span><br><span class="line"><span class="title class_">Words</span>.<span class="title function_">addWord</span>(<span class="string">&#x27;abc&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Words</span>.<span class="property">words</span>);           <span class="comment">// Map &#123; 3 =&gt; [ &#x27;dad&#x27;, &#x27;abc&#x27; ], 4 =&gt; [ &#x27;lala&#x27; ] &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Words</span>.<span class="title function_">search</span>(<span class="string">&#x27;l...&#x27;</span>));  <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Words</span>.<span class="title function_">search</span>(<span class="string">&#x27;dad&#x27;</span>));   <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Words</span>.<span class="title function_">search</span>(<span class="string">&#x27;a..&#x27;</span>));   <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Words</span>.<span class="title function_">search</span>(<span class="string">&#x27;l&#x27;</span>));     <span class="comment">// false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双指针法（学习笔记）</title>
      <link href="/2020/06/15/complexity/"/>
      <url>/2020/06/15/complexity/</url>
      
        <content type="html"><![CDATA[<h3 id="双指针法"><a href="#双指针法" class="headerlink" title="双指针法"></a>双指针法</h3><p>双指针法常用于<code>求和</code>和<code>排序</code>之类的场景,是一种时间换空间的算法。<br>学习算法只看理论知识是远远不够的，需要从各种各样的题中去细细体悟算法的魅力，从而真真的把知识刻在脑子里，成为自己的一部分；<br>所以此篇文章基本都是算法题，让我们从实际的代码角度来揭开双指针的神秘面纱吧！<br>下面的题都是从某一方面的知识写的例子，大家如果有其他想法，代码敲起来~</p><h4 id="1-给定一个整数数组-nums-和一个目标值-target，请你在该数组中找出和为目标值的那-两个整数，并返回他们的数组下标。"><a href="#1-给定一个整数数组-nums-和一个目标值-target，请你在该数组中找出和为目标值的那-两个整数，并返回他们的数组下标。" class="headerlink" title="1. 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个整数，并返回他们的数组下标。"></a>1. 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个整数，并返回他们的数组下标。</h4><blockquote><p>这道题没有用到双指针，单纯的用来练练手，从第二题开始为双指针算法题；<br>示例: 给定 nums = [2, 7, 11, 15], target = 9<br>因为 nums[0] + nums[1] = 2 + 7 = 9 所以返回 [0, 1]</p></blockquote><p> <code>求和</code>问题基本可以反向思考为 <code>差值</code>问题，比如说<code>a + b = target</code>,则可以想成<code>target - a = b</code>, 这样就能避免对数组进行两次循环，再对循环的值相加；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 方法一</span></span><br><span class="line"><span class="keyword">let</span> nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">demo</span> (nums, target) &#123;</span><br><span class="line">    <span class="comment">// 这里我用对象来模拟 map 的能力</span></span><br><span class="line">    <span class="keyword">const</span> diffs = &#123;&#125;</span><br><span class="line">    <span class="comment">// 缓存数组长度</span></span><br><span class="line">    <span class="keyword">const</span> len = nums.<span class="property">length</span></span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="comment">// 判断当前值对应的 target 差值是否存在（是否已遍历过）</span></span><br><span class="line">        <span class="keyword">if</span> (diffs[target - nums[i]] !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="comment">// 若有对应差值，那么答案get！</span></span><br><span class="line">            <span class="keyword">return</span> [diffs[target - nums[i]], i]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 若没有对应差值，则记录当前值</span></span><br><span class="line">        diffs[nums[i]] = i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">demo</span>(nums, <span class="number">16</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result); <span class="comment">// [ 6, 8 ]</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 方法二</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">demo</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存数组长度</span></span><br><span class="line">    <span class="keyword">const</span> len = nums.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> num = target - nums[i];</span><br><span class="line">        <span class="keyword">let</span> index = nums.<span class="title function_">indexOf</span>(num);</span><br><span class="line">        <span class="keyword">if</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [i, index];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result2 = <span class="title function_">demo</span>(nums, <span class="number">16</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result2);  <span class="comment">// [ 5, 9 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-给你两个有序整数数组-nums1-和-nums2，请你将-nums2-合并到-nums1-中，使-nums1-成为一个有序数组。"><a href="#2-给你两个有序整数数组-nums1-和-nums2，请你将-nums2-合并到-nums1-中，使-nums1-成为一个有序数组。" class="headerlink" title="2. 给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。"></a>2. 给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。</h4><blockquote><p>说明: 初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。 你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">m</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">n</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125; Do not return anything, modify nums1 in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">demo</span>(<span class="params">nums1, m, nums2, n</span>) &#123;</span><br><span class="line">    <span class="comment">// 初始化两个指针的指向，初始化 nums1 尾部索引k</span></span><br><span class="line">    <span class="keyword">let</span> i = m - <span class="number">1</span>, j = n - <span class="number">1</span>, k = m + n - <span class="number">1</span></span><br><span class="line">    <span class="comment">// 当两个数组都没遍历完时，指针同步移动</span></span><br><span class="line">    <span class="keyword">while</span>(i &gt;= <span class="number">0</span> &amp;&amp; j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 取较大的值，从末尾往前填补</span></span><br><span class="line">        <span class="keyword">if</span>(nums1[i] &gt;= nums2[j]) &#123;</span><br><span class="line">            nums1[k] = nums1[i] </span><br><span class="line">            i-- </span><br><span class="line">            k--</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            nums1[k] = nums2[j] </span><br><span class="line">            j-- </span><br><span class="line">            k--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// nums2 留下的情况，特殊处理一下 </span></span><br><span class="line">    <span class="keyword">while</span>(j&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">        nums1[k] = nums2[j]  </span><br><span class="line">        k-- </span><br><span class="line">        j--</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>投机写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">demo</span>(<span class="params">nums1, m, nums2, n</span>) &#123;</span><br><span class="line">    nums1.<span class="title function_">splice</span>(m);</span><br><span class="line">    nums2.<span class="title function_">splice</span>(n);</span><br><span class="line">    <span class="keyword">return</span> [...nums1, ...nums2].<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-给定一个数组-nums，编写一个函数将所有-0-移动到数组的末尾，同时保持非零元素的相对顺序。"><a href="#3-给定一个数组-nums，编写一个函数将所有-0-移动到数组的末尾，同时保持非零元素的相对顺序。" class="headerlink" title="3. 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。"></a>3. 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。</h4><blockquote><p>输入: [ 0, 1, 0, 3, 12 ], 输出: [ 1, 3, 12, 0, 0 ], 只能在当前数组上操作，不能使用新建数组、合并等方法；</p></blockquote><p>常规方案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">12</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">demo</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> num = arr.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">if</span>(!num) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] === <span class="number">0</span>) &#123;</span><br><span class="line">            arr.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">            arr.<span class="title function_">push</span>(<span class="number">0</span>);</span><br><span class="line">            i--;    <span class="comment">// 当前项删除后，下一个元素的下标前移了一位，所以要遍历到下一个元素，就需要保持原位</span></span><br><span class="line">            num--;  <span class="comment">// 删除了一位，数组需要的循环次数就应该减去一位，移到最后的0是不需要遍历的</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">demo</span>(arr);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// [1,3,12,0,0]</span></span><br></pre></td></tr></table></figure><p>双指针方案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">12</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">demo</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = nums.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">if</span> (!n) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 把非零的项依次移到前面，i为指针</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[j] !== <span class="number">0</span>) &#123;</span><br><span class="line">            nums[i] = nums[j];</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// k为指针2，指向非零项处理后第一个为0的元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k = i; k &lt; n; k++) &#123;</span><br><span class="line">        nums[k] = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">demo</span>(arr)); <span class="comment">// [ 1, 3, 12, 0, 0 ]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-给你一个包含-n-个整数的数组-nums，判断-nums-中是否存在三个元素-a，b，c-，使得-a-b-c-0-？请你找出所有满足条件且不重复的三元组。"><a href="#4-给你一个包含-n-个整数的数组-nums，判断-nums-中是否存在三个元素-a，b，c-，使得-a-b-c-0-？请你找出所有满足条件且不重复的三元组。" class="headerlink" title="4. 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。"></a>4. 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。</h4><blockquote><p>示例：给定数组 nums = [-1, 0, 1, 2, -1, -4]， 满足要求的三元组集合为： [ [-1, 0, 1], [-1, -1, 2] ]<br> 注意：答案中不可以包含重复的三元组。</p></blockquote><blockquote><p>解析:<br>1.在<code>数组</code>和<code>求和</code>的算法中，我们要习惯性在脑子里显现<code>求和就是求差值</code>、 <code>指针</code> 这两思路！<br>2.尽量从求差值的角度去减少循环次数，从而降低时间复杂度；<br>3.指针要求数组是可序的，所以当数组是无序时，要将数组排序，创造可以使用指针的条件；</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对撞指针</span></span><br><span class="line"><span class="keyword">let</span> nums = [-<span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">2</span>, <span class="number">0</span>, -<span class="number">1</span>, <span class="number">1</span> - <span class="number">2</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">let</span> m = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 满足数组中三个数相加等于 m 的数组对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; arr 目标数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; m  三个数相加的和</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">array[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">demo</span>(<span class="params">arr, m</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!arr || !arr.<span class="property">length</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 保存目标数组</span></span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="comment">// 双指针法需要数组有序，有序才好指针移动</span></span><br><span class="line">    arr = arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(arr);  // [-3, -2, -1, -1, -1,  0,  1,  2,  3]</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> len = arr.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="comment">// 对撞指针</span></span><br><span class="line">        <span class="keyword">let</span> j = i + <span class="number">1</span>; <span class="comment">// 指针1</span></span><br><span class="line">        <span class="keyword">let</span> k = len - <span class="number">1</span>; <span class="comment">// 尾指针</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理重复</span></span><br><span class="line">        <span class="keyword">if</span> (arr[i] === arr[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (j &lt; k) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((arr[i] + arr[j] + arr[k]) &gt; m) &#123;</span><br><span class="line">                <span class="comment">// 则尾指针向前移动</span></span><br><span class="line">                k--;</span><br><span class="line">                <span class="comment">// 尾指针如果重复则跳过</span></span><br><span class="line">                <span class="keyword">if</span> (arr[k] === arr[k + <span class="number">1</span>]) &#123;</span><br><span class="line">                    k--;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((arr[i] + arr[j] + arr[k]) &lt; m) &#123;</span><br><span class="line">                <span class="comment">// 前指针向后移动一位</span></span><br><span class="line">                j++;</span><br><span class="line">                <span class="comment">// 前指针如果重复则跳过</span></span><br><span class="line">                <span class="keyword">if</span> (arr[j] === arr[j - <span class="number">1</span>]) &#123;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((arr[i] + arr[j] + arr[k]) === m) &#123;</span><br><span class="line">                result.<span class="title function_">push</span>([arr[i], arr[j], arr[k]]);</span><br><span class="line">                <span class="comment">// 两指针一同前进</span></span><br><span class="line">                k--;</span><br><span class="line">                j++;</span><br><span class="line">                <span class="comment">// 重复值跳过，是一种优化，让代码少干点没有意义的活</span></span><br><span class="line">                <span class="keyword">if</span> (arr[k] === arr[k + <span class="number">1</span>]) &#123;</span><br><span class="line">                    k--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] === arr[j - <span class="number">1</span>]) &#123;</span><br><span class="line">                    j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">demo</span>(nums, m));</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉树遍历(学习笔记)</title>
      <link href="/2020/06/10/binaryTree/"/>
      <url>/2020/06/10/binaryTree/</url>
      
        <content type="html"><![CDATA[<h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> root = &#123;</span><br><span class="line">  <span class="attr">val</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">  <span class="attr">left</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="string">&quot;B&quot;</span>,</span><br><span class="line">    <span class="attr">left</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="string">&quot;D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="string">&quot;E&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">right</span>: &#123;</span><br><span class="line">    <span class="attr">val</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">    <span class="attr">right</span>: &#123;</span><br><span class="line">      <span class="attr">val</span>: <span class="string">&quot;F&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="1-先序遍历"><a href="#1-先序遍历" class="headerlink" title="1.先序遍历"></a>1.先序遍历</h3><blockquote><p>遍历的顺序是： 根节点 -&gt; 左子树 -&gt;右子树</p></blockquote><p> <img src="/images/tree/preorder.png" alt="图片"><br> <img src="/images/tree/preorder.gif" alt="图片"></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">preorder</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 递归边界，root 为空</span></span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span> ;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出当前遍历的结点值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前遍历的结点值是：&#x27;</span>, root.<span class="property">val</span>);  </span><br><span class="line">    <span class="comment">// 递归遍历左子树 </span></span><br><span class="line">    <span class="title function_">preorder</span>(root.<span class="property">left</span>);  </span><br><span class="line">    <span class="comment">// 递归遍历右子树  </span></span><br><span class="line">    <span class="title function_">preorder</span>(root.<span class="property">right</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><blockquote><p>1.调用 <code>preorder(root)</code>，这里 <code>root</code> 就是 <code>A</code>，它非空，所以进入递归式，输出 <code>A</code> 值。接着优先遍历左子树，<code>preorder(root.left)</code> 此时为 <code>preorder(B)</code>；</p></blockquote><blockquote><ol start="2"><li>进入 <code>preorder(B)</code>的逻辑： 入参为结点 <code>B</code>，非空，进入递归式，输出 <code>B</code> 值。接着优先遍历 <code>B</code> 的左子树，<code>preorder(root.left)</code> 此时为 <code>preorder(D)</code>；</li></ol></blockquote><blockquote><ol start="3"><li>进入 <code>preorder(D)</code>的逻辑： 入参为结点 <code>D</code>，非空，进入递归式，输出 <code>D</code> 值。接着优先遍历 <code>D</code> 的左子树，<code>preorder(root.left)</code> 此时为 <code>preorder(null)</code>;</li></ol></blockquote><blockquote><ol start="4"><li>进入<code>preorder(null)</code>，发现抵达了递归边界，直接 <code>return</code> 掉。紧接着是 <code>preorder(D)</code>的逻辑往下走，走到了 <code>preorder(root.right)</code>;</li></ol></blockquote><blockquote><ol start="5"><li>再次进入<code>preorder(null)</code>，发现抵达了递归边界，直接 <code>return</code> 掉，回到<code>preorder(D)</code>里。接着 <code>preorder(D)</code>的逻辑往下走，发现 <code>preorder(D)</code> 已经执行完了。于是返回，回到<code>preorder(B)</code>里，接着<code>preorder(B)</code>往下走，进入 <code>preorder(root.right)</code>，也就是 <code>preorder(E)</code>,<code>E</code> 不为空，进入递归式，输出 <code>E</code> 值。接着优先遍历 <code>E</code> 的左子树，<code>preorder(root.left)</code> 此时为 <code>preorder(null)</code>，触碰递归边界，直接返回 <code>preorder(E)</code>；继续<code>preorder(E)</code>执行下去，是<code>preorder(root.right)</code>，这里 <code>E</code> 的 <code>right</code> 同样是 <code>null</code>，故直接返回。如此一来，<code>preorder(E)</code>就执行完了，回到<code>preorder(B)</code>里去；发现<code>preorder(B)</code>也执行完了，于是回到<code>preorder(A)</code>里去，执行<code>preorder(A)</code>中的 <code>preorder(root.right)</code>。</li></ol></blockquote><blockquote><ol start="6"><li><code>root</code> 是<code>A</code>，<code>root.right</code> 就是<code>C</code> 了，进入<code>preorder(C)</code>的逻辑, <code>C</code> 不为空，进入递归式，输出 <code>C</code> 值。接着优先遍历 <code>C</code> 的左子树，<code>preorder(root.left)</code> 此时为 <code>preorder(null)</code>，触碰递归边界，直接返回。继续<code>preorder(C)</code>执行下去，是<code>preorder(root.right)</code>，这里 <code>C</code> 的 <code>right</code>是 <code>F</code>;</li></ol></blockquote><blockquote><ol start="7"><li>进入<code>preorder(F)</code>的逻辑，<code>F</code> 不为空，进入递归式，输出 <code>F</code> 值。接着优先遍历 <code>F</code> 的左子树，<code>preorder(root.left)</code> 此时为 <code>preorder(null)</code>，触碰递归边界，直接返回 <code>preorder(F)</code>；继续<code>preorder(F)</code>执行下去，是<code>preorder(root.right)</code>，这里 <code>F</code> 的 <code>right</code> 同样是 <code>null</code>，故直接返回<code>preorder(F)</code>。此时<code>preorder(F)</code>已经执行完了，返回<code>preorder(C)</code>；发现<code>preorder(C)</code>也执行完了，就回到 <code>preorder(A)</code>；发现<code>preorder(A)</code>作为递归入口，它的逻辑也已经执行完了，于是我们的递归活动就正式画上了句号。到此为止，6个结点也已全部按照先序遍历顺序输出;</li></ol></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">当前遍历的结点值是： A</span><br><span class="line">当前遍历的结点值是： B</span><br><span class="line">当前遍历的结点值是： D</span><br><span class="line">当前遍历的结点值是： E</span><br><span class="line">当前遍历的结点值是： C</span><br><span class="line">当前遍历的结点值是： F</span><br></pre></td></tr></table></figure><h3 id="2-中序遍历"><a href="#2-中序遍历" class="headerlink" title="2.中序遍历"></a>2.中序遍历</h3><blockquote><p>左子树 -&gt; 根节点 -&gt; 右子树</p></blockquote><p> <img src="/images/tree/inorder.png" alt="图片"><br> <img src="/images/tree/inorder.gif" alt="图片"></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">inorder</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 递归边界，root 为空</span></span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 递归遍历左子树 </span></span><br><span class="line">    <span class="title function_">inorder</span>(root.<span class="property">left</span>);  </span><br><span class="line">    <span class="comment">// 输出当前遍历的结点值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前遍历的结点值是：&#x27;</span>, root.<span class="property">val</span>);  </span><br><span class="line">    <span class="comment">// 递归遍历右子树  </span></span><br><span class="line">    <span class="title function_">inorder</span>(root.<span class="property">right</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>按照中序遍历出来，同一颗二叉树，结点内容输出结果如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">当前遍历的结点值是： D</span><br><span class="line">当前遍历的结点值是： B</span><br><span class="line">当前遍历的结点值是： E</span><br><span class="line">当前遍历的结点值是： A</span><br><span class="line">当前遍历的结点值是： C</span><br><span class="line">当前遍历的结点值是： F</span><br></pre></td></tr></table></figure><h3 id="3-后序遍历"><a href="#3-后序遍历" class="headerlink" title="3.后序遍历"></a>3.后序遍历</h3><blockquote><p>遍历的顺序是：左子树 -&gt; 右子树 -&gt; 根节点</p></blockquote><p> <img src="/images/tree/postorder.png" alt="图片"><br> <img src="/images/tree/postorder.gif" alt="图片"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">postorder</span>(<span class="params">root</span>) &#123;</span><br><span class="line">    <span class="comment">// 递归边界，root 为空</span></span><br><span class="line">    <span class="keyword">if</span>(!root) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 递归遍历左子树 </span></span><br><span class="line">    <span class="title function_">postorder</span>(root.<span class="property">left</span>);  </span><br><span class="line">    <span class="comment">// 递归遍历右子树  </span></span><br><span class="line">    <span class="title function_">postorder</span>(root.<span class="property">right</span>);</span><br><span class="line">    <span class="comment">// 输出当前遍历的结点值</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前遍历的结点值是：&#x27;</span>, root.<span class="property">val</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>遍历结果：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">当前遍历的结点值是： D</span><br><span class="line">当前遍历的结点值是： E</span><br><span class="line">当前遍历的结点值是： B</span><br><span class="line">当前遍历的结点值是： F</span><br><span class="line">当前遍历的结点值是： C</span><br><span class="line">当前遍历的结点值是： A</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>政治发展的动力<br>政治发展动力的来源是人类对人类社会发展的不懈追求；<br>人是政治生活的主体，也是政治发展的推动力量，更是政治发展的服务对象；<br>政治发展的动力来源是阶级关系和阶级结构不断变化的推动；<br>政治发展的动力来源是政治结构自我完善，自我发展的要求；<br>政治发展的动力来源是人类社会的相互沟通，学习的影响；</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二叉树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pdfjs-dist + vue 使用记录</title>
      <link href="/2020/06/08/pdf/"/>
      <url>/2020/06/08/pdf/</url>
      
        <content type="html"><![CDATA[<blockquote><p>现在公司把外部网都限制死了，导致笔记都不能做，为知笔记这么好使的东西居然不给用，好气哦~ 但是做笔记的习惯不能丢！暂且把blog当笔记使吧~</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;pdf_container bg_gray&quot; ref=&quot;pdfWrap&quot;&gt;</span><br><span class="line">    &lt;canvas ref=&quot;pdfCanvas&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;!-- &lt;div ref=&quot;pdfSvg&quot;&gt;&lt;/div&gt; --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 提供三个event, 父级直接调用, 触发按钮请自行在父级定义。</span></span><br><span class="line"><span class="comment"> * onLarger 放大</span></span><br><span class="line"><span class="comment"> * onSmaller 缩小</span></span><br><span class="line"><span class="comment"> * onRotate 旋转</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> <span class="variable constant_">PDF</span> <span class="keyword">from</span> <span class="string">&#x27;pdfjs-dist&#x27;</span>;</span><br><span class="line"><span class="comment">// PDF.disableWorker = true;</span></span><br><span class="line"><span class="variable constant_">PDF</span>.<span class="property">GlobalWorkerOptions</span>.<span class="property">workerSrc</span> = <span class="built_in">require</span>(<span class="string">&#x27;pdfjs-dist/build/pdf.worker.min&#x27;</span>);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;appliClaimPdf&#x27;</span>,</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">pages</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">scale</span>: <span class="number">1.5</span>, <span class="comment">// 缩放倍数</span></span><br><span class="line">      <span class="attr">rotate</span>: <span class="number">0</span>, <span class="comment">// 旋转角度</span></span><br><span class="line">      <span class="attr">pdf</span>: <span class="literal">null</span> <span class="comment">// pdf本身</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="title function_">url</span>(<span class="params">newData, oldData</span>) &#123;</span><br><span class="line">      <span class="comment">// url异步拿取</span></span><br><span class="line">      <span class="keyword">if</span> (newData) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">previewPDF</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">url</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">previewPDF</span>();</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">onLarger</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">scale</span> &gt; <span class="number">3</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;globalLoading&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scale</span> += <span class="number">0.25</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getPage</span>(<span class="variable language_">this</span>.<span class="property">pdf</span>, <span class="variable language_">this</span>.<span class="property">scale</span>, <span class="variable language_">this</span>.<span class="property">rotate</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">onSmaller</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">scale</span> &lt; <span class="number">0.7</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;globalLoading&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">scale</span> -= <span class="number">0.25</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getPage</span>(<span class="variable language_">this</span>.<span class="property">pdf</span>, <span class="variable language_">this</span>.<span class="property">scale</span>, <span class="variable language_">this</span>.<span class="property">rotate</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">onRotate</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">rotate</span> &gt; <span class="number">360</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">rotate</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;globalLoading&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">rotate</span> += <span class="number">90</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getPage</span>(<span class="variable language_">this</span>.<span class="property">pdf</span>, <span class="variable language_">this</span>.<span class="property">scale</span>, <span class="variable language_">this</span>.<span class="property">rotate</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">previewPDF</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;globalLoading&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">      <span class="keyword">let</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">      <span class="comment">// 引入pdf.js的字体</span></span><br><span class="line">      <span class="keyword">let</span> <span class="variable constant_">CMAP_URL</span> = <span class="string">&#x27;https://unpkg.com/pdfjs-dist@2.0.943/cmaps/&#x27;</span>;</span><br><span class="line">      <span class="keyword">let</span> loadingTask = <span class="variable constant_">PDF</span>.<span class="title function_">getDocument</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: _this.<span class="property">url</span>,</span><br><span class="line">        <span class="comment">// url: &#x27;http://localhost:8080/api/upload/wechat/pdf/IID00921683.pdf&#x27;, // 本地调试</span></span><br><span class="line">        <span class="attr">cMapUrl</span>: <span class="variable constant_">CMAP_URL</span>,</span><br><span class="line">        <span class="attr">cMapPacked</span>: <span class="literal">true</span></span><br><span class="line">      &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">pdf</span> =&gt;</span> &#123;</span><br><span class="line">        _this.<span class="property">pdf</span> = pdf;</span><br><span class="line">        <span class="keyword">let</span> numPages = pdf.<span class="property">numPages</span>;</span><br><span class="line">        <span class="keyword">let</span> pageNumber = <span class="number">1</span>;</span><br><span class="line">        _this.<span class="title function_">getPage</span>(pdf, _this.<span class="property">scale</span>, _this.<span class="property">rotate</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">getPage</span>(<span class="params">pdf, scale, rotate, pageNumber, numPages</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">      pdf.<span class="title function_">getPage</span>(pageNumber).<span class="title function_">then</span>(<span class="function"><span class="params">page</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 方法一 canvas (页面会白屏闪烁)</span></span><br><span class="line">        <span class="comment">// 获取DOM中为预览PDF准备好的canvasDOM对象</span></span><br><span class="line">        <span class="keyword">let</span> canvasWrap = _this.<span class="property">$refs</span>.<span class="property">pdfWrap</span>;</span><br><span class="line">        <span class="keyword">let</span> canvas = _this.<span class="property">$refs</span>.<span class="property">pdfCanvas</span>;</span><br><span class="line">        <span class="keyword">let</span> viewport = page.<span class="title function_">getViewport</span>(scale, rotate);</span><br><span class="line"></span><br><span class="line">        canvas.<span class="property">style</span>.<span class="property">height</span> = viewport.<span class="property">height</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        canvas.<span class="property">style</span>.<span class="property">width</span> = viewport.<span class="property">width</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        <span class="comment">// canvas画大两倍，解决绘画模糊</span></span><br><span class="line">        canvas.<span class="property">height</span> = viewport.<span class="property">height</span> * <span class="number">1.5</span>;</span><br><span class="line">        canvas.<span class="property">width</span> = viewport.<span class="property">width</span> * <span class="number">1.5</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> renderContext = &#123;</span><br><span class="line">          <span class="attr">canvasContext</span>: ctx,</span><br><span class="line">          viewport</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        page.<span class="title function_">render</span>(renderContext).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          pageNumber += <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">if</span> (pageNumber &lt;= numPages) &#123;</span><br><span class="line">            _this.<span class="title function_">getPage</span>(pdf, scale, rotate, pageNumber, numPages);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 方法二 svg（显示画质会比canvas高,弊端：ios展示不了非宋体的字）</span></span><br><span class="line">        <span class="comment">// let svgWrap = _this.$refs.pdfSvg;</span></span><br><span class="line">        <span class="comment">// let viewport = page.getViewport(scale, rotate);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// svgWrap.style.width = viewport.width + &#x27;px&#x27;;</span></span><br><span class="line">        <span class="comment">// svgWrap.style.height = viewport.height + &#x27;px&#x27;;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// page.getOperatorList().then(function(opList) &#123;</span></span><br><span class="line">        <span class="comment">//   var svgGfx = new PDF.SVGGraphics(page.commonObjs, page.objs);</span></span><br><span class="line">        <span class="comment">//   svgGfx.getSVG(opList, viewport).then(function(svg) &#123;</span></span><br><span class="line">        <span class="comment">//     svgWrap.innerHTML = &#x27;&#x27;;</span></span><br><span class="line">        <span class="comment">//     svgWrap.appendChild(svg);</span></span><br><span class="line">        <span class="comment">//   &#125;);</span></span><br><span class="line">        <span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">        _this.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;globalLoading&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pdfjs-dist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PC网页项目全屏、退出全屏</title>
      <link href="/2020/06/08/fullscreen/"/>
      <url>/2020/06/08/fullscreen/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近自己在写pc端的小项目（react + ts + mobx + react-intl ），写了一个全屏和退出全屏的功能，特此记录；</p></blockquote><p> 先上效果图：</p><p><img src="/images/fullscreen/full.png"></p><p><img src="/images/fullscreen/no.png"></p><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><h4 id="1-store部分"><a href="#1-store部分" class="headerlink" title="1.store部分"></a>1.store部分</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认非全屏</span></span><br><span class="line">@observable <span class="attr">fullScreen</span>: boolean = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全屏事件</span></span><br><span class="line">@action</span><br><span class="line">requestFullScreen = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fullScreen</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> docElm = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span><br><span class="line">    <span class="keyword">if</span> (docElm.<span class="property">requestFullscreen</span>) &#123;</span><br><span class="line">        docElm.<span class="title function_">requestFullscreen</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 退出全屏</span></span><br><span class="line">@action</span><br><span class="line">exitFullscreen = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fullScreen</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">exitFullscreen</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">exitFullscreen</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-dom部分"><a href="#2-dom部分" class="headerlink" title="2.dom部分"></a>2.dom部分</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * header 右侧功能区</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">fullScreenRender = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;  requestFullScreen, exitFullscreen &#125; = <span class="variable language_">this</span>.<span class="property">store</span>;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">            &#123;<span class="comment">/* 此处为全屏按钮 */</span>&#125;</span><br><span class="line">            &lt;span className=<span class="string">&quot;layout-header-trigger layout-header-trigger-min flex-align-center&quot;</span>&gt;</span><br><span class="line">                &#123;fullScreen ? <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">onClick</span>=<span class="string">&#123;exitFullscreen&#125;</span> &gt;</span>&#123;SVG.full2&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> : <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">onClick</span>=<span class="string">&#123;requestFullScreen&#125;</span> &gt;</span>&#123;SVG.full&#125; <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&#125;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-浏览器Esc自己关闭全屏处理"><a href="#3-浏览器Esc自己关闭全屏处理" class="headerlink" title="3.浏览器Esc自己关闭全屏处理"></a>3.浏览器Esc自己关闭全屏处理</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 全屏缩小</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="attr">isFull</span>:boolean = !!<span class="variable language_">document</span>.<span class="property">fullscreenElement</span>;</span><br><span class="line">        <span class="keyword">if</span> (!isFull) &#123;</span><br><span class="line">            <span class="comment">// 更改store中的值公共方法 changeObserver</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">store</span>.<span class="title function_">changeObserver</span>(&#123; <span class="attr">key</span>: <span class="string">&#x27;fullScreen&#x27;</span>, <span class="attr">data</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-兼容写法"><a href="#4-兼容写法" class="headerlink" title="4.兼容写法"></a>4.兼容写法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//全屏</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fullScreen</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> element = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span><br><span class="line">    <span class="keyword">if</span> (element.<span class="property">requestFullscreen</span>) &#123;</span><br><span class="line">        element.<span class="title function_">requestFullscreen</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">msRequestFullscreen</span>) &#123;</span><br><span class="line">        element.<span class="title function_">msRequestFullscreen</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">mozRequestFullScreen</span>) &#123;</span><br><span class="line">        element.<span class="title function_">mozRequestFullScreen</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">webkitRequestFullscreen</span>) &#123;</span><br><span class="line">        element.<span class="title function_">webkitRequestFullscreen</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//退出全屏 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">exitFullscreen</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">exitFullscreen</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">exitFullscreen</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">msExitFullscreen</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">msExitFullscreen</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">mozCancelFullScreen</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">mozCancelFullScreen</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">webkitExitFullscreen</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">webkitExitFullscreen</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听window是否全屏，并进行相应的操作,支持esc键退出</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> isFull=!!(<span class="variable language_">document</span>.<span class="property">webkitIsFullScreen</span> || <span class="variable language_">document</span>.<span class="property">mozFullScreen</span> || </span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">msFullscreenElement</span> || <span class="variable language_">document</span>.<span class="property">fullscreenElement</span></span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// todo something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><blockquote><p>在写的过程中发现全屏了之后按<code>Esc</code>键是默认能退出全屏模式的，且在全屏模式下是监听不到键盘的<code>onkeydown</code>事件的，浏览器自己关闭了全屏模式，导致我在<code>store</code>中用来辨识是否全屏的<code>fullScreen</code>无法更改状态；后来发现浏览器切换全屏和非全屏会触发<code>resize</code>事件，全屏时<code>document.fullscreenElement</code>就是被全屏的dom内容，非全屏时<code>document.fullscreenElement</code>的值为空；由此有了上面第三步<code>浏览器Esc自己关闭全屏处理</code>,在按<code>Esc</code>键关闭全屏模式时，手动更改一下<code>fullScreen</code>的状态。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试题：使 (a === 1 &amp;&amp; a === 2 &amp;&amp; a === 3) 为true</title>
      <link href="/2020/06/04/proxy/"/>
      <url>/2020/06/04/proxy/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一看题目就知道 <code>a</code> 不可能是个固定的值，且在一个判断为true就要变成下一个判断的值。由此推断，此处需要使用到数据劫持！</p></blockquote><h3 id="Object-defineProperty"><a href="#Object-defineProperty" class="headerlink" title="Object.defineProperty"></a>Object.defineProperty</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span>  num = <span class="number">1</span>;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">this</span>,<span class="string">&#x27;a&#x27;</span>,&#123;</span><br><span class="line"><span class="attr">get</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> num++</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a===<span class="number">1</span> &amp;&amp; a===<span class="number">2</span> &amp;&amp; a===<span class="number">3</span>)  <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h3><p>发现用proxy也能做这样的事，但是得把<code>a</code>放到对象里(对Proxy理解不是很透彻，不知道还有没有其他写法)；</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj= <span class="keyword">new</span> <span class="title class_">Proxy</span>(&#123;<span class="attr">a</span>:<span class="number">0</span>&#125;,&#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">target,key</span>)&#123;</span><br><span class="line">       data = <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target,key) + <span class="number">1</span>;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="title function_">set</span>(target, key, data)</span><br><span class="line">      <span class="keyword">return</span> data;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">target,key,value</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">a</span> === <span class="number">1</span>&amp;&amp;obj.<span class="property">a</span> === <span class="number">2</span>&amp;&amp;obj.<span class="property">a</span> === <span class="number">3</span>) <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="对象在做比较时的隐式转换"><a href="#对象在做比较时的隐式转换" class="headerlink" title="对象在做比较时的隐式转换"></a>对象在做比较时的隐式转换</h3><blockquote><p>不过这种方法不能使用<code>===</code> 只能是用 <code>==</code>判断才能为true；</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = &#123;</span><br><span class="line">  <span class="attr">num</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">valueOf</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">num</span> += <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a==<span class="number">1</span> &amp;&amp; a==<span class="number">2</span> &amp;&amp; a==<span class="number">3</span>); <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://segmentfault.com/a/1190000012921114">解析在这里</a></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0数据双向绑定学习记录</title>
      <link href="/2020/06/04/vue3/"/>
      <url>/2020/06/04/vue3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>尤雨溪说：“管你学不学的动，老子就要更新！” 玩笑开完了，代码撸起来~   :smile: </p></blockquote><p>下面是使用自己实现的双向绑定js在页面的效果：</p><p> <img src="/images/vue/1.png" alt="图片"><br> <img src="/images/vue/2.png" alt="图片"></p><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt; &lt;/div&gt;</span><br><span class="line">  &lt;button id=&quot;btn&quot;&gt;点击&lt;/button&gt;</span><br><span class="line">  &lt;script src=&quot;./vue3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    const root = document.getElementById(&#x27;app&#x27;);</span><br><span class="line">    const btn = document.getElementById(&#x27;btn&#x27;);</span><br><span class="line"></span><br><span class="line">    // 响应式</span><br><span class="line">    const data = &#123;</span><br><span class="line">      name: &quot;阿强&quot;,</span><br><span class="line">      age: 3,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 将数据proxy</span><br><span class="line">    const obj = reactive(data);</span><br><span class="line"></span><br><span class="line">    // computed属性</span><br><span class="line">    let age = computed(() =&gt; obj.age - 2);</span><br><span class="line"></span><br><span class="line">    // 数据变化执行的fn</span><br><span class="line">    let changed = () =&gt; &#123;</span><br><span class="line">      // 数据变化 触发set，执行这个函数</span><br><span class="line">      console.log(&#x27;数据变了&#x27;, obj.age)</span><br><span class="line">      // 我们没有compile，不能支持vue的语法</span><br><span class="line">      // obj.name 收集依赖</span><br><span class="line">      root.innerHTML = `&lt;h1&gt;$&#123;obj.name&#125;今年$&#123;obj.age&#125;岁了，喜欢隔壁$&#123;age.value&#125;岁的小花&lt;/h1&gt;`</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    effect(changed);</span><br><span class="line"></span><br><span class="line">    btn.addEventListener(&#x27;click&#x27;, () =&gt; &#123;</span><br><span class="line">      // 触发set函数，执行effect</span><br><span class="line">      obj.age++;</span><br><span class="line">    &#125;, false)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="vue3-js"><a href="#vue3-js" class="headerlink" title="vue3.js"></a>vue3.js</h3> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// key:原始数据 =&gt; data:响应式数据</span></span><br><span class="line"><span class="keyword">let</span> toProxy = <span class="keyword">new</span> <span class="title class_">WeakMap</span>();</span><br><span class="line"><span class="comment">// key:响应式数据 =&gt; data:原始数据</span></span><br><span class="line"><span class="keyword">let</span> toRow = <span class="keyword">new</span> <span class="title class_">WeakMap</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储effect的地方 栈</span></span><br><span class="line"><span class="keyword">let</span> effectStack = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储依赖的地方</span></span><br><span class="line"><span class="keyword">let</span> targetMap = <span class="keyword">new</span> <span class="title class_">WeakMap</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 收集依赖</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">track</span>(<span class="params">target, key</span>) &#123;</span><br><span class="line">    <span class="comment">// 栈后进先出，最后一个就是最新的一个数据</span></span><br><span class="line">    <span class="keyword">const</span> effect = effectStack[effectStack.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (!effect) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">let</span> depMap = targetMap.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="keyword">if</span> (depMap === <span class="literal">undefined</span>) &#123;</span><br><span class="line">        depMap = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        targetMap.<span class="title function_">set</span>(target, depMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> dep = depMap.<span class="title function_">get</span>(key);</span><br><span class="line">    <span class="keyword">if</span> (dep === <span class="literal">undefined</span>) &#123;</span><br><span class="line">        dep = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">        depMap.<span class="title function_">set</span>(key, dep);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!dep.<span class="title function_">has</span>(effect)) &#123;</span><br><span class="line">        dep.<span class="title function_">add</span>(effect);</span><br><span class="line">        effect.<span class="property">deps</span>.<span class="title function_">push</span>(dep);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 触发更新</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">trigger</span>(<span class="params">target, key, info</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.寻找依赖</span></span><br><span class="line">    <span class="keyword">const</span> depMap = targetMap.<span class="title function_">get</span>(target);</span><br><span class="line">    <span class="comment">// 没有依赖</span></span><br><span class="line">    <span class="keyword">if</span> (depMap === <span class="literal">undefined</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> effects = <span class="keyword">new</span> <span class="title class_">Set</span>(); <span class="comment">// 集合，自动去重</span></span><br><span class="line">    <span class="keyword">const</span> computedRunners = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (key) &#123;</span><br><span class="line">        <span class="keyword">let</span> deps = depMap.<span class="title function_">get</span>(key);</span><br><span class="line">        <span class="comment">// deps里面全部是effect</span></span><br><span class="line">        deps.<span class="title function_">forEach</span>(<span class="function"><span class="params">effect</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (effect.<span class="property">computed</span>) &#123;</span><br><span class="line">                computedRunners.<span class="title function_">add</span>(effect);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                effects.<span class="title function_">add</span>(effect);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行更新</span></span><br><span class="line">    effects.<span class="title function_">forEach</span>(<span class="function"><span class="params">effect</span> =&gt;</span> <span class="title function_">effect</span>());</span><br><span class="line">    computedRunners.<span class="title function_">forEach</span>(<span class="function"><span class="params">computed</span> =&gt;</span> <span class="title function_">computed</span>());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 往effectStack push effect函数，执行fn 数据更新之后需要执行的fn</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">effect</span>(<span class="params">fn, options = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// @todo 处理options </span></span><br><span class="line">    <span class="keyword">let</span> e = <span class="title function_">createReactiveEffect</span>(fn, options);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!options.<span class="property">lazy</span>) &#123;</span><br><span class="line">        <span class="title function_">e</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造effect</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createReactiveEffect</span>(<span class="params">fn, options</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> effect = <span class="keyword">function</span> <span class="title function_">effect</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">run</span>(effect, fn, args);</span><br><span class="line">    &#125;</span><br><span class="line">    effect.<span class="property">deps</span> = [];</span><br><span class="line">    effect.<span class="property">computed</span> = options.<span class="property">computed</span>;</span><br><span class="line">    effect.<span class="property">lazy</span> = options.<span class="property">lazy</span>;</span><br><span class="line">    <span class="keyword">return</span> effect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">run</span>(<span class="params">effect, fn, args</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (effectStack.<span class="title function_">indexOf</span>(effect) === -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            effectStack.<span class="title function_">push</span>(effect);</span><br><span class="line">            <span class="comment">// 执行的时候，是要获取的</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">fn</span>(...args);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            effectStack.<span class="title function_">pop</span>() <span class="comment">// effect用完就要推出去</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算属性</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">computed</span>(<span class="params">fn</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> runner = <span class="title function_">effect</span>(fn, &#123;</span><br><span class="line">        <span class="attr">computed</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">lazy</span>: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">effect</span>: runner,</span><br><span class="line">        <span class="keyword">get</span> <span class="title function_">value</span>() &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">runner</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">reactive</span>(<span class="params">target</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询缓存中数据是否已经被proxy了</span></span><br><span class="line">    <span class="keyword">let</span> observed = toProxy.<span class="title function_">get</span>(target);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (observed) &#123;</span><br><span class="line">        <span class="keyword">return</span> observed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (toRow.<span class="title function_">get</span>(target)) &#123;</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据没有proxy时，设置缓存</span></span><br><span class="line">    observed = <span class="keyword">new</span> <span class="title class_">Proxy</span>(target, baseHandler);</span><br><span class="line">    toProxy.<span class="title function_">set</span>(target, observed);</span><br><span class="line">    toRow.<span class="title function_">set</span>(observed, target);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> observed;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应代理</span></span><br><span class="line"><span class="keyword">const</span> baseHandler = &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">target, key</span>) &#123;</span><br><span class="line">        <span class="comment">// target就是obj，key就是name  以下写法等同于 target[key]</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, key);</span><br><span class="line">        <span class="comment">// 收集依赖 track </span></span><br><span class="line">        <span class="title function_">track</span>(target, key);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">typeof</span> res == <span class="string">&#x27;object&#x27;</span> ? <span class="title function_">reactive</span>(res) : res;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">target, key, val</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> info = &#123;</span><br><span class="line">            <span class="attr">oldValue</span>: target[key],</span><br><span class="line">            <span class="attr">newValue</span>: val</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// obj.name = xx 这里 我们是需要通知更新的</span></span><br><span class="line">        <span class="keyword">const</span> res = <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target, key, val)</span><br><span class="line">        <span class="comment">// 触发更新</span></span><br><span class="line">        <span class="title function_">trigger</span>(target, key, info)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue3.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue项目用HbuilderX 打包app</title>
      <link href="/2020/06/04/vue/"/>
      <url>/2020/06/04/vue/</url>
      
        <content type="html"><![CDATA[<p>最近公司要把之前做的H5项目打包成app,刚好研究了一下。其实用hbuilder打包还是很简单的，就简单的几步；废话不多说，开始吧~</p><h3 id="一-vue项目"><a href="#一-vue项目" class="headerlink" title="一. vue项目"></a>一. vue项目</h3><blockquote><p>项目运行<code>npm run build</code>打出生产包，这个包先拷贝到剪切板以备后面使用~</p></blockquote><p> <img src="/images/vue_7.png" alt="打包"></p><h3 id="二-Hbuild-X"><a href="#二-Hbuild-X" class="headerlink" title="二. Hbuild X"></a>二. Hbuild X</h3><h4 id="1-新建项目；"><a href="#1-新建项目；" class="headerlink" title="1.新建项目；"></a>1.新建项目；</h4><p> <img src="/images/vue_1.png" alt="新建"></p><h4 id="2-新建好了把里面一些没有的文件夹删除，把manifest-json留下；"><a href="#2-新建好了把里面一些没有的文件夹删除，把manifest-json留下；" class="headerlink" title="2.新建好了把里面一些没有的文件夹删除，把manifest.json留下；"></a>2.新建好了把里面一些没有的文件夹删除，把<code>manifest.json</code>留下；</h4><p> <img src="/images/vue_6.png" alt="删除用不上的文件"></p><h4 id="3-把vue项目打好的包放进去；"><a href="#3-把vue项目打好的包放进去；" class="headerlink" title="3.把vue项目打好的包放进去；"></a>3.把vue项目打好的包放进去；</h4><p> <img src="/images/vue_8.png" alt="图片"></p><h4 id="4-配置manifest-json文件；"><a href="#4-配置manifest-json文件；" class="headerlink" title="4.配置manifest.json文件；"></a>4.配置<code>manifest.json</code>文件；</h4><p> <img src="/images/vue_5.png" alt="图片"><br> <img src="/images/vue_4.png" alt="图片"><br> <img src="/images/vue_2.png" alt="图片"></p><h4 id="5-点击发行-gt-原生App-云打包-gt-；"><a href="#5-点击发行-gt-原生App-云打包-gt-；" class="headerlink" title="5.点击发行 -&gt; 原生App-云打包 -&gt;；"></a>5.点击<code>发行 -&gt; 原生App-云打包 -&gt;</code>；</h4><p> <img src="/images/vue_3.png" alt="发布"></p><blockquote><p>有一个要注意的点，Hbuilder + vue 打出来的包，路由会失效，在页面点击返回会直接退出应用，这个需要在<code>index.html</code>的head中插入下面这行代码：</p></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;plusready&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">var</span> webview = plus.<span class="property">webview</span>.<span class="title function_">currentWebview</span>();</span><br><span class="line">plus.<span class="property">key</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;backbutton&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">webview.<span class="title function_">canBack</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (e.<span class="property">canBack</span>) &#123;</span><br><span class="line">webview.<span class="title function_">back</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//webview.close(); //hide,quit</span></span><br><span class="line"><span class="comment">//plus.runtime.quit();</span></span><br><span class="line"><span class="comment">//首页返回键处理</span></span><br><span class="line"><span class="comment">//处理逻辑：1秒内，连续两次按返回键，则退出应用；</span></span><br><span class="line"><span class="keyword">var</span> first = <span class="literal">null</span>;</span><br><span class="line">plus.<span class="property">key</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;backbutton&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//首次按键，提示‘再按一次退出应用’</span></span><br><span class="line"><span class="keyword">if</span> (!first) &#123;</span><br><span class="line">first = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;再按一次退出应用&#x27;</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">first = <span class="literal">null</span>;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() - first &lt; <span class="number">1500</span>) &#123;</span><br><span class="line">plus.<span class="property">runtime</span>.<span class="title function_">quit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H5打包App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mobx学习记录</title>
      <link href="/2019/11/26/Mobx/"/>
      <url>/2019/11/26/Mobx/</url>
      
        <content type="html"><![CDATA[<h4 id="Mobx工作记录"><a href="#Mobx工作记录" class="headerlink" title="Mobx工作记录"></a>Mobx工作记录</h4><p>之前由于项目比较急，需要在短时间内学习并上手mobx，虽然已经用react+mobx开发了好几个项目，一直都没时间总结一下。特此梳理一下，让知识沉淀沉淀~<br><a href="https://github.com/mobxjs/mobx">Mobx官方文档</a><br><a href="https://cn.mobx.js.org/">Mobx官方中文文档</a></p><h4 id="Mobx的核心概念"><a href="#Mobx的核心概念" class="headerlink" title="Mobx的核心概念"></a>Mobx的核心概念</h4><p>Mobx的核心原理是通过action触发state的变化，进而触发state的衍生对象（computed value &amp; Reactions）。</p><p><img src="/images/mobx_flow.png"></p><h5 id="1-State-状态"><a href="#1-State-状态" class="headerlink" title="1.State(状态)"></a>1.State(状态)</h5><p> 其实就是我们需要用Mobx管理起来的数据。<br> 在Mobx中，State就对应业务的最原始状态，通过observable方法，可以使这些状态变得可观察。<br>值得注意的一点是，当某一数据被observable包装后，他返回的是被observable包装后的类型。</p><h5 id="2-Action-动作"><a href="#2-Action-动作" class="headerlink" title="2.Action(动作)"></a>2.Action(动作)</h5><p>动作 是任一一段可以改变状态的代码。用户事件、后端数据推送、预定事件、等等。 动作类似于用户在excel单元格中输入一个新的值。 我们的异步请求都可以在这里做。但是这里要注意一点，异步的函数里面对state的更改是不能检测到的。所以异步的回调也需要用action（）包一下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">demoMobx</span> &#123;</span><br><span class="line"></span><br><span class="line">    @action</span><br><span class="line">    getServerList = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">send</span>(api_url, <span class="title function_">action</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// do something......</span></span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里还有一个 <code>flow</code>需要讲一下：</p><blockquote><ul><li>用法: flow(function* (args) { }),<br>flow() 接收 <code>generator</code> 函数作为它唯一的输入,当处理异步动作时，回调中执行的代码不会被 action 包装。这意味着你修改的 observable state 无法通过 enforceActions 检查。保留动作语义的简单方法是使用 flow 来包装异步函数。这将确保所有回调都会被 action() 包装。</li></ul></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; configure &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不允许在动作外部修改状态</span></span><br><span class="line"><span class="title function_">configure</span>(&#123; <span class="attr">enforceActions</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Store</span> &#123;</span><br><span class="line">    @observable githubProjects = [];</span><br><span class="line">    @observable state = <span class="string">&quot;pending&quot;</span>; <span class="comment">// &quot;pending&quot; / &quot;done&quot; / &quot;error&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    fetchProjects = <span class="title function_">flow</span>(<span class="keyword">function</span>* <span class="title function_">fetchProjects</span>(<span class="params"></span>) &#123; <span class="comment">// &lt;- 注意*号，这是生成器函数！</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">githubProjects</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">state</span> = <span class="string">&quot;pending&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> projects = <span class="keyword">yield</span> <span class="title function_">fetchGithubProjectsSomehow</span>(); <span class="comment">// 用 yield 代替 await</span></span><br><span class="line">            <span class="keyword">const</span> filteredProjects = <span class="title function_">somePreprocessing</span>(projects);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 异步代码自动会被 `action` 包装</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">state</span> = <span class="string">&quot;done&quot;</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">githubProjects</span> = filteredProjects;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">state</span> = <span class="string">&quot;error&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-Derivations-衍生"><a href="#3-Derivations-衍生" class="headerlink" title="3. Derivations(衍生)"></a>3. Derivations(衍生)</h5><p>这一部分的概念一直不是太理解，工作之中也不能直观的感受到它，一直迷迷糊糊。但是又感觉不影响正常开发，这里只能先留一个TODO，等啥时候脑子开窍了，再来补上吧~  </p><p>:smile:</p><h4 id="在React项目中使用Mobx"><a href="#在React项目中使用Mobx" class="headerlink" title="在React项目中使用Mobx"></a>在React项目中使用Mobx</h4><h5 id="1-将store注入到全局"><a href="#1-将store注入到全局" class="headerlink" title="1.将store注入到全局"></a>1.将store注入到全局</h5><p> <code>mobx-react</code> 提供了 <code>Provider</code> </p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./app/app&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> stores <span class="keyword">from</span> <span class="string">&#x27;../../modules/store&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">baseReact</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">Provider</span> &#123;<span class="attr">...stores</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">App</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(<span class="title function_">baseReact</span>(), <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;skin&#x27;</span>));</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-mobx在store和组件里的应用"><a href="#2-mobx在store和组件里的应用" class="headerlink" title="2.mobx在store和组件里的应用;"></a>2.mobx在store和组件里的应用;</h5><p><code>mobx-react</code>提供了<code>reject</code> 和 <code>observer</code>两个工具去把store和组件关联起来。<br> <code>reject</code> 是将该组件的store注入进来；<br> <code>observer</code>可以用作包裹 React 组件的高阶组件， 在组件的 render 函数中的任何已使用的 observable 发生变化时，组件都会自动重新渲染。 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在store.js里面引入mobx, </span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BaseStore</span> &#125; <span class="keyword">from</span> <span class="string">&quot;../../../../../component.index&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; observable, action&#125; <span class="keyword">from</span> <span class="string">&quot;mobx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DesignRightStore</span> <span class="keyword">extends</span> <span class="title class_ inherited__">BaseStore</span> &#123;</span><br><span class="line"></span><br><span class="line">    @observable <span class="attr">rightComponentTabIndex</span>: number = <span class="number">0</span>; </span><br><span class="line">    @observable <span class="attr">showBackgroundColorPicker</span>: boolean = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    @action</span><br><span class="line">    setRightComponentTabIndex = <span class="function">(<span class="params">index: number</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">rightComponentTabIndex</span> = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">DesignRightStore</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// react 组件需要用到 mobx-react</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; withRouter &#125; <span class="keyword">from</span> <span class="string">&quot;react-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; inject, observer&#125; <span class="keyword">from</span> <span class="string">&quot;mobx-react&quot;</span>;</span><br><span class="line"></span><br><span class="line">@withRouter</span><br><span class="line">@<span class="title function_">inject</span>(<span class="string">&#x27;DesignRightStore&#x27;</span>) <span class="comment">// 将DesignRightStore注入当前组件</span></span><br><span class="line">@observer   </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DesignElementPanel</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">props</span>)&#123;</span><br><span class="line">      <span class="variable language_">super</span>(props);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="keyword">return</span>(</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;/*组件内可以通过 this.props.DesignRightStore 拿到store里面的值和方法*/&#125;</span></span><br><span class="line"><span class="language-xml">            &#123;this.props.DesignRightStore.rightComponentTabIndex&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DesignElementPanel</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mobx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown常用语法测试</title>
      <link href="/2019/11/22/md/"/>
      <url>/2019/11/22/md/</url>
      
        <content type="html"><![CDATA[<h3 id="测试文字"><a href="#测试文字" class="headerlink" title="测试文字"></a>测试文字</h3><p>这是一篇测试的文章，随便写一些什么东西吧。大学时，时间是一学期一学期来计算的；毕业后，时间就变成了一年的一年的计算，感觉一晃就是一年，一晃就是好几年……</p><blockquote><p>这是一篇测试的文章，随便写一些什么东西吧。大学时，时间是一学期一学期来计算的；毕业后，时间就变成了一年的一年的计算，感觉一晃就是一年，一晃就是好几年……</p></blockquote><hr><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><p>这里来放一点代码吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;测试HTML标签展示&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello world!&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><hr><hr><hr><hr><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度](http://baidu.com)</span><br></pre></td></tr></table></figure><p><a href="http://baidu.com/">百度</a></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ul><li>这是一篇测试的文章，随便写一些什么东西吧。大学时，时间是一学期一学期来计算的；毕业后，时间就变成了一年的一年的计算，感觉一晃就是一年，一晃就是好几年……</li></ul><ul><li>这是一篇测试的文章，随便写一些什么东西吧。大学时，时间是一学期一学期来计算的；毕业后，时间就变成了一年的一年的计算，感觉一晃就是一年，一晃就是好几年……</li></ul><ol><li><p>这是一篇测试的文章，随便写一些什么东西吧。大学时，时间是一学期一学期来计算的；毕业后，时间就变成了一年的一年的计算，感觉一晃就是一年，一晃就是好几年……</p></li><li><p>这是一篇测试的文章，随便写一些什么东西吧。大学时，时间是一学期一学期来计算的；毕业后，时间就变成了一年的一年的计算，感觉一晃就是一年，一晃就是好几年……</p></li><li><p>这是一篇测试的文章，随便写一些什么东西吧。大学时，时间是一学期一学期来计算的；毕业后，时间就变成了一年的一年的计算，感觉一晃就是一年，一晃就是好几年……</p></li></ol><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br></pre></td></tr></table></figure><table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片1](https://unsplash.it/1920/1040?random&amp;t=8&amp;gravity=north)</span><br></pre></td></tr></table></figure><p><img src="https://unsplash.it/1920/1040?random&t=8&gravity=north" alt="图片1"></p><h3 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h3><p>地址 <a href="https://emojipedia.org/">https://emojipedia.org/</a> ❤️</p><h3 id="more"><a href="#more" class="headerlink" title="more"></a>more</h3><p>常常在想，人生究竟会有怎么样的未来在等着我？是困难重重、还是风轻云淡、是平静祥和、还是激烈炽热？</p>]]></content>
      
      
      <categories>
          
          <category> md </category>
          
      </categories>
      
      
        <tags>
            
            <tag> md语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3新增特性</title>
      <link href="/2017/09/21/css3/"/>
      <url>/2017/09/21/css3/</url>
      
        <content type="html"><![CDATA[<h3 id="一-选择器"><a href="#一-选择器" class="headerlink" title="一.选择器"></a>一.选择器</h3><h4 id="1-关系选择器"><a href="#1-关系选择器" class="headerlink" title="1. 关系选择器"></a>1. 关系选择器</h4><blockquote><p>后代选择器 ul li 选择所有的后代元素<br><br>子代选择器 ul &gt; li 选择ul的儿子<br><br>紧邻选择器 .box + li 选择.box后面的一个li元素<br><br>兄弟选择器 .box ~ li 选择.box后面所有的li元素<br></p></blockquote><h4 id="2-属性选择器-：通过属性来选择对应的元素"><a href="#2-属性选择器-：通过属性来选择对应的元素" class="headerlink" title="2. 属性选择器 ：通过属性来选择对应的元素"></a>2. 属性选择器 ：通过属性来选择对应的元素</h4><blockquote><p>（1）E[属性名] ： 选择所有的具备这个属性的E元素<br><br>（2）E[属性名=值] ：选择所有的具备这个 ‘属性 = 对应值’ 的E元素<br><br>（3）E[属性名~=值]：选择所有的包含这个 ‘属性 = 对应值’ 的E元素</p></blockquote><p><code>css3新增的(不是很常用)：</code></p><blockquote><p>（4）E[属性名^=值]：从头去匹配这个 ‘属性 = 对应值’ 的E元素<br><br>（5）E[属性名$=值]：从尾去匹配这个 ‘属性 = 对应值’ 的E元素<br><br>（6）E[属性名*=值]： 从任意位置去匹配这个‘属性 = 对应值’的E元素</p></blockquote><h4 id="3-伪类选择器"><a href="#3-伪类选择器" class="headerlink" title="3.伪类选择器"></a>3.伪类选择器</h4><blockquote><p>（1）E：first-child 找到第一个子元素为E的元素 （css2）<br><br>（2）E：last-child 找到最后一个子元素为E的元素 （css3）<br><br>（3）E：nth-child（N）找到第N个子元素为E的元素 （css3）<br></p></blockquote><h4 id="4-伪元素-before-after"><a href="#4-伪元素-before-after" class="headerlink" title="4. 伪元素 before after"></a>4. 伪元素 before after</h4><blockquote><p>作用：渲染一个虚拟的标签插入到当前元素的内部的前面或者后面,单标签是没有伪元素的。</p></blockquote><blockquote><p>（1）伪元素默认是行内元素，可以通过display进行转化，在实际工作中，多用来模拟一些小的标签去装饰；<br><br>  （2）因为伪元素是不存在的，所以不能直接用JS去获取（可以利用类去覆盖之前的样式）；<br><br>  （3）清除浮动的底层原理：就是让一个伪元素（因为伪元素不占dom内存）去清除浮动，从而节约了dom内存，也更加的合理；<br><br>  （4）content一定不能省略，即使里面没有内容，也要写一个空字符串；<br><br>  （5）伪元素推荐用双冒号，但是IE6,7,8不支持双冒号的写法，所以为了兼容考虑，使用单冒号；<br><br>  （6）当伪类需要配合iconfont去使用的话需要打开iconfont.css 拿到content里面对应的值；<br><br>  （7）当伪元素需要hover的效果的时候不能直接hover 需要借助于父级 写法：父级：hover：伪元素；<br></p></blockquote><h4 id="5-其他选择器"><a href="#5-其他选择器" class="headerlink" title="5. 其他选择器"></a>5. 其他选择器</h4><blockquote><p>（1）input:focus{ } =&gt; 选择获取焦点的表单<br><br>（4）Input:checked =&gt; 选择被选中的checkbox表单<br><br>（2）input:enabled{ } =&gt; 选择可操控的表单元素<br><br>（3）input:disabled { } =&gt; 选择不可操控的表单<br></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">/* 选择获取焦点的那个表单 */</span><br><span class="line">input:focus&#123;</span><br><span class="line">border-color:pink;</span><br><span class="line">outline: none;</span><br><span class="line">height: 40px;</span><br><span class="line">&#125;</span><br><span class="line">/* 选择被选中的 checkbox */</span><br><span class="line">input:checked &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line">/* 选择可操控的那个表单元素 */</span><br><span class="line">input:enabled &#123;</span><br><span class="line">background-color: pink;</span><br><span class="line">&#125;</span><br><span class="line">/* 选择不可操控的表单元素 */</span><br><span class="line">input:disabled&#123;</span><br><span class="line">background-color: red;</span><br><span class="line">&#125;</span><br><span class="line">/* 选择通过锚点跳转的元素 */</span><br><span class="line">#test:target &#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">用户名：&lt;input type=&quot;text&quot; disabled &gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">密码： &lt;input type=&quot;password&quot;&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">身份证号： &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">爱好：足球：&lt;input type=&quot;checkbox&quot; name=&quot;&quot; id=&quot;&quot;&gt;</span><br><span class="line">篮球：&lt;input type=&quot;checkbox&quot; name=&quot;&quot; id=&quot;&quot;&gt;  </span><br><span class="line">看动漫：&lt;input type=&quot;checkbox&quot; name=&quot;&quot; id=&quot;&quot;&gt;  </span><br><span class="line">&lt;a href=&quot;#test&quot;&gt;锚点跳转&lt;/a&gt;</span><br><span class="line">&lt;p&gt;我是p元素&lt;/p&gt;</span><br><span class="line">&lt;p id=&quot;test&quot;&gt;我是拍元素，我才是货真价实的那个锚点&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是p元素&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是p元素&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是p元素&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="二-颜色"><a href="#二-颜色" class="headerlink" title="二. 颜色"></a>二. 颜色</h3><blockquote><p>新增了RGBA、HSLA模式，其中的A 表示透明度通道，即可以设置颜色值的透明度，相较opacity，它们不具有继承性，即不会影响子元素的透明度。</p></blockquote><h5 id="1-opacity"><a href="#1-opacity" class="headerlink" title="1. opacity"></a>1. opacity</h5><blockquote><p>如果给父盒子设置opacity，所有的子盒子都会有这个效果，opacity存在兼容性问题，如果是在IE6/7/8下，应该使用filter进行设置</p></blockquote><h5 id="2-rgba"><a href="#2-rgba" class="headerlink" title="2. rgba"></a>2. rgba</h5><blockquote><p>R:Red、G:Green、B:Blue、A:Alpha，R、G、B 取值范围0~255，A的取值范围是0-1。<br>RGBA可以用于所有使用颜色的地方<br>rgb三个值越小，颜色越黑<br>如果是纯色的背景，可以是使用rgba<br>如果是图片，可以脱离父子关系，让后用定位的方式来做。</p></blockquote><p><img src="/images/css/3.png"></p><h5 id="3-hsla"><a href="#3-hsla" class="headerlink" title="3. hsla"></a>3. hsla</h5><blockquote><p>H 色调 取值范围0<del>360，0/360表示红色、120表示绿色、240表示蓝色<br>S 饱和度取值范围0%</del>100%<br>L 亮度 取值范围0%<del>100%<br>A 透明度取值范围0</del>1</p></blockquote><p><img src="/images/css/4.png"></p><h3 id="三-盒子自减-box-sizing"><a href="#三-盒子自减-box-sizing" class="headerlink" title="三. 盒子自减(box-sizing )"></a>三. 盒子自减(box-sizing )</h3><blockquote><p>CSS3中可以通过box-sizing 来指定盒模型，之前我们的盒子的实际宽度是 :实际宽度 = width + padding + border，而内减属性会自动帮我们减掉 padding 和 border值 ，所以用了内减的盒子实际宽度就等于width。</p></blockquote><p>可以分成两种情况：</p><blockquote><p>1、box-sizing: border-box 计算方式为content = width – border - padding <br><br>2、box-sizing: content-box 计算方式为content = width</p></blockquote><h3 id="四-阴影"><a href="#四-阴影" class="headerlink" title="四.阴影"></a>四.阴影</h3><h5 id="4-1-文字阴影-text-shadow"><a href="#4-1-文字阴影-text-shadow" class="headerlink" title="4.1 文字阴影(text-shadow)"></a>4.1 文字阴影(text-shadow)</h5><blockquote><p>语法： text-shadow：水平偏移 垂直偏移 羽化大小 颜色</p></blockquote><h5 id="4-2-边框阴影-box-shadow"><a href="#4-2-边框阴影-box-shadow" class="headerlink" title="4.2 边框阴影(box-shadow)"></a>4.2 边框阴影(box-shadow)</h5><blockquote><p>语法：box-shadow：值<br>值说明：<br>（1）第一个值 ：Npx  阴影向水平方向偏移N个像素  正数往右 负数往左<br>（2）第二个值 ：Npx  阴影向垂直方向偏移N个像素  正数往下 负数往上<br>（3）第三个值 ：羽化大小 （模糊的大小）<br>（4）第四个值 ：阴影尺寸<br>（5）第五个值 ：颜色 默认值是黑色<br>（6）第六个参数： 内外阴影 默认是外阴影 内阴影是inset<br>（7）阴影可以写多个，中间用逗号隔开<br>（8）阴影可以简写，但是需要注意有一些值需要补0</p></blockquote><p><img src="/images/css/7.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;阴影&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            display: flex;</span><br><span class="line">            flex-wrap: wrap;</span><br><span class="line">        &#125;</span><br><span class="line">div &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">            margin:20px;</span><br><span class="line">background-color: #84af9b;</span><br><span class="line">            display: flex;</span><br><span class="line">            color:#fff;</span><br><span class="line">            justify-content: center;</span><br><span class="line">            align-items: center;</span><br><span class="line">&#125;</span><br><span class="line">/* 第一个值 ：Npx  阴影向水平方向偏移N个像素  正数往右 负数往左 */</span><br><span class="line">div:nth-child(1)&#123;</span><br><span class="line">box-shadow: -10px 0 0 0 #c9c8a9;</span><br><span class="line">&#125;</span><br><span class="line">/* 第二个值 ：Npx  阴影向垂直方向偏移N个像素  正数往下 负数往上 */</span><br><span class="line">div:nth-child(2)&#123;</span><br><span class="line">box-shadow: 0 10px 0 0 #c9c8a9 ;</span><br><span class="line">&#125;</span><br><span class="line">div:nth-child(3)&#123;</span><br><span class="line">box-shadow: -10px -10px 0 0 #c9c8a9;</span><br><span class="line">&#125;</span><br><span class="line">/* 第三个值控制的模糊的程度 （羽化的大小）默认值0 */</span><br><span class="line">div:nth-child(4)&#123;</span><br><span class="line">box-shadow: 10px 10px 10px  0 #c9c8a9;</span><br><span class="line">&#125;</span><br><span class="line">/* 第四个值控制的 阴影的大小 默认值0*/</span><br><span class="line">div:nth-child(5)&#123;</span><br><span class="line">box-shadow: 10px 10px 0px 10px #c9c8a9;</span><br><span class="line">&#125;</span><br><span class="line">/* 第五个值控制的 颜色 默认值黑色 可以使用rgba去控制透明度*/</span><br><span class="line">div:nth-child(6)&#123;</span><br><span class="line">box-shadow: 10px 10px 10px 10px #c9c8a9 ;</span><br><span class="line">&#125;</span><br><span class="line">/* 第六个值控制的 内外阴影 inset是内阴影 */</span><br><span class="line">div:nth-child(7)&#123;</span><br><span class="line">box-shadow: 10px 10px 10px 10px #c9c8a9 inset;</span><br><span class="line">&#125;</span><br><span class="line">div:nth-child(8) &#123;</span><br><span class="line">transition:all 1s;</span><br><span class="line">&#125;</span><br><span class="line">div:nth-child(8):hover&#123;</span><br><span class="line">box-shadow: 0 0 10px 10px #facdae,0 0 15px 5px #fc9a9d,0 0 15px 5px #ff426a;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;1&lt;/div&gt;</span><br><span class="line">&lt;div&gt;2&lt;/div&gt;</span><br><span class="line">&lt;div&gt;3&lt;/div&gt;</span><br><span class="line">&lt;div&gt;4&lt;/div&gt;</span><br><span class="line">&lt;div&gt;5&lt;/div&gt;</span><br><span class="line">&lt;div&gt;6&lt;/div&gt;</span><br><span class="line">&lt;div&gt;7&lt;/div&gt;</span><br><span class="line">&lt;div&gt;8&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="五-边框图片-了解"><a href="#五-边框图片-了解" class="headerlink" title="五. 边框图片 (了解)"></a>五. 边框图片 (了解)</h3><pre><code>语法：border-image：值</code></pre><blockquote><p>遵从的是九宫格式切图，上下左右分别来一刀<br><br>值说明：<br><br>（1）border-image-source:url(‘border.png’); 图片路径<br><br>（2）border-image-slice:26;图片切割，不要带单位，遵从九宫格式切图法（上下左右各来一刀）<br><br>（3）border-image-repeat:round或者stretch或者repeat; round没有瑕疵，stretch默认拉伸，repeat 平铺（可能有瑕疵）<br><br>（4）简写：border-image:url(‘border.png’) 26 round;</p></blockquote><h3 id="六-背景"><a href="#六-背景" class="headerlink" title="六. 背景"></a>六. 背景</h3><h5 id="6-1-控制背景图片的大小-（重要）"><a href="#6-1-控制背景图片的大小-（重要）" class="headerlink" title="6.1 控制背景图片的大小 （重要）"></a>6.1 控制背景图片的大小 （重要）</h5><pre><code>语法：background-size：值</code></pre><blockquote><p>（1）当只有一个值的情况下，宽度实现拉伸，并且高度会保持等比例，可以支持px，也可以支持百分比，百分比参照的是这个盒子本身的宽高<br><br>（2）当有两个值的情况下，宽度和高度会分别拉伸到对应的值，可能会变形，可以支持px，也可以支持百分比，百分比参照的是这个盒子本身的宽高<br><br>（3）contain 当图片的宽度或者是高度在缩放的时候有一个“碰到”了盒子的边缘，则停止变化，（宽度或高度满足一个即可）<br><br>（4）在contain的基础上保证不留白，这就是cover的效果（宽度和高度都需要满足）<br></p></blockquote><h5 id="6-2-多重背景"><a href="#6-2-多重背景" class="headerlink" title="6.2 多重背景"></a>6.2 多重背景</h5><blockquote><p>说明：背景图片之间用逗号隔开，可以写多组，最先渲染的图片有可能会遮住后面渲染的图片</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>:  <span class="built_in">url</span>(<span class="string">image/1.jpg</span>) <span class="number">0</span> <span class="number">0</span> no-repeat,</span><br><span class="line">         <span class="built_in">url</span>(<span class="string">image/2.jpg</span>) <span class="number">220px</span> <span class="number">0</span> no-repeat,</span><br><span class="line">             <span class="built_in">url</span>(<span class="string">image/3.jpg</span>) <span class="number">430px</span> <span class="number">0</span>  no-repeat;</span><br></pre></td></tr></table></figure><h5 id="6-3-背景图片的基准点-了解"><a href="#6-3-背景图片的基准点-了解" class="headerlink" title="6.3 背景图片的基准点(了解)"></a>6.3 背景图片的基准点(了解)</h5><p>语法：background-origin：值</p><blockquote><p>值说明：<br><br>（1）border-box  ：忽略边框 直接从边框的起始 0 ，0点平铺<br><br>（2）padding-box： 默认值，忽略padding 直接从padding的起始 0 ，0点平铺<br><br>（3）content-box ：从内容部分开始平铺 跟padding有关系<br></p></blockquote><h3 id="七-圆角-border-radius"><a href="#七-圆角-border-radius" class="headerlink" title="七. 圆角(border-radius)"></a>七. 圆角(border-radius)</h3><ol><li>border-radius的值指的是边框的圆角半径。<br></li><li>border-radius与margin类似，可以分别指定4个圆角的大小（左上、右上、右下、左下）.</li><li>border-radius的圆角也可以是一个椭圆。<br></li><li>可以分别指定4个圆角是椭圆。<br></li><li>border-radius的值可以是px，也可以是 百分比。<br></li></ol><h3 id="八-渐变"><a href="#八-渐变" class="headerlink" title="八.  渐变"></a>八.  渐变</h3><h5 id="8-1-线性渐变-linear-gradient"><a href="#8-1-线性渐变-linear-gradient" class="headerlink" title="8.1 线性渐变(linear-gradient)"></a>8.1 线性渐变(linear-gradient)</h5><blockquote><p>Background-image:linear-gradient(渐变线角度值 | to 方位名词 , 颜色一 止色位置 , 颜色二 止色位置 , 颜色三 止色位置);<br><br>         （1）角度默认是180度，从上到下 ，0度从下到上，90度从左到右，总结就是小值到大值呈现顺时针<br><br>         （2）也可以是使用to 方位名词的形式去确定渐变的角度，更直观一些<br><br>         （3）止色的值（颜色在什么位置停止）可以是像素，和百分比，多用百分比去控制，如果后面颜色的值小于前面颜色的值过渡会很生硬<br></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//注意：渐变实际上相当与一张图片，因为需要加给<span class="attribute">background-image</span>才会生效</span><br><span class="line">//渐变的两个要求：有区间，有颜色变化。</span><br><span class="line">//最简单的渐变</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(red, green);</span><br><span class="line">//设定渐变的方向</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, red, green);</span><br><span class="line">//也可以设定渐变的角度</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, red, green);</span><br><span class="line">//设定渐变的范围</span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right, red <span class="number">20%</span>, green <span class="number">80%</span>)</span><br><span class="line">//每一个区间表示渐变颜色的范围</span><br><span class="line">background-image: <span class="built_in">linear-gradient</span>(to right, red <span class="number">20%</span>, green <span class="number">20%</span>)</span><br></pre></td></tr></table></figure><h5 id="8-2-径向渐变-radial-gradient"><a href="#8-2-径向渐变-radial-gradient" class="headerlink" title="8.2 径向渐变(radial-gradient)"></a>8.2 径向渐变(radial-gradient)</h5><blockquote><p>background:radial-gradient(圆的半径 at 圆心点的位置,颜色一 止色位置,颜色二 止色位置 ,颜色三 止色位置);<br><br>         （1）圆的半径分为水平和垂直半径<br><br>         （2）当圆的半径是一个值的情况下，是正圆，表示水平和垂直的半径都是一样的，当圆的半径为两个不一样的值情况下，是椭圆<br><br>         （3）圆心点的位置默认在中间，可以接受像素和半分比 及其方位名词<br><br>         （4）止色的值（颜色在什么位置停止）可以是像素，和百分比，多用百分比去控制</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*1. 最简单的渐变*/</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(red, green);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2. 指定圆的半径和圆心*/</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(<span class="number">200px</span> at center, red, green);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3. 指定椭圆*/</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">radial-gradient</span>(<span class="number">200px</span> <span class="number">80px</span> at center, red, green);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*4. 指定范围</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    background-image: radial-gradient(200px at center, green 50%, red 50%);</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><h5 id="8-3-私有前缀"><a href="#8-3-私有前缀" class="headerlink" title="8.3 私有前缀"></a>8.3 私有前缀</h5><blockquote><p>作用：兼容低版本的一些高级浏览器，或者一些特定的css3属性需要添加私有前缀才起作用。<br><br> 每一条css3属性合理来说都需要添加对应浏览器的前缀，以保证其兼容性:<br></p></blockquote><blockquote><p>谷歌 苹果：-webkit- <br><br> 火狐：-moz-<br><br> IE：-ms-<br><br> o：-o-<br></p></blockquote><blockquote><p>小细节：在手机端，一般来说只需要写一个-webkit-（针对国内的绝大部分手机端）<br>         添加的位置：大部分都是直接添加到最前面，css2没有的属性都是添加在最前面的，有一些是css2就有的属性是添加在后面的（background：-webkit-linear-gradient（））</p></blockquote><h3 id="九-2D转换"><a href="#九-2D转换" class="headerlink" title="九.  2D转换"></a>九.  2D转换</h3><h5 id="9-1-过渡"><a href="#9-1-过渡" class="headerlink" title="9.1 过渡"></a>9.1 过渡</h5><blockquote><p>transition：过渡是CSS3中具有颠覆性的特征之一，可以实现元素不同状态间的平滑过渡（补间动画），经常用来制作动画效果。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//<span class="attribute">transition-property</span>：设置过渡属性</span><br><span class="line">//也可以是<span class="attribute">width</span>,<span class="attribute">height</span></span><br><span class="line"><span class="attribute">transition-property</span>:all;</span><br><span class="line"></span><br><span class="line">//<span class="attribute">transition-duration</span>:设置过渡时间</span><br><span class="line">transition-duration:<span class="number">1s</span>;<span class="comment">/*过渡的时间*/</span></span><br><span class="line"></span><br><span class="line">//<span class="attribute">transition-delay</span>：设置过渡延时</span><br><span class="line"><span class="attribute">transition-delay</span>:<span class="number">2s</span>;<span class="comment">/*2秒之后才进行动画*/</span></span><br><span class="line"></span><br><span class="line">//<span class="attribute">transition-timing-function</span>:设置过渡的速度</span><br><span class="line">//linear，ease，ease-in，ease-out，ease-in-out， <span class="built_in">steps</span>(<span class="number">10</span>)</span><br><span class="line">transition-timing-function:linear;</span><br></pre></td></tr></table></figure><h5 id="9-2-transform"><a href="#9-2-transform" class="headerlink" title="9.2 transform"></a>9.2 transform</h5><blockquote><p>transform: 转换，是CSS3最具颠覆性的几个特性之一，既可以用于2D转换，也可以用于3D转换。<br>transform：2D转换，元素在平面上实现移动、旋转、缩放、斜切等操作.</p></blockquote><h5 id="1-scale缩放"><a href="#1-scale缩放" class="headerlink" title="(1) scale缩放"></a>(1) scale缩放</h5><blockquote><p>注意：<br>scale接收的值是倍数，因此没有单位<br>scale可以是一个值，如果是一个值，不是说仅仅缩放宽度，高度也会等比例的缩放。<br>可以通过transition-origin设定旋转原点</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">scaleX</span>(<span class="number">0.5</span>);//让宽度变化</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scaleY</span>(<span class="number">0.5</span>);//让高度变化，注意不能写多个<span class="attribute">transform</span>，不然会覆盖。</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);//让宽度和高度同时变化</span><br></pre></td></tr></table></figure><h5 id="2-translate平移"><a href="#2-translate平移" class="headerlink" title="(2) translate平移"></a>(2) translate平移</h5><blockquote><p>注意：<br>translate的值可以是px，也可以是百分比，如果是百分比，那么参照的是自身的宽高。<br>translate移动的元素并不会影响其他盒子，类似于相对定位。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">100px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">100px</span>);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50%</span>, <span class="number">50%</span>);</span><br></pre></td></tr></table></figure><h5 id="3-rotate旋转"><a href="#3-rotate旋转" class="headerlink" title="(3) rotate旋转"></a>(3) rotate旋转</h5><blockquote><p>注意：<br>单位是deg，角度，不是px<br>正值顺时针转，负值逆时针转<br>可以通过transition-origin设定旋转原点<br>转换原点写在A状态，不能写在B状态</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">360deg</span>);//旋转<span class="number">360</span>度</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">360deg</span>);//逆时针旋转<span class="number">360</span>度</span><br></pre></td></tr></table></figure><h5 id="4-skew斜切"><a href="#4-skew斜切" class="headerlink" title="(4) skew斜切"></a>(4) skew斜切</h5><blockquote><p>skew在实际开发中，是用的最少的一个属性。一般来说，x和y只会倾斜其中的一个.      </p></blockquote><pre><code>/*在水平方向倾斜30deg*/transform: skewX(30deg);/*在垂直方向倾斜30deg*/transform: skewY(30deg);</code></pre><h5 id="5-transform-origin转换原点"><a href="#5-transform-origin转换原点" class="headerlink" title="(5) transform-origin转换原点"></a>(5) transform-origin转换原点</h5><blockquote><p>通过transform-origin可以设置转换的中心原点。</p></blockquote><pre><code>transform-origin: center center;transform-origin: 40px 40px;</code></pre><h5 id="6-转换合写问题"><a href="#6-转换合写问题" class="headerlink" title="(6) 转换合写问题"></a>(6) 转换合写问题</h5><pre><code> transform:translateX(800px)  scale(1.5)  rotate(360deg) ;   </code></pre><blockquote><ol><li>transform属性只能写一个，如果写了多个会覆盖</li><li>transform属性可以连写，但是顺序对效果有影响的，因为它会在第一个效果的基础上执行第二个效果，然后执行第三个效果（通常会把rotate放后面）</li><li>如果对transform进行过度效果的时候，初始状态和结束状态一一对应</li></ol></blockquote><h3 id="十-3D转换"><a href="#十-3D转换" class="headerlink" title="十. 3D转换"></a>十. 3D转换</h3><h5 id="1-rotateX"><a href="#1-rotateX" class="headerlink" title="(1) rotateX"></a>(1) rotateX</h5><blockquote><p>让元素围绕着X轴进行旋转<br>  （1）正值表示推到，负值表示鞠躬<br>  （2）没有透视的3D是看不出来方向</p></blockquote><h5 id="2-rotateY"><a href="#2-rotateY" class="headerlink" title="(2) rotateY"></a>(2) rotateY</h5><blockquote><p>围绕着Y轴进行旋转<br>（1）正数是逆时针 （站在右边推门），负数是顺时针（站在左边推门）</p></blockquote><h5 id="3-定义元素背过去是否可见"><a href="#3-定义元素背过去是否可见" class="headerlink" title="(3)定义元素背过去是否可见"></a>(3)定义元素背过去是否可见</h5><pre><code>  backface-visibility: visible|hidden;</code></pre><blockquote><p>说明：visible表示可见，hidden表示不可见<br>测试贝塞尔曲线的网址：<a href="http://xuanfengge.com/easeing/ceaser/">http://xuanfengge.com/easeing/ceaser/</a></p></blockquote><h5 id="4-translateZ"><a href="#4-translateZ" class="headerlink" title="(4) translateZ"></a>(4) translateZ</h5><blockquote><p>就是在Z轴上来回移动，但是如果没有透视的情况下，完全看不出效果<br>小经验：translateZ和rotate结合会产生不一样的3D效果，不同的顺序的效果截然不同，如果先rotate 在translateZ 元素是在空间里面发生旋转 而如果是translateZ在rotate 元素是在直线上发生旋转</p></blockquote><h5 id="（5）透视-（景深）"><a href="#（5）透视-（景深）" class="headerlink" title="（5）透视 （景深）"></a>（5）透视 （景深）</h5><pre><code>perspective：值</code></pre><blockquote><p>说明：透视值越小，透视效果越强，值越大，透视效果越弱，透视添加在父级身上.</p></blockquote><h5 id="（6）灭点（透视点，消失点）"><a href="#（6）灭点（透视点，消失点）" class="headerlink" title="（6）灭点（透视点，消失点）"></a>（6）灭点（透视点，消失点）</h5><pre><code>perspective-origin：值</code></pre><blockquote><p>说明：值可以是像素，也可以是百分比，还可以是方位名词，默认值是50%，50%（中心点）.</p></blockquote><h5 id="（7）transform-style"><a href="#（7）transform-style" class="headerlink" title="（7）transform-style"></a>（7）transform-style</h5><pre><code>transform-style:preserve-3d;</code></pre><blockquote><p>作用：规定被嵌套元素如何在3D空间中显示<br>值说明：<br><br>flat是默认值，让子元素不保留其3D位置，<br> preserve-3d  让子元素保留其3D位置 ，加在父亲身上<br></p></blockquote><p>小总结：透视 灭点 transform-style都是添加在父级身上<br>关键： 当元素发生3D翻转的时候，整个坐标系也跟着发生了翻转！！</p><h3 id="十一-C3动画"><a href="#十一-C3动画" class="headerlink" title="十一. C3动画"></a>十一. C3动画</h3><blockquote><p>动画也是CSS3中具有颠覆性的特征之一，可以通过设置多个节点来精确控制一个或者一组动画，常用来实现复杂的动画效果。</p></blockquote><h5 id="11-1-动画与过渡的区别："><a href="#11-1-动画与过渡的区别：" class="headerlink" title="11.1 动画与过渡的区别："></a>11.1 动画与过渡的区别：</h5><blockquote><p>(1) 过渡必须触发，需要两个状态的改变。<br><br>(2)动画可以一直运行下去，不需要触发。实现效果与过渡差不多:</p></blockquote><blockquote><p>1.通过@keyframes指定动画序列<br><br>2.通过百分比或者from/to将动画分割成多个节点<br><br>3.在各个节点中分别定义动画属性<br><br>4.通过animation将动画应用于相应的元素</p></blockquote><h5 id="11-2-animation详解"><a href="#11-2-animation详解" class="headerlink" title="11.2 animation详解:"></a>11.2 animation详解:</h5><blockquote><p>animation是一个复合属性，一共有8个参数:<br>animation-name:动画名称，由@keyframes定义的<br>animation-duration：动画的持续时间<br>animation-timing-function：动画的过渡类型<br>animation-delay：动画的延迟时间<br>animation-iteration-count：动画的循环次数<br>animation-direction：设置动画在循环中是否反向运动<br>animation-fill-mode：设置动画时间之外的状态<br>animattion-play-state:设置动画的状态。</p></blockquote><blockquote><p>值说明：<br><br>（1）自定义动画名 <br><br>（2）动画的持续时间 单位是s或者ms<br><br>（3）动画的曲线<br><br>（4）动画从何时开始<br><br>（5）控制动画执行的次数  没有单位， 一直执行：infinite<br><br>（6）控制动画是否逆序播放  默认值normal  逆序：alternate<br><br>（7）控制动画的播放和暂停  默认值是播放：running   暂停：paused<br><br>（8）动画最后的停留位置  forwards 让动画停留在最后一帧<br><br>动画一定要先写animation 然后搭配@keyframes去写自定义的动画 </p></blockquote><pre><code>    &lt;style&gt;        .box &#123;            width: 200px;            height: 200px;            background-color: cyan;            position: absolute;            left: 0;            top: 0;            animation: donghua 2s ease ;        &#125;        @keyframes donghua &#123;            0% &#123;                width: 200px;                height: 200px;                background-color: cyan;                border-radius: 0;            &#125;            100%&#123;                width: 400px;                height: 400px;                background-color: green;                border-radius: 50%;            &#125;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;&lt;/body&gt;</code></pre><h5 id="11-3-帧动画"><a href="#11-3-帧动画" class="headerlink" title="11.3 帧动画"></a>11.3 帧动画</h5><pre><code>steps（帧数）</code></pre><blockquote><p>其实就是让动画分成多少步去执行，steps（）里面的数值是总画面数 - 1 ，在制作精灵图的时候每个画面的宽度尽量一致，并且建议在一行里面摆放.</p></blockquote><h5 id="11-4-animate-css库的使用"><a href="#11-4-animate-css库的使用" class="headerlink" title="11.4 animate.css库的使用"></a>11.4 animate.css库的使用</h5><blockquote><p>官网：<a href="https://daneden.github.io/animate.css/">https://daneden.github.io/animate.css/</a><br>作用：将一切常见的动画直接封装，开发者不需要考虑实现过程，只需要添加对应的类就能实现动画效果<br>使用步骤：<br>（1）将下载下来的animate.css 引入到你的项目中；<br>（2）去官网获取想要的效果 给对应的元素添加上animated 类 （必填）和你想要的效果的类；</p></blockquote><h3 id="12-弹性布局-flex"><a href="#12-弹性布局-flex" class="headerlink" title="12. 弹性布局 flex"></a>12. 弹性布局 flex</h3><blockquote><p>阮一峰的博客<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
